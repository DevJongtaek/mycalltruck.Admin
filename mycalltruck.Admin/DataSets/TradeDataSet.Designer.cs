//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace mycalltruck.Admin.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("TradeDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class TradeDataSet : global::System.Data.DataSet {
        
        private TradesDataTable tableTrades;
        
        private TradesBasKetDataTable tableTradesBasKet;
        
        private TaxOutDataTable tableTaxOut;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public TradeDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected TradeDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Trades"] != null)) {
                    base.Tables.Add(new TradesDataTable(ds.Tables["Trades"]));
                }
                if ((ds.Tables["TradesBasKet"] != null)) {
                    base.Tables.Add(new TradesBasKetDataTable(ds.Tables["TradesBasKet"]));
                }
                if ((ds.Tables["TaxOut"] != null)) {
                    base.Tables.Add(new TaxOutDataTable(ds.Tables["TaxOut"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TradesDataTable Trades {
            get {
                return this.tableTrades;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TradesBasKetDataTable TradesBasKet {
            get {
                return this.tableTradesBasKet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TaxOutDataTable TaxOut {
            get {
                return this.tableTaxOut;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            TradeDataSet cln = ((TradeDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Trades"] != null)) {
                    base.Tables.Add(new TradesDataTable(ds.Tables["Trades"]));
                }
                if ((ds.Tables["TradesBasKet"] != null)) {
                    base.Tables.Add(new TradesBasKetDataTable(ds.Tables["TradesBasKet"]));
                }
                if ((ds.Tables["TaxOut"] != null)) {
                    base.Tables.Add(new TaxOutDataTable(ds.Tables["TaxOut"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTrades = ((TradesDataTable)(base.Tables["Trades"]));
            if ((initTable == true)) {
                if ((this.tableTrades != null)) {
                    this.tableTrades.InitVars();
                }
            }
            this.tableTradesBasKet = ((TradesBasKetDataTable)(base.Tables["TradesBasKet"]));
            if ((initTable == true)) {
                if ((this.tableTradesBasKet != null)) {
                    this.tableTradesBasKet.InitVars();
                }
            }
            this.tableTaxOut = ((TaxOutDataTable)(base.Tables["TaxOut"]));
            if ((initTable == true)) {
                if ((this.tableTaxOut != null)) {
                    this.tableTaxOut.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "TradeDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TradeDataSet.xsd";
            this.EnforceConstraints = false;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTrades = new TradesDataTable();
            base.Tables.Add(this.tableTrades);
            this.tableTradesBasKet = new TradesBasKetDataTable();
            base.Tables.Add(this.tableTradesBasKet);
            this.tableTaxOut = new TaxOutDataTable();
            base.Tables.Add(this.tableTaxOut);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeTrades() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeTradesBasKet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeTaxOut() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            TradeDataSet ds = new TradeDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void TradesRowChangeEventHandler(object sender, TradesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void TradesBasKetRowChangeEventHandler(object sender, TradesBasKetRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void TaxOutRowChangeEventHandler(object sender, TaxOutRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TradesDataTable : global::System.Data.TypedTableBase<TradesRow> {
            
            private global::System.Data.DataColumn columnTradeId;
            
            private global::System.Data.DataColumn columnRequestDate;
            
            private global::System.Data.DataColumn columnBeginDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnItem;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnVAT;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnPayState;
            
            private global::System.Data.DataColumn columnPayDate;
            
            private global::System.Data.DataColumn columnPayBankName;
            
            private global::System.Data.DataColumn columnPayBankCode;
            
            private global::System.Data.DataColumn columnPayAccountNo;
            
            private global::System.Data.DataColumn columnPayInputName;
            
            private global::System.Data.DataColumn columnDriverId;
            
            private global::System.Data.DataColumn columnClientId;
            
            private global::System.Data.DataColumn columnUseTax;
            
            private global::System.Data.DataColumn columnLGD_OID;
            
            private global::System.Data.DataColumn columnLGD_Result;
            
            private global::System.Data.DataColumn columnLGD_Accept_Date;
            
            private global::System.Data.DataColumn columnLGD_Cancel_Date;
            
            private global::System.Data.DataColumn columnLGD_Last_Function;
            
            private global::System.Data.DataColumn columnLGD_Last_Date;
            
            private global::System.Data.DataColumn columnAllowAcc;
            
            private global::System.Data.DataColumn columnHasAcc;
            
            private global::System.Data.DataColumn columnClientAccId;
            
            private global::System.Data.DataColumn columnSUMYN;
            
            private global::System.Data.DataColumn columnSumPrice;
            
            private global::System.Data.DataColumn columnSumVAT;
            
            private global::System.Data.DataColumn columnSumAmount;
            
            private global::System.Data.DataColumn columnSUMFROMDate;
            
            private global::System.Data.DataColumn columnSUMToDate;
            
            private global::System.Data.DataColumn columnImage1;
            
            private global::System.Data.DataColumn columnImage2;
            
            private global::System.Data.DataColumn columnImage3;
            
            private global::System.Data.DataColumn columnImage4;
            
            private global::System.Data.DataColumn columnImage5;
            
            private global::System.Data.DataColumn columnImage6;
            
            private global::System.Data.DataColumn columnImage7;
            
            private global::System.Data.DataColumn columnImage8;
            
            private global::System.Data.DataColumn columnImage9;
            
            private global::System.Data.DataColumn columnImage10;
            
            private global::System.Data.DataColumn columnHasETax;
            
            private global::System.Data.DataColumn columnSourceType;
            
            private global::System.Data.DataColumn columnClientCode;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnDriverCarNo;
            
            private global::System.Data.DataColumn columnDriverBizNo;
            
            private global::System.Data.DataColumn columnDriverName;
            
            private global::System.Data.DataColumn columnDriverLoginId;
            
            private global::System.Data.DataColumn columnMID;
            
            private global::System.Data.DataColumn columnServiceState;
            
            private global::System.Data.DataColumn columnDriverMobileNo;
            
            private global::System.Data.DataColumn columnAcceptCount;
            
            private global::System.Data.DataColumn columnSubClientId;
            
            private global::System.Data.DataColumn columnClientUserId;
            
            private global::System.Data.DataColumn columnPointMethod;
            
            private global::System.Data.DataColumn columnFee;
            
            private global::System.Data.DataColumn columnBizNo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExcelExportYN;
            
            private global::System.Data.DataColumn columnEtaxCanCelYN;
            
            private global::System.Data.DataColumn columntrusteeMgtKey;
            
            private global::System.Data.DataColumn columnTransportDate;
            
            private global::System.Data.DataColumn columnStartState;
            
            private global::System.Data.DataColumn columnStopState;
            
            private global::System.Data.DataColumn columnPdfFileName;
            
            private global::System.Data.DataColumn columnAipId;
            
            private global::System.Data.DataColumn columnDocId;
            
            private global::System.Data.DataColumn columnDeleteYn;
            
            private global::System.Data.DataColumn columnUpdateDateTime;
            
            private global::System.Data.DataColumn columnOTradeId;
            
            private global::System.Data.DataColumn columnReferralId;
            
            private global::System.Data.DataColumn columnTaxGubun;
            
            private global::System.Data.DataColumn columnbillNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TradesDataTable() {
                this.TableName = "Trades";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal TradesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected TradesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TradeIdColumn {
                get {
                    return this.columnTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RequestDateColumn {
                get {
                    return this.columnRequestDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BeginDateColumn {
                get {
                    return this.columnBeginDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ItemColumn {
                get {
                    return this.columnItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.columnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PayStateColumn {
                get {
                    return this.columnPayState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PayDateColumn {
                get {
                    return this.columnPayDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PayBankNameColumn {
                get {
                    return this.columnPayBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PayBankCodeColumn {
                get {
                    return this.columnPayBankCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PayAccountNoColumn {
                get {
                    return this.columnPayAccountNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PayInputNameColumn {
                get {
                    return this.columnPayInputName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverIdColumn {
                get {
                    return this.columnDriverId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientIdColumn {
                get {
                    return this.columnClientId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UseTaxColumn {
                get {
                    return this.columnUseTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LGD_OIDColumn {
                get {
                    return this.columnLGD_OID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LGD_ResultColumn {
                get {
                    return this.columnLGD_Result;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LGD_Accept_DateColumn {
                get {
                    return this.columnLGD_Accept_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LGD_Cancel_DateColumn {
                get {
                    return this.columnLGD_Cancel_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LGD_Last_FunctionColumn {
                get {
                    return this.columnLGD_Last_Function;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LGD_Last_DateColumn {
                get {
                    return this.columnLGD_Last_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AllowAccColumn {
                get {
                    return this.columnAllowAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HasAccColumn {
                get {
                    return this.columnHasAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientAccIdColumn {
                get {
                    return this.columnClientAccId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SUMYNColumn {
                get {
                    return this.columnSUMYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SumPriceColumn {
                get {
                    return this.columnSumPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SumVATColumn {
                get {
                    return this.columnSumVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SumAmountColumn {
                get {
                    return this.columnSumAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SUMFROMDateColumn {
                get {
                    return this.columnSUMFROMDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SUMToDateColumn {
                get {
                    return this.columnSUMToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image1Column {
                get {
                    return this.columnImage1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image2Column {
                get {
                    return this.columnImage2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image3Column {
                get {
                    return this.columnImage3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image4Column {
                get {
                    return this.columnImage4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image5Column {
                get {
                    return this.columnImage5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image6Column {
                get {
                    return this.columnImage6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image7Column {
                get {
                    return this.columnImage7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image8Column {
                get {
                    return this.columnImage8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image9Column {
                get {
                    return this.columnImage9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image10Column {
                get {
                    return this.columnImage10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HasETaxColumn {
                get {
                    return this.columnHasETax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SourceTypeColumn {
                get {
                    return this.columnSourceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientCodeColumn {
                get {
                    return this.columnClientCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverCarNoColumn {
                get {
                    return this.columnDriverCarNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverBizNoColumn {
                get {
                    return this.columnDriverBizNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverNameColumn {
                get {
                    return this.columnDriverName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverLoginIdColumn {
                get {
                    return this.columnDriverLoginId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MIDColumn {
                get {
                    return this.columnMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ServiceStateColumn {
                get {
                    return this.columnServiceState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverMobileNoColumn {
                get {
                    return this.columnDriverMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AcceptCountColumn {
                get {
                    return this.columnAcceptCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SubClientIdColumn {
                get {
                    return this.columnSubClientId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientUserIdColumn {
                get {
                    return this.columnClientUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PointMethodColumn {
                get {
                    return this.columnPointMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FeeColumn {
                get {
                    return this.columnFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BizNoColumn {
                get {
                    return this.columnBizNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ExcelExportYNColumn {
                get {
                    return this.columnExcelExportYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EtaxCanCelYNColumn {
                get {
                    return this.columnEtaxCanCelYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn trusteeMgtKeyColumn {
                get {
                    return this.columntrusteeMgtKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TransportDateColumn {
                get {
                    return this.columnTransportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StartStateColumn {
                get {
                    return this.columnStartState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StopStateColumn {
                get {
                    return this.columnStopState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PdfFileNameColumn {
                get {
                    return this.columnPdfFileName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AipIdColumn {
                get {
                    return this.columnAipId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DocIdColumn {
                get {
                    return this.columnDocId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DeleteYnColumn {
                get {
                    return this.columnDeleteYn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UpdateDateTimeColumn {
                get {
                    return this.columnUpdateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OTradeIdColumn {
                get {
                    return this.columnOTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ReferralIdColumn {
                get {
                    return this.columnReferralId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TaxGubunColumn {
                get {
                    return this.columnTaxGubun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn billNoColumn {
                get {
                    return this.columnbillNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TradesRow this[int index] {
                get {
                    return ((TradesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TradesRowChangeEventHandler TradesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TradesRowChangeEventHandler TradesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TradesRowChangeEventHandler TradesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TradesRowChangeEventHandler TradesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddTradesRow(TradesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TradesRow AddTradesRow(
                        System.DateTime RequestDate, 
                        System.DateTime BeginDate, 
                        System.DateTime EndDate, 
                        string Item, 
                        decimal Price, 
                        decimal VAT, 
                        decimal Amount, 
                        int PayState, 
                        System.DateTime PayDate, 
                        string PayBankName, 
                        string PayBankCode, 
                        string PayAccountNo, 
                        string PayInputName, 
                        int DriverId, 
                        int ClientId, 
                        bool UseTax, 
                        string LGD_OID, 
                        string LGD_Result, 
                        System.DateTime LGD_Accept_Date, 
                        System.DateTime LGD_Cancel_Date, 
                        string LGD_Last_Function, 
                        System.DateTime LGD_Last_Date, 
                        bool AllowAcc, 
                        bool HasAcc, 
                        int ClientAccId, 
                        int SUMYN, 
                        decimal SumPrice, 
                        decimal SumVAT, 
                        decimal SumAmount, 
                        string SUMFROMDate, 
                        string SUMToDate, 
                        string Image1, 
                        string Image2, 
                        string Image3, 
                        string Image4, 
                        string Image5, 
                        string Image6, 
                        string Image7, 
                        string Image8, 
                        string Image9, 
                        string Image10, 
                        bool HasETax, 
                        int SourceType, 
                        string ClientCode, 
                        string ClientName, 
                        string DriverCarNo, 
                        string DriverBizNo, 
                        string DriverName, 
                        string DriverLoginId, 
                        string MID, 
                        int ServiceState, 
                        string DriverMobileNo, 
                        int AcceptCount, 
                        int SubClientId, 
                        int ClientUserId, 
                        int PointMethod, 
                        decimal Fee, 
                        string BizNo, 
                        string Name, 
                        string ExcelExportYN, 
                        string EtaxCanCelYN, 
                        string trusteeMgtKey, 
                        System.DateTime TransportDate, 
                        string StartState, 
                        string StopState, 
                        string PdfFileName, 
                        string AipId, 
                        string DocId, 
                        string DeleteYn, 
                        string UpdateDateTime, 
                        long OTradeId, 
                        long ReferralId, 
                        string TaxGubun, 
                        string billNo) {
                TradesRow rowTradesRow = ((TradesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RequestDate,
                        BeginDate,
                        EndDate,
                        Item,
                        Price,
                        VAT,
                        Amount,
                        PayState,
                        PayDate,
                        PayBankName,
                        PayBankCode,
                        PayAccountNo,
                        PayInputName,
                        DriverId,
                        ClientId,
                        UseTax,
                        LGD_OID,
                        LGD_Result,
                        LGD_Accept_Date,
                        LGD_Cancel_Date,
                        LGD_Last_Function,
                        LGD_Last_Date,
                        AllowAcc,
                        HasAcc,
                        ClientAccId,
                        SUMYN,
                        SumPrice,
                        SumVAT,
                        SumAmount,
                        SUMFROMDate,
                        SUMToDate,
                        Image1,
                        Image2,
                        Image3,
                        Image4,
                        Image5,
                        Image6,
                        Image7,
                        Image8,
                        Image9,
                        Image10,
                        HasETax,
                        SourceType,
                        ClientCode,
                        ClientName,
                        DriverCarNo,
                        DriverBizNo,
                        DriverName,
                        DriverLoginId,
                        MID,
                        ServiceState,
                        DriverMobileNo,
                        AcceptCount,
                        SubClientId,
                        ClientUserId,
                        PointMethod,
                        Fee,
                        BizNo,
                        Name,
                        ExcelExportYN,
                        EtaxCanCelYN,
                        trusteeMgtKey,
                        TransportDate,
                        StartState,
                        StopState,
                        PdfFileName,
                        AipId,
                        DocId,
                        DeleteYn,
                        UpdateDateTime,
                        OTradeId,
                        ReferralId,
                        TaxGubun,
                        billNo};
                rowTradesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTradesRow);
                return rowTradesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TradesRow FindByTradeId(int TradeId) {
                return ((TradesRow)(this.Rows.Find(new object[] {
                            TradeId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TradesDataTable cln = ((TradesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TradesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnTradeId = base.Columns["TradeId"];
                this.columnRequestDate = base.Columns["RequestDate"];
                this.columnBeginDate = base.Columns["BeginDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnItem = base.Columns["Item"];
                this.columnPrice = base.Columns["Price"];
                this.columnVAT = base.Columns["VAT"];
                this.columnAmount = base.Columns["Amount"];
                this.columnPayState = base.Columns["PayState"];
                this.columnPayDate = base.Columns["PayDate"];
                this.columnPayBankName = base.Columns["PayBankName"];
                this.columnPayBankCode = base.Columns["PayBankCode"];
                this.columnPayAccountNo = base.Columns["PayAccountNo"];
                this.columnPayInputName = base.Columns["PayInputName"];
                this.columnDriverId = base.Columns["DriverId"];
                this.columnClientId = base.Columns["ClientId"];
                this.columnUseTax = base.Columns["UseTax"];
                this.columnLGD_OID = base.Columns["LGD_OID"];
                this.columnLGD_Result = base.Columns["LGD_Result"];
                this.columnLGD_Accept_Date = base.Columns["LGD_Accept_Date"];
                this.columnLGD_Cancel_Date = base.Columns["LGD_Cancel_Date"];
                this.columnLGD_Last_Function = base.Columns["LGD_Last_Function"];
                this.columnLGD_Last_Date = base.Columns["LGD_Last_Date"];
                this.columnAllowAcc = base.Columns["AllowAcc"];
                this.columnHasAcc = base.Columns["HasAcc"];
                this.columnClientAccId = base.Columns["ClientAccId"];
                this.columnSUMYN = base.Columns["SUMYN"];
                this.columnSumPrice = base.Columns["SumPrice"];
                this.columnSumVAT = base.Columns["SumVAT"];
                this.columnSumAmount = base.Columns["SumAmount"];
                this.columnSUMFROMDate = base.Columns["SUMFROMDate"];
                this.columnSUMToDate = base.Columns["SUMToDate"];
                this.columnImage1 = base.Columns["Image1"];
                this.columnImage2 = base.Columns["Image2"];
                this.columnImage3 = base.Columns["Image3"];
                this.columnImage4 = base.Columns["Image4"];
                this.columnImage5 = base.Columns["Image5"];
                this.columnImage6 = base.Columns["Image6"];
                this.columnImage7 = base.Columns["Image7"];
                this.columnImage8 = base.Columns["Image8"];
                this.columnImage9 = base.Columns["Image9"];
                this.columnImage10 = base.Columns["Image10"];
                this.columnHasETax = base.Columns["HasETax"];
                this.columnSourceType = base.Columns["SourceType"];
                this.columnClientCode = base.Columns["ClientCode"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnDriverCarNo = base.Columns["DriverCarNo"];
                this.columnDriverBizNo = base.Columns["DriverBizNo"];
                this.columnDriverName = base.Columns["DriverName"];
                this.columnDriverLoginId = base.Columns["DriverLoginId"];
                this.columnMID = base.Columns["MID"];
                this.columnServiceState = base.Columns["ServiceState"];
                this.columnDriverMobileNo = base.Columns["DriverMobileNo"];
                this.columnAcceptCount = base.Columns["AcceptCount"];
                this.columnSubClientId = base.Columns["SubClientId"];
                this.columnClientUserId = base.Columns["ClientUserId"];
                this.columnPointMethod = base.Columns["PointMethod"];
                this.columnFee = base.Columns["Fee"];
                this.columnBizNo = base.Columns["BizNo"];
                this.columnName = base.Columns["Name"];
                this.columnExcelExportYN = base.Columns["ExcelExportYN"];
                this.columnEtaxCanCelYN = base.Columns["EtaxCanCelYN"];
                this.columntrusteeMgtKey = base.Columns["trusteeMgtKey"];
                this.columnTransportDate = base.Columns["TransportDate"];
                this.columnStartState = base.Columns["StartState"];
                this.columnStopState = base.Columns["StopState"];
                this.columnPdfFileName = base.Columns["PdfFileName"];
                this.columnAipId = base.Columns["AipId"];
                this.columnDocId = base.Columns["DocId"];
                this.columnDeleteYn = base.Columns["DeleteYn"];
                this.columnUpdateDateTime = base.Columns["UpdateDateTime"];
                this.columnOTradeId = base.Columns["OTradeId"];
                this.columnReferralId = base.Columns["ReferralId"];
                this.columnTaxGubun = base.Columns["TaxGubun"];
                this.columnbillNo = base.Columns["billNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnTradeId = new global::System.Data.DataColumn("TradeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeId);
                this.columnRequestDate = new global::System.Data.DataColumn("RequestDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestDate);
                this.columnBeginDate = new global::System.Data.DataColumn("BeginDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeginDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnItem = new global::System.Data.DataColumn("Item", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Item");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "ItemColumn");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnItem");
                this.columnItem.ExtendedProperties.Add("Generator_UserColumnName", "Item");
                base.Columns.Add(this.columnItem);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnVAT = new global::System.Data.DataColumn("VAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnPayState = new global::System.Data.DataColumn("PayState", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayState);
                this.columnPayDate = new global::System.Data.DataColumn("PayDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayDate);
                this.columnPayBankName = new global::System.Data.DataColumn("PayBankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayBankName);
                this.columnPayBankCode = new global::System.Data.DataColumn("PayBankCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayBankCode);
                this.columnPayAccountNo = new global::System.Data.DataColumn("PayAccountNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayAccountNo);
                this.columnPayInputName = new global::System.Data.DataColumn("PayInputName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayInputName);
                this.columnDriverId = new global::System.Data.DataColumn("DriverId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverId);
                this.columnClientId = new global::System.Data.DataColumn("ClientId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientId);
                this.columnUseTax = new global::System.Data.DataColumn("UseTax", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseTax);
                this.columnLGD_OID = new global::System.Data.DataColumn("LGD_OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLGD_OID);
                this.columnLGD_Result = new global::System.Data.DataColumn("LGD_Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLGD_Result);
                this.columnLGD_Accept_Date = new global::System.Data.DataColumn("LGD_Accept_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLGD_Accept_Date);
                this.columnLGD_Cancel_Date = new global::System.Data.DataColumn("LGD_Cancel_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLGD_Cancel_Date);
                this.columnLGD_Last_Function = new global::System.Data.DataColumn("LGD_Last_Function", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLGD_Last_Function);
                this.columnLGD_Last_Date = new global::System.Data.DataColumn("LGD_Last_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLGD_Last_Date);
                this.columnAllowAcc = new global::System.Data.DataColumn("AllowAcc", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowAcc);
                this.columnHasAcc = new global::System.Data.DataColumn("HasAcc", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasAcc);
                this.columnClientAccId = new global::System.Data.DataColumn("ClientAccId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientAccId);
                this.columnSUMYN = new global::System.Data.DataColumn("SUMYN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUMYN);
                this.columnSumPrice = new global::System.Data.DataColumn("SumPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumPrice);
                this.columnSumVAT = new global::System.Data.DataColumn("SumVAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumVAT);
                this.columnSumAmount = new global::System.Data.DataColumn("SumAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumAmount);
                this.columnSUMFROMDate = new global::System.Data.DataColumn("SUMFROMDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUMFROMDate);
                this.columnSUMToDate = new global::System.Data.DataColumn("SUMToDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUMToDate);
                this.columnImage1 = new global::System.Data.DataColumn("Image1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage1);
                this.columnImage2 = new global::System.Data.DataColumn("Image2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage2);
                this.columnImage3 = new global::System.Data.DataColumn("Image3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage3);
                this.columnImage4 = new global::System.Data.DataColumn("Image4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage4);
                this.columnImage5 = new global::System.Data.DataColumn("Image5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage5);
                this.columnImage6 = new global::System.Data.DataColumn("Image6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage6);
                this.columnImage7 = new global::System.Data.DataColumn("Image7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage7);
                this.columnImage8 = new global::System.Data.DataColumn("Image8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage8);
                this.columnImage9 = new global::System.Data.DataColumn("Image9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage9);
                this.columnImage10 = new global::System.Data.DataColumn("Image10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage10);
                this.columnHasETax = new global::System.Data.DataColumn("HasETax", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasETax);
                this.columnSourceType = new global::System.Data.DataColumn("SourceType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceType);
                this.columnClientCode = new global::System.Data.DataColumn("ClientCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientCode);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnDriverCarNo = new global::System.Data.DataColumn("DriverCarNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverCarNo);
                this.columnDriverBizNo = new global::System.Data.DataColumn("DriverBizNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverBizNo);
                this.columnDriverName = new global::System.Data.DataColumn("DriverName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverName);
                this.columnDriverLoginId = new global::System.Data.DataColumn("DriverLoginId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverLoginId);
                this.columnMID = new global::System.Data.DataColumn("MID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID);
                this.columnServiceState = new global::System.Data.DataColumn("ServiceState", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceState);
                this.columnDriverMobileNo = new global::System.Data.DataColumn("DriverMobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverMobileNo);
                this.columnAcceptCount = new global::System.Data.DataColumn("AcceptCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptCount);
                this.columnSubClientId = new global::System.Data.DataColumn("SubClientId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubClientId);
                this.columnClientUserId = new global::System.Data.DataColumn("ClientUserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientUserId);
                this.columnPointMethod = new global::System.Data.DataColumn("PointMethod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPointMethod);
                this.columnFee = new global::System.Data.DataColumn("Fee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFee);
                this.columnBizNo = new global::System.Data.DataColumn("BizNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBizNo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExcelExportYN = new global::System.Data.DataColumn("ExcelExportYN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcelExportYN);
                this.columnEtaxCanCelYN = new global::System.Data.DataColumn("EtaxCanCelYN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtaxCanCelYN);
                this.columntrusteeMgtKey = new global::System.Data.DataColumn("trusteeMgtKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrusteeMgtKey);
                this.columnTransportDate = new global::System.Data.DataColumn("TransportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransportDate);
                this.columnStartState = new global::System.Data.DataColumn("StartState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartState);
                this.columnStopState = new global::System.Data.DataColumn("StopState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStopState);
                this.columnPdfFileName = new global::System.Data.DataColumn("PdfFileName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdfFileName);
                this.columnAipId = new global::System.Data.DataColumn("AipId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAipId);
                this.columnDocId = new global::System.Data.DataColumn("DocId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocId);
                this.columnDeleteYn = new global::System.Data.DataColumn("DeleteYn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleteYn);
                this.columnUpdateDateTime = new global::System.Data.DataColumn("UpdateDateTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDateTime);
                this.columnOTradeId = new global::System.Data.DataColumn("OTradeId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTradeId);
                this.columnReferralId = new global::System.Data.DataColumn("ReferralId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferralId);
                this.columnTaxGubun = new global::System.Data.DataColumn("TaxGubun", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxGubun);
                this.columnbillNo = new global::System.Data.DataColumn("billNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbillNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTradeId}, true));
                this.columnTradeId.AutoIncrement = true;
                this.columnTradeId.AutoIncrementSeed = -1;
                this.columnTradeId.AutoIncrementStep = -1;
                this.columnTradeId.AllowDBNull = false;
                this.columnTradeId.ReadOnly = true;
                this.columnTradeId.Unique = true;
                this.columnRequestDate.AllowDBNull = false;
                this.columnBeginDate.AllowDBNull = false;
                this.columnEndDate.AllowDBNull = false;
                this.columnItem.MaxLength = 2147483647;
                this.columnPrice.AllowDBNull = false;
                this.columnVAT.AllowDBNull = false;
                this.columnAmount.AllowDBNull = false;
                this.columnPayState.AllowDBNull = false;
                this.columnPayBankName.MaxLength = 2147483647;
                this.columnPayBankCode.MaxLength = 2147483647;
                this.columnPayAccountNo.MaxLength = 2147483647;
                this.columnPayInputName.MaxLength = 2147483647;
                this.columnDriverId.AllowDBNull = false;
                this.columnUseTax.AllowDBNull = false;
                this.columnLGD_OID.MaxLength = 2147483647;
                this.columnLGD_Result.MaxLength = 2147483647;
                this.columnLGD_Last_Function.MaxLength = 2147483647;
                this.columnAllowAcc.AllowDBNull = false;
                this.columnHasAcc.AllowDBNull = false;
                this.columnSUMFROMDate.MaxLength = 2147483647;
                this.columnSUMToDate.MaxLength = 2147483647;
                this.columnImage1.MaxLength = 2147483647;
                this.columnImage2.MaxLength = 2147483647;
                this.columnImage3.MaxLength = 2147483647;
                this.columnImage4.MaxLength = 2147483647;
                this.columnImage5.MaxLength = 2147483647;
                this.columnImage6.MaxLength = 2147483647;
                this.columnImage7.MaxLength = 2147483647;
                this.columnImage8.MaxLength = 2147483647;
                this.columnImage9.MaxLength = 2147483647;
                this.columnImage10.MaxLength = 2147483647;
                this.columnHasETax.AllowDBNull = false;
                this.columnSourceType.AllowDBNull = false;
                this.columnAcceptCount.AllowDBNull = false;
                this.columnBizNo.MaxLength = 2147483647;
                this.columnName.MaxLength = 2147483647;
                this.columnExcelExportYN.MaxLength = 2147483647;
                this.columnEtaxCanCelYN.MaxLength = 2147483647;
                this.columntrusteeMgtKey.MaxLength = 2147483647;
                this.columnStartState.MaxLength = 2147483647;
                this.columnStopState.MaxLength = 2147483647;
                this.columnTaxGubun.ReadOnly = true;
                this.columnTaxGubun.MaxLength = 2147483647;
                this.columnbillNo.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TradesRow NewTradesRow() {
                return ((TradesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TradesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TradesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TradesRowChanged != null)) {
                    this.TradesRowChanged(this, new TradesRowChangeEvent(((TradesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TradesRowChanging != null)) {
                    this.TradesRowChanging(this, new TradesRowChangeEvent(((TradesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TradesRowDeleted != null)) {
                    this.TradesRowDeleted(this, new TradesRowChangeEvent(((TradesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TradesRowDeleting != null)) {
                    this.TradesRowDeleting(this, new TradesRowChangeEvent(((TradesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveTradesRow(TradesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TradeDataSet ds = new TradeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TradesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TradesBasKetDataTable : global::System.Data.TypedTableBase<TradesBasKetRow> {
            
            private global::System.Data.DataColumn columnTradeId;
            
            private global::System.Data.DataColumn columnRequestDate;
            
            private global::System.Data.DataColumn columnBeginDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnItem;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnVAT;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnPayState;
            
            private global::System.Data.DataColumn columnPayDate;
            
            private global::System.Data.DataColumn columnPayBankName;
            
            private global::System.Data.DataColumn columnPayBankCode;
            
            private global::System.Data.DataColumn columnPayAccountNo;
            
            private global::System.Data.DataColumn columnPayInputName;
            
            private global::System.Data.DataColumn columnDriverId;
            
            private global::System.Data.DataColumn columnClientId;
            
            private global::System.Data.DataColumn columnUseTax;
            
            private global::System.Data.DataColumn columnLGD_OID;
            
            private global::System.Data.DataColumn columnLGD_Result;
            
            private global::System.Data.DataColumn columnLGD_Accept_Date;
            
            private global::System.Data.DataColumn columnLGD_Cancel_Date;
            
            private global::System.Data.DataColumn columnLGD_Last_Function;
            
            private global::System.Data.DataColumn columnLGD_Last_Date;
            
            private global::System.Data.DataColumn columnAllowAcc;
            
            private global::System.Data.DataColumn columnHasAcc;
            
            private global::System.Data.DataColumn columnClientAccId;
            
            private global::System.Data.DataColumn columnSUMYN;
            
            private global::System.Data.DataColumn columnSumPrice;
            
            private global::System.Data.DataColumn columnSumVAT;
            
            private global::System.Data.DataColumn columnSumAmount;
            
            private global::System.Data.DataColumn columnSUMFROMDate;
            
            private global::System.Data.DataColumn columnSUMToDate;
            
            private global::System.Data.DataColumn columnImage1;
            
            private global::System.Data.DataColumn columnImage2;
            
            private global::System.Data.DataColumn columnImage3;
            
            private global::System.Data.DataColumn columnImage4;
            
            private global::System.Data.DataColumn columnImage5;
            
            private global::System.Data.DataColumn columnImage6;
            
            private global::System.Data.DataColumn columnImage7;
            
            private global::System.Data.DataColumn columnImage8;
            
            private global::System.Data.DataColumn columnImage9;
            
            private global::System.Data.DataColumn columnImage10;
            
            private global::System.Data.DataColumn columnHasETax;
            
            private global::System.Data.DataColumn columnSourceType;
            
            private global::System.Data.DataColumn columnClientCode;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnDriverCarNo;
            
            private global::System.Data.DataColumn columnDriverBizNo;
            
            private global::System.Data.DataColumn columnDriverName;
            
            private global::System.Data.DataColumn columnDriverLoginId;
            
            private global::System.Data.DataColumn columnMID;
            
            private global::System.Data.DataColumn columnServiceState;
            
            private global::System.Data.DataColumn columnDriverMobileNo;
            
            private global::System.Data.DataColumn columnAcceptCount;
            
            private global::System.Data.DataColumn columnSubClientId;
            
            private global::System.Data.DataColumn columnClientUserId;
            
            private global::System.Data.DataColumn columnPointMethod;
            
            private global::System.Data.DataColumn columnFee;
            
            private global::System.Data.DataColumn columnBizNo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExcelExportYN;
            
            private global::System.Data.DataColumn columnEtaxCanCelYN;
            
            private global::System.Data.DataColumn columntrusteeMgtKey;
            
            private global::System.Data.DataColumn columnTransportDate;
            
            private global::System.Data.DataColumn columnStartState;
            
            private global::System.Data.DataColumn columnStopState;
            
            private global::System.Data.DataColumn columnPdfFileName;
            
            private global::System.Data.DataColumn columnAipId;
            
            private global::System.Data.DataColumn columnDocId;
            
            private global::System.Data.DataColumn columnDeleteYn;
            
            private global::System.Data.DataColumn columnUpdateDateTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TradesBasKetDataTable() {
                this.TableName = "TradesBasKet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal TradesBasKetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected TradesBasKetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TradeIdColumn {
                get {
                    return this.columnTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RequestDateColumn {
                get {
                    return this.columnRequestDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BeginDateColumn {
                get {
                    return this.columnBeginDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ItemColumn {
                get {
                    return this.columnItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.columnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PayStateColumn {
                get {
                    return this.columnPayState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PayDateColumn {
                get {
                    return this.columnPayDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PayBankNameColumn {
                get {
                    return this.columnPayBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PayBankCodeColumn {
                get {
                    return this.columnPayBankCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PayAccountNoColumn {
                get {
                    return this.columnPayAccountNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PayInputNameColumn {
                get {
                    return this.columnPayInputName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverIdColumn {
                get {
                    return this.columnDriverId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientIdColumn {
                get {
                    return this.columnClientId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UseTaxColumn {
                get {
                    return this.columnUseTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LGD_OIDColumn {
                get {
                    return this.columnLGD_OID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LGD_ResultColumn {
                get {
                    return this.columnLGD_Result;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LGD_Accept_DateColumn {
                get {
                    return this.columnLGD_Accept_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LGD_Cancel_DateColumn {
                get {
                    return this.columnLGD_Cancel_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LGD_Last_FunctionColumn {
                get {
                    return this.columnLGD_Last_Function;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LGD_Last_DateColumn {
                get {
                    return this.columnLGD_Last_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AllowAccColumn {
                get {
                    return this.columnAllowAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HasAccColumn {
                get {
                    return this.columnHasAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientAccIdColumn {
                get {
                    return this.columnClientAccId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SUMYNColumn {
                get {
                    return this.columnSUMYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SumPriceColumn {
                get {
                    return this.columnSumPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SumVATColumn {
                get {
                    return this.columnSumVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SumAmountColumn {
                get {
                    return this.columnSumAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SUMFROMDateColumn {
                get {
                    return this.columnSUMFROMDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SUMToDateColumn {
                get {
                    return this.columnSUMToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image1Column {
                get {
                    return this.columnImage1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image2Column {
                get {
                    return this.columnImage2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image3Column {
                get {
                    return this.columnImage3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image4Column {
                get {
                    return this.columnImage4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image5Column {
                get {
                    return this.columnImage5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image6Column {
                get {
                    return this.columnImage6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image7Column {
                get {
                    return this.columnImage7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image8Column {
                get {
                    return this.columnImage8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image9Column {
                get {
                    return this.columnImage9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Image10Column {
                get {
                    return this.columnImage10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HasETaxColumn {
                get {
                    return this.columnHasETax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SourceTypeColumn {
                get {
                    return this.columnSourceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientCodeColumn {
                get {
                    return this.columnClientCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverCarNoColumn {
                get {
                    return this.columnDriverCarNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverBizNoColumn {
                get {
                    return this.columnDriverBizNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverNameColumn {
                get {
                    return this.columnDriverName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverLoginIdColumn {
                get {
                    return this.columnDriverLoginId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MIDColumn {
                get {
                    return this.columnMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ServiceStateColumn {
                get {
                    return this.columnServiceState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverMobileNoColumn {
                get {
                    return this.columnDriverMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AcceptCountColumn {
                get {
                    return this.columnAcceptCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SubClientIdColumn {
                get {
                    return this.columnSubClientId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientUserIdColumn {
                get {
                    return this.columnClientUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PointMethodColumn {
                get {
                    return this.columnPointMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FeeColumn {
                get {
                    return this.columnFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BizNoColumn {
                get {
                    return this.columnBizNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ExcelExportYNColumn {
                get {
                    return this.columnExcelExportYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EtaxCanCelYNColumn {
                get {
                    return this.columnEtaxCanCelYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn trusteeMgtKeyColumn {
                get {
                    return this.columntrusteeMgtKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TransportDateColumn {
                get {
                    return this.columnTransportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StartStateColumn {
                get {
                    return this.columnStartState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StopStateColumn {
                get {
                    return this.columnStopState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PdfFileNameColumn {
                get {
                    return this.columnPdfFileName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AipIdColumn {
                get {
                    return this.columnAipId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DocIdColumn {
                get {
                    return this.columnDocId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DeleteYnColumn {
                get {
                    return this.columnDeleteYn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UpdateDateTimeColumn {
                get {
                    return this.columnUpdateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TradesBasKetRow this[int index] {
                get {
                    return ((TradesBasKetRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TradesBasKetRowChangeEventHandler TradesBasKetRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TradesBasKetRowChangeEventHandler TradesBasKetRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TradesBasKetRowChangeEventHandler TradesBasKetRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TradesBasKetRowChangeEventHandler TradesBasKetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddTradesBasKetRow(TradesBasKetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TradesBasKetRow AddTradesBasKetRow(
                        System.DateTime RequestDate, 
                        System.DateTime BeginDate, 
                        System.DateTime EndDate, 
                        string Item, 
                        decimal Price, 
                        decimal VAT, 
                        decimal Amount, 
                        int PayState, 
                        System.DateTime PayDate, 
                        string PayBankName, 
                        string PayBankCode, 
                        string PayAccountNo, 
                        string PayInputName, 
                        int DriverId, 
                        int ClientId, 
                        bool UseTax, 
                        string LGD_OID, 
                        string LGD_Result, 
                        System.DateTime LGD_Accept_Date, 
                        System.DateTime LGD_Cancel_Date, 
                        string LGD_Last_Function, 
                        System.DateTime LGD_Last_Date, 
                        bool AllowAcc, 
                        bool HasAcc, 
                        int ClientAccId, 
                        int SUMYN, 
                        decimal SumPrice, 
                        decimal SumVAT, 
                        decimal SumAmount, 
                        string SUMFROMDate, 
                        string SUMToDate, 
                        string Image1, 
                        string Image2, 
                        string Image3, 
                        string Image4, 
                        string Image5, 
                        string Image6, 
                        string Image7, 
                        string Image8, 
                        string Image9, 
                        string Image10, 
                        bool HasETax, 
                        int SourceType, 
                        string ClientCode, 
                        string ClientName, 
                        string DriverCarNo, 
                        string DriverBizNo, 
                        string DriverName, 
                        string DriverLoginId, 
                        string MID, 
                        int ServiceState, 
                        string DriverMobileNo, 
                        int AcceptCount, 
                        int SubClientId, 
                        int ClientUserId, 
                        int PointMethod, 
                        decimal Fee, 
                        string BizNo, 
                        string Name, 
                        string ExcelExportYN, 
                        string EtaxCanCelYN, 
                        string trusteeMgtKey, 
                        System.DateTime TransportDate, 
                        string StartState, 
                        string StopState, 
                        string PdfFileName, 
                        string AipId, 
                        string DocId, 
                        string DeleteYn, 
                        string UpdateDateTime) {
                TradesBasKetRow rowTradesBasKetRow = ((TradesBasKetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RequestDate,
                        BeginDate,
                        EndDate,
                        Item,
                        Price,
                        VAT,
                        Amount,
                        PayState,
                        PayDate,
                        PayBankName,
                        PayBankCode,
                        PayAccountNo,
                        PayInputName,
                        DriverId,
                        ClientId,
                        UseTax,
                        LGD_OID,
                        LGD_Result,
                        LGD_Accept_Date,
                        LGD_Cancel_Date,
                        LGD_Last_Function,
                        LGD_Last_Date,
                        AllowAcc,
                        HasAcc,
                        ClientAccId,
                        SUMYN,
                        SumPrice,
                        SumVAT,
                        SumAmount,
                        SUMFROMDate,
                        SUMToDate,
                        Image1,
                        Image2,
                        Image3,
                        Image4,
                        Image5,
                        Image6,
                        Image7,
                        Image8,
                        Image9,
                        Image10,
                        HasETax,
                        SourceType,
                        ClientCode,
                        ClientName,
                        DriverCarNo,
                        DriverBizNo,
                        DriverName,
                        DriverLoginId,
                        MID,
                        ServiceState,
                        DriverMobileNo,
                        AcceptCount,
                        SubClientId,
                        ClientUserId,
                        PointMethod,
                        Fee,
                        BizNo,
                        Name,
                        ExcelExportYN,
                        EtaxCanCelYN,
                        trusteeMgtKey,
                        TransportDate,
                        StartState,
                        StopState,
                        PdfFileName,
                        AipId,
                        DocId,
                        DeleteYn,
                        UpdateDateTime};
                rowTradesBasKetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTradesBasKetRow);
                return rowTradesBasKetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TradesBasKetRow FindByTradeId(int TradeId) {
                return ((TradesBasKetRow)(this.Rows.Find(new object[] {
                            TradeId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TradesBasKetDataTable cln = ((TradesBasKetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TradesBasKetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnTradeId = base.Columns["TradeId"];
                this.columnRequestDate = base.Columns["RequestDate"];
                this.columnBeginDate = base.Columns["BeginDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnItem = base.Columns["Item"];
                this.columnPrice = base.Columns["Price"];
                this.columnVAT = base.Columns["VAT"];
                this.columnAmount = base.Columns["Amount"];
                this.columnPayState = base.Columns["PayState"];
                this.columnPayDate = base.Columns["PayDate"];
                this.columnPayBankName = base.Columns["PayBankName"];
                this.columnPayBankCode = base.Columns["PayBankCode"];
                this.columnPayAccountNo = base.Columns["PayAccountNo"];
                this.columnPayInputName = base.Columns["PayInputName"];
                this.columnDriverId = base.Columns["DriverId"];
                this.columnClientId = base.Columns["ClientId"];
                this.columnUseTax = base.Columns["UseTax"];
                this.columnLGD_OID = base.Columns["LGD_OID"];
                this.columnLGD_Result = base.Columns["LGD_Result"];
                this.columnLGD_Accept_Date = base.Columns["LGD_Accept_Date"];
                this.columnLGD_Cancel_Date = base.Columns["LGD_Cancel_Date"];
                this.columnLGD_Last_Function = base.Columns["LGD_Last_Function"];
                this.columnLGD_Last_Date = base.Columns["LGD_Last_Date"];
                this.columnAllowAcc = base.Columns["AllowAcc"];
                this.columnHasAcc = base.Columns["HasAcc"];
                this.columnClientAccId = base.Columns["ClientAccId"];
                this.columnSUMYN = base.Columns["SUMYN"];
                this.columnSumPrice = base.Columns["SumPrice"];
                this.columnSumVAT = base.Columns["SumVAT"];
                this.columnSumAmount = base.Columns["SumAmount"];
                this.columnSUMFROMDate = base.Columns["SUMFROMDate"];
                this.columnSUMToDate = base.Columns["SUMToDate"];
                this.columnImage1 = base.Columns["Image1"];
                this.columnImage2 = base.Columns["Image2"];
                this.columnImage3 = base.Columns["Image3"];
                this.columnImage4 = base.Columns["Image4"];
                this.columnImage5 = base.Columns["Image5"];
                this.columnImage6 = base.Columns["Image6"];
                this.columnImage7 = base.Columns["Image7"];
                this.columnImage8 = base.Columns["Image8"];
                this.columnImage9 = base.Columns["Image9"];
                this.columnImage10 = base.Columns["Image10"];
                this.columnHasETax = base.Columns["HasETax"];
                this.columnSourceType = base.Columns["SourceType"];
                this.columnClientCode = base.Columns["ClientCode"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnDriverCarNo = base.Columns["DriverCarNo"];
                this.columnDriverBizNo = base.Columns["DriverBizNo"];
                this.columnDriverName = base.Columns["DriverName"];
                this.columnDriverLoginId = base.Columns["DriverLoginId"];
                this.columnMID = base.Columns["MID"];
                this.columnServiceState = base.Columns["ServiceState"];
                this.columnDriverMobileNo = base.Columns["DriverMobileNo"];
                this.columnAcceptCount = base.Columns["AcceptCount"];
                this.columnSubClientId = base.Columns["SubClientId"];
                this.columnClientUserId = base.Columns["ClientUserId"];
                this.columnPointMethod = base.Columns["PointMethod"];
                this.columnFee = base.Columns["Fee"];
                this.columnBizNo = base.Columns["BizNo"];
                this.columnName = base.Columns["Name"];
                this.columnExcelExportYN = base.Columns["ExcelExportYN"];
                this.columnEtaxCanCelYN = base.Columns["EtaxCanCelYN"];
                this.columntrusteeMgtKey = base.Columns["trusteeMgtKey"];
                this.columnTransportDate = base.Columns["TransportDate"];
                this.columnStartState = base.Columns["StartState"];
                this.columnStopState = base.Columns["StopState"];
                this.columnPdfFileName = base.Columns["PdfFileName"];
                this.columnAipId = base.Columns["AipId"];
                this.columnDocId = base.Columns["DocId"];
                this.columnDeleteYn = base.Columns["DeleteYn"];
                this.columnUpdateDateTime = base.Columns["UpdateDateTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnTradeId = new global::System.Data.DataColumn("TradeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeId);
                this.columnRequestDate = new global::System.Data.DataColumn("RequestDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestDate);
                this.columnBeginDate = new global::System.Data.DataColumn("BeginDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeginDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnItem = new global::System.Data.DataColumn("Item", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Item");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "ItemColumn");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnItem");
                this.columnItem.ExtendedProperties.Add("Generator_UserColumnName", "Item");
                base.Columns.Add(this.columnItem);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnVAT = new global::System.Data.DataColumn("VAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnPayState = new global::System.Data.DataColumn("PayState", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayState);
                this.columnPayDate = new global::System.Data.DataColumn("PayDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayDate);
                this.columnPayBankName = new global::System.Data.DataColumn("PayBankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayBankName);
                this.columnPayBankCode = new global::System.Data.DataColumn("PayBankCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayBankCode);
                this.columnPayAccountNo = new global::System.Data.DataColumn("PayAccountNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayAccountNo);
                this.columnPayInputName = new global::System.Data.DataColumn("PayInputName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayInputName);
                this.columnDriverId = new global::System.Data.DataColumn("DriverId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverId);
                this.columnClientId = new global::System.Data.DataColumn("ClientId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientId);
                this.columnUseTax = new global::System.Data.DataColumn("UseTax", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseTax);
                this.columnLGD_OID = new global::System.Data.DataColumn("LGD_OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLGD_OID);
                this.columnLGD_Result = new global::System.Data.DataColumn("LGD_Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLGD_Result);
                this.columnLGD_Accept_Date = new global::System.Data.DataColumn("LGD_Accept_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLGD_Accept_Date);
                this.columnLGD_Cancel_Date = new global::System.Data.DataColumn("LGD_Cancel_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLGD_Cancel_Date);
                this.columnLGD_Last_Function = new global::System.Data.DataColumn("LGD_Last_Function", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLGD_Last_Function);
                this.columnLGD_Last_Date = new global::System.Data.DataColumn("LGD_Last_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLGD_Last_Date);
                this.columnAllowAcc = new global::System.Data.DataColumn("AllowAcc", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowAcc);
                this.columnHasAcc = new global::System.Data.DataColumn("HasAcc", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasAcc);
                this.columnClientAccId = new global::System.Data.DataColumn("ClientAccId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientAccId);
                this.columnSUMYN = new global::System.Data.DataColumn("SUMYN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUMYN);
                this.columnSumPrice = new global::System.Data.DataColumn("SumPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumPrice);
                this.columnSumVAT = new global::System.Data.DataColumn("SumVAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumVAT);
                this.columnSumAmount = new global::System.Data.DataColumn("SumAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumAmount);
                this.columnSUMFROMDate = new global::System.Data.DataColumn("SUMFROMDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUMFROMDate);
                this.columnSUMToDate = new global::System.Data.DataColumn("SUMToDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUMToDate);
                this.columnImage1 = new global::System.Data.DataColumn("Image1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage1);
                this.columnImage2 = new global::System.Data.DataColumn("Image2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage2);
                this.columnImage3 = new global::System.Data.DataColumn("Image3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage3);
                this.columnImage4 = new global::System.Data.DataColumn("Image4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage4);
                this.columnImage5 = new global::System.Data.DataColumn("Image5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage5);
                this.columnImage6 = new global::System.Data.DataColumn("Image6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage6);
                this.columnImage7 = new global::System.Data.DataColumn("Image7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage7);
                this.columnImage8 = new global::System.Data.DataColumn("Image8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage8);
                this.columnImage9 = new global::System.Data.DataColumn("Image9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage9);
                this.columnImage10 = new global::System.Data.DataColumn("Image10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage10);
                this.columnHasETax = new global::System.Data.DataColumn("HasETax", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasETax);
                this.columnSourceType = new global::System.Data.DataColumn("SourceType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceType);
                this.columnClientCode = new global::System.Data.DataColumn("ClientCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientCode);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnDriverCarNo = new global::System.Data.DataColumn("DriverCarNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverCarNo);
                this.columnDriverBizNo = new global::System.Data.DataColumn("DriverBizNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverBizNo);
                this.columnDriverName = new global::System.Data.DataColumn("DriverName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverName);
                this.columnDriverLoginId = new global::System.Data.DataColumn("DriverLoginId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverLoginId);
                this.columnMID = new global::System.Data.DataColumn("MID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID);
                this.columnServiceState = new global::System.Data.DataColumn("ServiceState", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceState);
                this.columnDriverMobileNo = new global::System.Data.DataColumn("DriverMobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverMobileNo);
                this.columnAcceptCount = new global::System.Data.DataColumn("AcceptCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptCount);
                this.columnSubClientId = new global::System.Data.DataColumn("SubClientId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubClientId);
                this.columnClientUserId = new global::System.Data.DataColumn("ClientUserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientUserId);
                this.columnPointMethod = new global::System.Data.DataColumn("PointMethod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPointMethod);
                this.columnFee = new global::System.Data.DataColumn("Fee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFee);
                this.columnBizNo = new global::System.Data.DataColumn("BizNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBizNo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExcelExportYN = new global::System.Data.DataColumn("ExcelExportYN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcelExportYN);
                this.columnEtaxCanCelYN = new global::System.Data.DataColumn("EtaxCanCelYN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtaxCanCelYN);
                this.columntrusteeMgtKey = new global::System.Data.DataColumn("trusteeMgtKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrusteeMgtKey);
                this.columnTransportDate = new global::System.Data.DataColumn("TransportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransportDate);
                this.columnStartState = new global::System.Data.DataColumn("StartState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartState);
                this.columnStopState = new global::System.Data.DataColumn("StopState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStopState);
                this.columnPdfFileName = new global::System.Data.DataColumn("PdfFileName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdfFileName);
                this.columnAipId = new global::System.Data.DataColumn("AipId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAipId);
                this.columnDocId = new global::System.Data.DataColumn("DocId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocId);
                this.columnDeleteYn = new global::System.Data.DataColumn("DeleteYn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleteYn);
                this.columnUpdateDateTime = new global::System.Data.DataColumn("UpdateDateTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDateTime);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTradeId}, true));
                this.columnTradeId.AutoIncrement = true;
                this.columnTradeId.AutoIncrementSeed = -1;
                this.columnTradeId.AutoIncrementStep = -1;
                this.columnTradeId.AllowDBNull = false;
                this.columnTradeId.ReadOnly = true;
                this.columnTradeId.Unique = true;
                this.columnRequestDate.AllowDBNull = false;
                this.columnBeginDate.AllowDBNull = false;
                this.columnEndDate.AllowDBNull = false;
                this.columnItem.MaxLength = 2147483647;
                this.columnPrice.AllowDBNull = false;
                this.columnVAT.AllowDBNull = false;
                this.columnAmount.AllowDBNull = false;
                this.columnPayState.AllowDBNull = false;
                this.columnPayBankName.MaxLength = 2147483647;
                this.columnPayBankCode.MaxLength = 2147483647;
                this.columnPayAccountNo.MaxLength = 2147483647;
                this.columnPayInputName.MaxLength = 2147483647;
                this.columnDriverId.AllowDBNull = false;
                this.columnUseTax.AllowDBNull = false;
                this.columnLGD_OID.MaxLength = 2147483647;
                this.columnLGD_Result.MaxLength = 2147483647;
                this.columnLGD_Last_Function.MaxLength = 2147483647;
                this.columnAllowAcc.AllowDBNull = false;
                this.columnHasAcc.AllowDBNull = false;
                this.columnSUMFROMDate.MaxLength = 2147483647;
                this.columnSUMToDate.MaxLength = 2147483647;
                this.columnImage1.MaxLength = 2147483647;
                this.columnImage2.MaxLength = 2147483647;
                this.columnImage3.MaxLength = 2147483647;
                this.columnImage4.MaxLength = 2147483647;
                this.columnImage5.MaxLength = 2147483647;
                this.columnImage6.MaxLength = 2147483647;
                this.columnImage7.MaxLength = 2147483647;
                this.columnImage8.MaxLength = 2147483647;
                this.columnImage9.MaxLength = 2147483647;
                this.columnImage10.MaxLength = 2147483647;
                this.columnHasETax.AllowDBNull = false;
                this.columnSourceType.AllowDBNull = false;
                this.columnAcceptCount.AllowDBNull = false;
                this.columnBizNo.MaxLength = 2147483647;
                this.columnName.MaxLength = 2147483647;
                this.columnExcelExportYN.MaxLength = 2147483647;
                this.columnEtaxCanCelYN.MaxLength = 2147483647;
                this.columntrusteeMgtKey.MaxLength = 2147483647;
                this.columnStartState.MaxLength = 2147483647;
                this.columnStopState.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TradesBasKetRow NewTradesBasKetRow() {
                return ((TradesBasKetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TradesBasKetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TradesBasKetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TradesBasKetRowChanged != null)) {
                    this.TradesBasKetRowChanged(this, new TradesBasKetRowChangeEvent(((TradesBasKetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TradesBasKetRowChanging != null)) {
                    this.TradesBasKetRowChanging(this, new TradesBasKetRowChangeEvent(((TradesBasKetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TradesBasKetRowDeleted != null)) {
                    this.TradesBasKetRowDeleted(this, new TradesBasKetRowChangeEvent(((TradesBasKetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TradesBasKetRowDeleting != null)) {
                    this.TradesBasKetRowDeleting(this, new TradesBasKetRowChangeEvent(((TradesBasKetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveTradesBasKetRow(TradesBasKetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TradeDataSet ds = new TradeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TradesBasKetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TaxOutDataTable : global::System.Data.TypedTableBase<TaxOutRow> {
            
            private global::System.Data.DataColumn columnDriverBizNo;
            
            private global::System.Data.DataColumn columnDriverCEO;
            
            private global::System.Data.DataColumn columnDriverName;
            
            private global::System.Data.DataColumn columnDriverUptae;
            
            private global::System.Data.DataColumn columnDriverUpjong;
            
            private global::System.Data.DataColumn columnDriverAddress;
            
            private global::System.Data.DataColumn columnClientBizNo;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnClientCEO;
            
            private global::System.Data.DataColumn columnClientAddress;
            
            private global::System.Data.DataColumn columnClientUptae;
            
            private global::System.Data.DataColumn columnClientUpjong;
            
            private global::System.Data.DataColumn columnPayDate;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnVAT;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnItem;
            
            private global::System.Data.DataColumn columnTradeId;
            
            private global::System.Data.DataColumn columnRequestDate;
            
            private global::System.Data.DataColumn columnSUMYN;
            
            private global::System.Data.DataColumn columnSumPrice;
            
            private global::System.Data.DataColumn columnSumVAT;
            
            private global::System.Data.DataColumn columnSumAmount;
            
            private global::System.Data.DataColumn columnSUMFROMDate;
            
            private global::System.Data.DataColumn columnSUMToDate;
            
            private global::System.Data.DataColumn columnBeginDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnDivText;
            
            private global::System.Data.DataColumn columnRemark1;
            
            private global::System.Data.DataColumn columnRemark2;
            
            private global::System.Data.DataColumn columnEtax;
            
            private global::System.Data.DataColumn columnRemark3;
            
            private global::System.Data.DataColumn columnReferralName;
            
            private global::System.Data.DataColumn columnRemark4;
            
            private global::System.Data.DataColumn columnRemark5;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TaxOutDataTable() {
                this.TableName = "TaxOut";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal TaxOutDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected TaxOutDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverBizNoColumn {
                get {
                    return this.columnDriverBizNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverCEOColumn {
                get {
                    return this.columnDriverCEO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverNameColumn {
                get {
                    return this.columnDriverName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverUptaeColumn {
                get {
                    return this.columnDriverUptae;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverUpjongColumn {
                get {
                    return this.columnDriverUpjong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DriverAddressColumn {
                get {
                    return this.columnDriverAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientBizNoColumn {
                get {
                    return this.columnClientBizNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientCEOColumn {
                get {
                    return this.columnClientCEO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientAddressColumn {
                get {
                    return this.columnClientAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientUptaeColumn {
                get {
                    return this.columnClientUptae;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientUpjongColumn {
                get {
                    return this.columnClientUpjong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PayDateColumn {
                get {
                    return this.columnPayDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.columnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ItemColumn {
                get {
                    return this.columnItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TradeIdColumn {
                get {
                    return this.columnTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RequestDateColumn {
                get {
                    return this.columnRequestDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SUMYNColumn {
                get {
                    return this.columnSUMYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SumPriceColumn {
                get {
                    return this.columnSumPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SumVATColumn {
                get {
                    return this.columnSumVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SumAmountColumn {
                get {
                    return this.columnSumAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SUMFROMDateColumn {
                get {
                    return this.columnSUMFROMDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SUMToDateColumn {
                get {
                    return this.columnSUMToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BeginDateColumn {
                get {
                    return this.columnBeginDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DivTextColumn {
                get {
                    return this.columnDivText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Remark1Column {
                get {
                    return this.columnRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Remark2Column {
                get {
                    return this.columnRemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EtaxColumn {
                get {
                    return this.columnEtax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Remark3Column {
                get {
                    return this.columnRemark3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ReferralNameColumn {
                get {
                    return this.columnReferralName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Remark4Column {
                get {
                    return this.columnRemark4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Remark5Column {
                get {
                    return this.columnRemark5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TaxOutRow this[int index] {
                get {
                    return ((TaxOutRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TaxOutRowChangeEventHandler TaxOutRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TaxOutRowChangeEventHandler TaxOutRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TaxOutRowChangeEventHandler TaxOutRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TaxOutRowChangeEventHandler TaxOutRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddTaxOutRow(TaxOutRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TaxOutRow AddTaxOutRow(
                        string DriverBizNo, 
                        string DriverCEO, 
                        string DriverName, 
                        string DriverUptae, 
                        string DriverUpjong, 
                        string DriverAddress, 
                        string ClientBizNo, 
                        string ClientName, 
                        string ClientCEO, 
                        string ClientAddress, 
                        string ClientUptae, 
                        string ClientUpjong, 
                        System.DateTime PayDate, 
                        decimal Price, 
                        decimal VAT, 
                        decimal Amount, 
                        string Item, 
                        System.DateTime RequestDate, 
                        int SUMYN, 
                        decimal SumPrice, 
                        decimal SumVAT, 
                        decimal SumAmount, 
                        string SUMFROMDate, 
                        string SUMToDate, 
                        System.DateTime BeginDate, 
                        System.DateTime EndDate, 
                        string DivText, 
                        string Remark1, 
                        string Remark2, 
                        string Etax, 
                        string Remark3, 
                        string ReferralName, 
                        string Remark4, 
                        string Remark5) {
                TaxOutRow rowTaxOutRow = ((TaxOutRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DriverBizNo,
                        DriverCEO,
                        DriverName,
                        DriverUptae,
                        DriverUpjong,
                        DriverAddress,
                        ClientBizNo,
                        ClientName,
                        ClientCEO,
                        ClientAddress,
                        ClientUptae,
                        ClientUpjong,
                        PayDate,
                        Price,
                        VAT,
                        Amount,
                        Item,
                        null,
                        RequestDate,
                        SUMYN,
                        SumPrice,
                        SumVAT,
                        SumAmount,
                        SUMFROMDate,
                        SUMToDate,
                        BeginDate,
                        EndDate,
                        DivText,
                        Remark1,
                        Remark2,
                        Etax,
                        Remark3,
                        ReferralName,
                        Remark4,
                        Remark5};
                rowTaxOutRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTaxOutRow);
                return rowTaxOutRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TaxOutRow FindByTradeId(int TradeId) {
                return ((TaxOutRow)(this.Rows.Find(new object[] {
                            TradeId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TaxOutDataTable cln = ((TaxOutDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TaxOutDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnDriverBizNo = base.Columns["DriverBizNo"];
                this.columnDriverCEO = base.Columns["DriverCEO"];
                this.columnDriverName = base.Columns["DriverName"];
                this.columnDriverUptae = base.Columns["DriverUptae"];
                this.columnDriverUpjong = base.Columns["DriverUpjong"];
                this.columnDriverAddress = base.Columns["DriverAddress"];
                this.columnClientBizNo = base.Columns["ClientBizNo"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnClientCEO = base.Columns["ClientCEO"];
                this.columnClientAddress = base.Columns["ClientAddress"];
                this.columnClientUptae = base.Columns["ClientUptae"];
                this.columnClientUpjong = base.Columns["ClientUpjong"];
                this.columnPayDate = base.Columns["PayDate"];
                this.columnPrice = base.Columns["Price"];
                this.columnVAT = base.Columns["VAT"];
                this.columnAmount = base.Columns["Amount"];
                this.columnItem = base.Columns["Item"];
                this.columnTradeId = base.Columns["TradeId"];
                this.columnRequestDate = base.Columns["RequestDate"];
                this.columnSUMYN = base.Columns["SUMYN"];
                this.columnSumPrice = base.Columns["SumPrice"];
                this.columnSumVAT = base.Columns["SumVAT"];
                this.columnSumAmount = base.Columns["SumAmount"];
                this.columnSUMFROMDate = base.Columns["SUMFROMDate"];
                this.columnSUMToDate = base.Columns["SUMToDate"];
                this.columnBeginDate = base.Columns["BeginDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnDivText = base.Columns["DivText"];
                this.columnRemark1 = base.Columns["Remark1"];
                this.columnRemark2 = base.Columns["Remark2"];
                this.columnEtax = base.Columns["Etax"];
                this.columnRemark3 = base.Columns["Remark3"];
                this.columnReferralName = base.Columns["ReferralName"];
                this.columnRemark4 = base.Columns["Remark4"];
                this.columnRemark5 = base.Columns["Remark5"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnDriverBizNo = new global::System.Data.DataColumn("DriverBizNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverBizNo);
                this.columnDriverCEO = new global::System.Data.DataColumn("DriverCEO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverCEO);
                this.columnDriverName = new global::System.Data.DataColumn("DriverName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverName);
                this.columnDriverUptae = new global::System.Data.DataColumn("DriverUptae", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverUptae);
                this.columnDriverUpjong = new global::System.Data.DataColumn("DriverUpjong", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverUpjong);
                this.columnDriverAddress = new global::System.Data.DataColumn("DriverAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverAddress);
                this.columnClientBizNo = new global::System.Data.DataColumn("ClientBizNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientBizNo);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnClientCEO = new global::System.Data.DataColumn("ClientCEO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientCEO);
                this.columnClientAddress = new global::System.Data.DataColumn("ClientAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientAddress);
                this.columnClientUptae = new global::System.Data.DataColumn("ClientUptae", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientUptae);
                this.columnClientUpjong = new global::System.Data.DataColumn("ClientUpjong", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientUpjong);
                this.columnPayDate = new global::System.Data.DataColumn("PayDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayDate);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnVAT = new global::System.Data.DataColumn("VAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnItem = new global::System.Data.DataColumn("Item", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Item");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "ItemColumn");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnItem");
                this.columnItem.ExtendedProperties.Add("Generator_UserColumnName", "Item");
                base.Columns.Add(this.columnItem);
                this.columnTradeId = new global::System.Data.DataColumn("TradeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeId);
                this.columnRequestDate = new global::System.Data.DataColumn("RequestDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestDate);
                this.columnSUMYN = new global::System.Data.DataColumn("SUMYN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUMYN);
                this.columnSumPrice = new global::System.Data.DataColumn("SumPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumPrice);
                this.columnSumVAT = new global::System.Data.DataColumn("SumVAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumVAT);
                this.columnSumAmount = new global::System.Data.DataColumn("SumAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumAmount);
                this.columnSUMFROMDate = new global::System.Data.DataColumn("SUMFROMDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUMFROMDate);
                this.columnSUMToDate = new global::System.Data.DataColumn("SUMToDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUMToDate);
                this.columnBeginDate = new global::System.Data.DataColumn("BeginDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeginDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnDivText = new global::System.Data.DataColumn("DivText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivText);
                this.columnRemark1 = new global::System.Data.DataColumn("Remark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark1);
                this.columnRemark2 = new global::System.Data.DataColumn("Remark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark2);
                this.columnEtax = new global::System.Data.DataColumn("Etax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtax);
                this.columnRemark3 = new global::System.Data.DataColumn("Remark3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark3);
                this.columnReferralName = new global::System.Data.DataColumn("ReferralName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferralName);
                this.columnRemark4 = new global::System.Data.DataColumn("Remark4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark4);
                this.columnRemark5 = new global::System.Data.DataColumn("Remark5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark5);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTradeId}, true));
                this.columnDriverBizNo.MaxLength = 2147483647;
                this.columnDriverCEO.AllowDBNull = false;
                this.columnDriverCEO.MaxLength = 2147483647;
                this.columnDriverName.AllowDBNull = false;
                this.columnDriverName.MaxLength = 2147483647;
                this.columnDriverUptae.AllowDBNull = false;
                this.columnDriverUptae.MaxLength = 2147483647;
                this.columnDriverUpjong.AllowDBNull = false;
                this.columnDriverUpjong.MaxLength = 2147483647;
                this.columnDriverAddress.ReadOnly = true;
                this.columnDriverAddress.MaxLength = 2147483647;
                this.columnClientBizNo.AllowDBNull = false;
                this.columnClientBizNo.MaxLength = 15;
                this.columnClientName.AllowDBNull = false;
                this.columnClientName.MaxLength = 2147483647;
                this.columnClientCEO.AllowDBNull = false;
                this.columnClientCEO.MaxLength = 2147483647;
                this.columnClientAddress.ReadOnly = true;
                this.columnClientAddress.MaxLength = 2147483647;
                this.columnClientUptae.AllowDBNull = false;
                this.columnClientUptae.MaxLength = 2147483647;
                this.columnClientUpjong.AllowDBNull = false;
                this.columnClientUpjong.MaxLength = 2147483647;
                this.columnPrice.AllowDBNull = false;
                this.columnVAT.AllowDBNull = false;
                this.columnAmount.AllowDBNull = false;
                this.columnItem.MaxLength = 2147483647;
                this.columnTradeId.AutoIncrement = true;
                this.columnTradeId.AutoIncrementSeed = -1;
                this.columnTradeId.AutoIncrementStep = -1;
                this.columnTradeId.AllowDBNull = false;
                this.columnTradeId.ReadOnly = true;
                this.columnTradeId.Unique = true;
                this.columnRequestDate.AllowDBNull = false;
                this.columnSUMFROMDate.MaxLength = 2147483647;
                this.columnSUMToDate.MaxLength = 2147483647;
                this.columnBeginDate.AllowDBNull = false;
                this.columnEndDate.AllowDBNull = false;
                this.columnDivText.ReadOnly = true;
                this.columnDivText.MaxLength = 6;
                this.columnRemark1.ReadOnly = true;
                this.columnRemark1.MaxLength = 2147483647;
                this.columnRemark2.ReadOnly = true;
                this.columnRemark2.MaxLength = 2147483647;
                this.columnEtax.ReadOnly = true;
                this.columnEtax.MaxLength = 14;
                this.columnRemark3.AllowDBNull = false;
                this.columnRemark3.MaxLength = 2147483647;
                this.columnReferralName.ReadOnly = true;
                this.columnReferralName.MaxLength = 2147483647;
                this.columnRemark4.ReadOnly = true;
                this.columnRemark4.MaxLength = 30;
                this.columnRemark5.ReadOnly = true;
                this.columnRemark5.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TaxOutRow NewTaxOutRow() {
                return ((TaxOutRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TaxOutRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TaxOutRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TaxOutRowChanged != null)) {
                    this.TaxOutRowChanged(this, new TaxOutRowChangeEvent(((TaxOutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TaxOutRowChanging != null)) {
                    this.TaxOutRowChanging(this, new TaxOutRowChangeEvent(((TaxOutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TaxOutRowDeleted != null)) {
                    this.TaxOutRowDeleted(this, new TaxOutRowChangeEvent(((TaxOutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TaxOutRowDeleting != null)) {
                    this.TaxOutRowDeleting(this, new TaxOutRowChangeEvent(((TaxOutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveTaxOutRow(TaxOutRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TradeDataSet ds = new TradeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TaxOutDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TradesRow : global::System.Data.DataRow {
            
            private TradesDataTable tableTrades;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal TradesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTrades = ((TradesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int TradeId {
                get {
                    return ((int)(this[this.tableTrades.TradeIdColumn]));
                }
                set {
                    this[this.tableTrades.TradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime RequestDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTrades.RequestDateColumn]));
                }
                set {
                    this[this.tableTrades.RequestDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime BeginDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTrades.BeginDateColumn]));
                }
                set {
                    this[this.tableTrades.BeginDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime EndDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTrades.EndDateColumn]));
                }
                set {
                    this[this.tableTrades.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Item {
                get {
                    if (this.IsItemNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.ItemColumn]));
                    }
                }
                set {
                    this[this.tableTrades.ItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Price {
                get {
                    return ((decimal)(this[this.tableTrades.PriceColumn]));
                }
                set {
                    this[this.tableTrades.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal VAT {
                get {
                    return ((decimal)(this[this.tableTrades.VATColumn]));
                }
                set {
                    this[this.tableTrades.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Amount {
                get {
                    return ((decimal)(this[this.tableTrades.AmountColumn]));
                }
                set {
                    this[this.tableTrades.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int PayState {
                get {
                    return ((int)(this[this.tableTrades.PayStateColumn]));
                }
                set {
                    this[this.tableTrades.PayStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime PayDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTrades.PayDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Trades\' 테이블의 \'PayDate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTrades.PayDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PayBankName {
                get {
                    if (this.IsPayBankNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.PayBankNameColumn]));
                    }
                }
                set {
                    this[this.tableTrades.PayBankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PayBankCode {
                get {
                    if (this.IsPayBankCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.PayBankCodeColumn]));
                    }
                }
                set {
                    this[this.tableTrades.PayBankCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PayAccountNo {
                get {
                    if (this.IsPayAccountNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.PayAccountNoColumn]));
                    }
                }
                set {
                    this[this.tableTrades.PayAccountNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PayInputName {
                get {
                    if (this.IsPayInputNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.PayInputNameColumn]));
                    }
                }
                set {
                    this[this.tableTrades.PayInputNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DriverId {
                get {
                    return ((int)(this[this.tableTrades.DriverIdColumn]));
                }
                set {
                    this[this.tableTrades.DriverIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ClientId {
                get {
                    if (this.IsClientIdNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tableTrades.ClientIdColumn]));
                    }
                }
                set {
                    this[this.tableTrades.ClientIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool UseTax {
                get {
                    return ((bool)(this[this.tableTrades.UseTaxColumn]));
                }
                set {
                    this[this.tableTrades.UseTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LGD_OID {
                get {
                    if (this.IsLGD_OIDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.LGD_OIDColumn]));
                    }
                }
                set {
                    this[this.tableTrades.LGD_OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LGD_Result {
                get {
                    if (this.IsLGD_ResultNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.LGD_ResultColumn]));
                    }
                }
                set {
                    this[this.tableTrades.LGD_ResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime LGD_Accept_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTrades.LGD_Accept_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Trades\' 테이블의 \'LGD_Accept_Date\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTrades.LGD_Accept_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime LGD_Cancel_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTrades.LGD_Cancel_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Trades\' 테이블의 \'LGD_Cancel_Date\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTrades.LGD_Cancel_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LGD_Last_Function {
                get {
                    if (this.IsLGD_Last_FunctionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.LGD_Last_FunctionColumn]));
                    }
                }
                set {
                    this[this.tableTrades.LGD_Last_FunctionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime LGD_Last_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTrades.LGD_Last_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Trades\' 테이블의 \'LGD_Last_Date\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTrades.LGD_Last_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool AllowAcc {
                get {
                    return ((bool)(this[this.tableTrades.AllowAccColumn]));
                }
                set {
                    this[this.tableTrades.AllowAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool HasAcc {
                get {
                    return ((bool)(this[this.tableTrades.HasAccColumn]));
                }
                set {
                    this[this.tableTrades.HasAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ClientAccId {
                get {
                    if (this.IsClientAccIdNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tableTrades.ClientAccIdColumn]));
                    }
                }
                set {
                    this[this.tableTrades.ClientAccIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int SUMYN {
                get {
                    if (this.IsSUMYNNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tableTrades.SUMYNColumn]));
                    }
                }
                set {
                    this[this.tableTrades.SUMYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SumPrice {
                get {
                    if (this.IsSumPriceNull()) {
                        return 0m;
                    }
                    else {
                        return ((decimal)(this[this.tableTrades.SumPriceColumn]));
                    }
                }
                set {
                    this[this.tableTrades.SumPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SumVAT {
                get {
                    if (this.IsSumVATNull()) {
                        return 0m;
                    }
                    else {
                        return ((decimal)(this[this.tableTrades.SumVATColumn]));
                    }
                }
                set {
                    this[this.tableTrades.SumVATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SumAmount {
                get {
                    if (this.IsSumAmountNull()) {
                        return 0m;
                    }
                    else {
                        return ((decimal)(this[this.tableTrades.SumAmountColumn]));
                    }
                }
                set {
                    this[this.tableTrades.SumAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SUMFROMDate {
                get {
                    if (this.IsSUMFROMDateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.SUMFROMDateColumn]));
                    }
                }
                set {
                    this[this.tableTrades.SUMFROMDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SUMToDate {
                get {
                    if (this.IsSUMToDateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.SUMToDateColumn]));
                    }
                }
                set {
                    this[this.tableTrades.SUMToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image1 {
                get {
                    if (this.IsImage1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.Image1Column]));
                    }
                }
                set {
                    this[this.tableTrades.Image1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image2 {
                get {
                    if (this.IsImage2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.Image2Column]));
                    }
                }
                set {
                    this[this.tableTrades.Image2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image3 {
                get {
                    if (this.IsImage3Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.Image3Column]));
                    }
                }
                set {
                    this[this.tableTrades.Image3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image4 {
                get {
                    if (this.IsImage4Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.Image4Column]));
                    }
                }
                set {
                    this[this.tableTrades.Image4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image5 {
                get {
                    if (this.IsImage5Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.Image5Column]));
                    }
                }
                set {
                    this[this.tableTrades.Image5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image6 {
                get {
                    if (this.IsImage6Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.Image6Column]));
                    }
                }
                set {
                    this[this.tableTrades.Image6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image7 {
                get {
                    if (this.IsImage7Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.Image7Column]));
                    }
                }
                set {
                    this[this.tableTrades.Image7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image8 {
                get {
                    if (this.IsImage8Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.Image8Column]));
                    }
                }
                set {
                    this[this.tableTrades.Image8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image9 {
                get {
                    if (this.IsImage9Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.Image9Column]));
                    }
                }
                set {
                    this[this.tableTrades.Image9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image10 {
                get {
                    if (this.IsImage10Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.Image10Column]));
                    }
                }
                set {
                    this[this.tableTrades.Image10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool HasETax {
                get {
                    return ((bool)(this[this.tableTrades.HasETaxColumn]));
                }
                set {
                    this[this.tableTrades.HasETaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int SourceType {
                get {
                    return ((int)(this[this.tableTrades.SourceTypeColumn]));
                }
                set {
                    this[this.tableTrades.SourceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ClientCode {
                get {
                    if (this.IsClientCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.ClientCodeColumn]));
                    }
                }
                set {
                    this[this.tableTrades.ClientCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ClientName {
                get {
                    if (this.IsClientNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.ClientNameColumn]));
                    }
                }
                set {
                    this[this.tableTrades.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DriverCarNo {
                get {
                    if (this.IsDriverCarNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.DriverCarNoColumn]));
                    }
                }
                set {
                    this[this.tableTrades.DriverCarNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DriverBizNo {
                get {
                    if (this.IsDriverBizNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.DriverBizNoColumn]));
                    }
                }
                set {
                    this[this.tableTrades.DriverBizNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DriverName {
                get {
                    if (this.IsDriverNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.DriverNameColumn]));
                    }
                }
                set {
                    this[this.tableTrades.DriverNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DriverLoginId {
                get {
                    if (this.IsDriverLoginIdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.DriverLoginIdColumn]));
                    }
                }
                set {
                    this[this.tableTrades.DriverLoginIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MID {
                get {
                    if (this.IsMIDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.MIDColumn]));
                    }
                }
                set {
                    this[this.tableTrades.MIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ServiceState {
                get {
                    if (this.IsServiceStateNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tableTrades.ServiceStateColumn]));
                    }
                }
                set {
                    this[this.tableTrades.ServiceStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DriverMobileNo {
                get {
                    if (this.IsDriverMobileNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.DriverMobileNoColumn]));
                    }
                }
                set {
                    this[this.tableTrades.DriverMobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int AcceptCount {
                get {
                    return ((int)(this[this.tableTrades.AcceptCountColumn]));
                }
                set {
                    this[this.tableTrades.AcceptCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int SubClientId {
                get {
                    if (this.IsSubClientIdNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tableTrades.SubClientIdColumn]));
                    }
                }
                set {
                    this[this.tableTrades.SubClientIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ClientUserId {
                get {
                    if (this.IsClientUserIdNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tableTrades.ClientUserIdColumn]));
                    }
                }
                set {
                    this[this.tableTrades.ClientUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int PointMethod {
                get {
                    if (this.IsPointMethodNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tableTrades.PointMethodColumn]));
                    }
                }
                set {
                    this[this.tableTrades.PointMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Fee {
                get {
                    try {
                        return ((decimal)(this[this.tableTrades.FeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Trades\' 테이블의 \'Fee\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTrades.FeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BizNo {
                get {
                    if (this.IsBizNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.BizNoColumn]));
                    }
                }
                set {
                    this[this.tableTrades.BizNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Name {
                get {
                    if (this.IsNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.NameColumn]));
                    }
                }
                set {
                    this[this.tableTrades.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ExcelExportYN {
                get {
                    if (this.IsExcelExportYNNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.ExcelExportYNColumn]));
                    }
                }
                set {
                    this[this.tableTrades.ExcelExportYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string EtaxCanCelYN {
                get {
                    if (this.IsEtaxCanCelYNNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.EtaxCanCelYNColumn]));
                    }
                }
                set {
                    this[this.tableTrades.EtaxCanCelYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string trusteeMgtKey {
                get {
                    if (this.IstrusteeMgtKeyNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.trusteeMgtKeyColumn]));
                    }
                }
                set {
                    this[this.tableTrades.trusteeMgtKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime TransportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTrades.TransportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Trades\' 테이블의 \'TransportDate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTrades.TransportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string StartState {
                get {
                    if (this.IsStartStateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.StartStateColumn]));
                    }
                }
                set {
                    this[this.tableTrades.StartStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string StopState {
                get {
                    if (this.IsStopStateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.StopStateColumn]));
                    }
                }
                set {
                    this[this.tableTrades.StopStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PdfFileName {
                get {
                    if (this.IsPdfFileNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.PdfFileNameColumn]));
                    }
                }
                set {
                    this[this.tableTrades.PdfFileNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AipId {
                get {
                    if (this.IsAipIdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.AipIdColumn]));
                    }
                }
                set {
                    this[this.tableTrades.AipIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DocId {
                get {
                    if (this.IsDocIdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.DocIdColumn]));
                    }
                }
                set {
                    this[this.tableTrades.DocIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DeleteYn {
                get {
                    if (this.IsDeleteYnNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.DeleteYnColumn]));
                    }
                }
                set {
                    this[this.tableTrades.DeleteYnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UpdateDateTime {
                get {
                    if (this.IsUpdateDateTimeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableTrades.UpdateDateTimeColumn]));
                    }
                }
                set {
                    this[this.tableTrades.UpdateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long OTradeId {
                get {
                    if (this.IsOTradeIdNull()) {
                        return 0;
                    }
                    else {
                        return ((long)(this[this.tableTrades.OTradeIdColumn]));
                    }
                }
                set {
                    this[this.tableTrades.OTradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long ReferralId {
                get {
                    if (this.IsReferralIdNull()) {
                        return 0;
                    }
                    else {
                        return ((long)(this[this.tableTrades.ReferralIdColumn]));
                    }
                }
                set {
                    this[this.tableTrades.ReferralIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TaxGubun {
                get {
                    try {
                        return ((string)(this[this.tableTrades.TaxGubunColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Trades\' 테이블의 \'TaxGubun\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTrades.TaxGubunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string billNo {
                get {
                    if (this.IsbillNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTrades.billNoColumn]));
                    }
                }
                set {
                    this[this.tableTrades.billNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsItemNull() {
                return this.IsNull(this.tableTrades.ItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetItemNull() {
                this[this.tableTrades.ItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPayDateNull() {
                return this.IsNull(this.tableTrades.PayDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPayDateNull() {
                this[this.tableTrades.PayDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPayBankNameNull() {
                return this.IsNull(this.tableTrades.PayBankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPayBankNameNull() {
                this[this.tableTrades.PayBankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPayBankCodeNull() {
                return this.IsNull(this.tableTrades.PayBankCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPayBankCodeNull() {
                this[this.tableTrades.PayBankCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPayAccountNoNull() {
                return this.IsNull(this.tableTrades.PayAccountNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPayAccountNoNull() {
                this[this.tableTrades.PayAccountNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPayInputNameNull() {
                return this.IsNull(this.tableTrades.PayInputNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPayInputNameNull() {
                this[this.tableTrades.PayInputNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClientIdNull() {
                return this.IsNull(this.tableTrades.ClientIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClientIdNull() {
                this[this.tableTrades.ClientIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLGD_OIDNull() {
                return this.IsNull(this.tableTrades.LGD_OIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLGD_OIDNull() {
                this[this.tableTrades.LGD_OIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLGD_ResultNull() {
                return this.IsNull(this.tableTrades.LGD_ResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLGD_ResultNull() {
                this[this.tableTrades.LGD_ResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLGD_Accept_DateNull() {
                return this.IsNull(this.tableTrades.LGD_Accept_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLGD_Accept_DateNull() {
                this[this.tableTrades.LGD_Accept_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLGD_Cancel_DateNull() {
                return this.IsNull(this.tableTrades.LGD_Cancel_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLGD_Cancel_DateNull() {
                this[this.tableTrades.LGD_Cancel_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLGD_Last_FunctionNull() {
                return this.IsNull(this.tableTrades.LGD_Last_FunctionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLGD_Last_FunctionNull() {
                this[this.tableTrades.LGD_Last_FunctionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLGD_Last_DateNull() {
                return this.IsNull(this.tableTrades.LGD_Last_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLGD_Last_DateNull() {
                this[this.tableTrades.LGD_Last_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClientAccIdNull() {
                return this.IsNull(this.tableTrades.ClientAccIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClientAccIdNull() {
                this[this.tableTrades.ClientAccIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSUMYNNull() {
                return this.IsNull(this.tableTrades.SUMYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSUMYNNull() {
                this[this.tableTrades.SUMYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSumPriceNull() {
                return this.IsNull(this.tableTrades.SumPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSumPriceNull() {
                this[this.tableTrades.SumPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSumVATNull() {
                return this.IsNull(this.tableTrades.SumVATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSumVATNull() {
                this[this.tableTrades.SumVATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSumAmountNull() {
                return this.IsNull(this.tableTrades.SumAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSumAmountNull() {
                this[this.tableTrades.SumAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSUMFROMDateNull() {
                return this.IsNull(this.tableTrades.SUMFROMDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSUMFROMDateNull() {
                this[this.tableTrades.SUMFROMDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSUMToDateNull() {
                return this.IsNull(this.tableTrades.SUMToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSUMToDateNull() {
                this[this.tableTrades.SUMToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage1Null() {
                return this.IsNull(this.tableTrades.Image1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage1Null() {
                this[this.tableTrades.Image1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage2Null() {
                return this.IsNull(this.tableTrades.Image2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage2Null() {
                this[this.tableTrades.Image2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage3Null() {
                return this.IsNull(this.tableTrades.Image3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage3Null() {
                this[this.tableTrades.Image3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage4Null() {
                return this.IsNull(this.tableTrades.Image4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage4Null() {
                this[this.tableTrades.Image4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage5Null() {
                return this.IsNull(this.tableTrades.Image5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage5Null() {
                this[this.tableTrades.Image5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage6Null() {
                return this.IsNull(this.tableTrades.Image6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage6Null() {
                this[this.tableTrades.Image6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage7Null() {
                return this.IsNull(this.tableTrades.Image7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage7Null() {
                this[this.tableTrades.Image7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage8Null() {
                return this.IsNull(this.tableTrades.Image8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage8Null() {
                this[this.tableTrades.Image8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage9Null() {
                return this.IsNull(this.tableTrades.Image9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage9Null() {
                this[this.tableTrades.Image9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage10Null() {
                return this.IsNull(this.tableTrades.Image10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage10Null() {
                this[this.tableTrades.Image10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClientCodeNull() {
                return this.IsNull(this.tableTrades.ClientCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClientCodeNull() {
                this[this.tableTrades.ClientCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClientNameNull() {
                return this.IsNull(this.tableTrades.ClientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClientNameNull() {
                this[this.tableTrades.ClientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDriverCarNoNull() {
                return this.IsNull(this.tableTrades.DriverCarNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDriverCarNoNull() {
                this[this.tableTrades.DriverCarNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDriverBizNoNull() {
                return this.IsNull(this.tableTrades.DriverBizNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDriverBizNoNull() {
                this[this.tableTrades.DriverBizNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDriverNameNull() {
                return this.IsNull(this.tableTrades.DriverNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDriverNameNull() {
                this[this.tableTrades.DriverNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDriverLoginIdNull() {
                return this.IsNull(this.tableTrades.DriverLoginIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDriverLoginIdNull() {
                this[this.tableTrades.DriverLoginIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMIDNull() {
                return this.IsNull(this.tableTrades.MIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMIDNull() {
                this[this.tableTrades.MIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsServiceStateNull() {
                return this.IsNull(this.tableTrades.ServiceStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetServiceStateNull() {
                this[this.tableTrades.ServiceStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDriverMobileNoNull() {
                return this.IsNull(this.tableTrades.DriverMobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDriverMobileNoNull() {
                this[this.tableTrades.DriverMobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSubClientIdNull() {
                return this.IsNull(this.tableTrades.SubClientIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSubClientIdNull() {
                this[this.tableTrades.SubClientIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClientUserIdNull() {
                return this.IsNull(this.tableTrades.ClientUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClientUserIdNull() {
                this[this.tableTrades.ClientUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPointMethodNull() {
                return this.IsNull(this.tableTrades.PointMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPointMethodNull() {
                this[this.tableTrades.PointMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFeeNull() {
                return this.IsNull(this.tableTrades.FeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFeeNull() {
                this[this.tableTrades.FeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBizNoNull() {
                return this.IsNull(this.tableTrades.BizNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBizNoNull() {
                this[this.tableTrades.BizNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableTrades.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNameNull() {
                this[this.tableTrades.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsExcelExportYNNull() {
                return this.IsNull(this.tableTrades.ExcelExportYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetExcelExportYNNull() {
                this[this.tableTrades.ExcelExportYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEtaxCanCelYNNull() {
                return this.IsNull(this.tableTrades.EtaxCanCelYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEtaxCanCelYNNull() {
                this[this.tableTrades.EtaxCanCelYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IstrusteeMgtKeyNull() {
                return this.IsNull(this.tableTrades.trusteeMgtKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SettrusteeMgtKeyNull() {
                this[this.tableTrades.trusteeMgtKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTransportDateNull() {
                return this.IsNull(this.tableTrades.TransportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTransportDateNull() {
                this[this.tableTrades.TransportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStartStateNull() {
                return this.IsNull(this.tableTrades.StartStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStartStateNull() {
                this[this.tableTrades.StartStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStopStateNull() {
                return this.IsNull(this.tableTrades.StopStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStopStateNull() {
                this[this.tableTrades.StopStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPdfFileNameNull() {
                return this.IsNull(this.tableTrades.PdfFileNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPdfFileNameNull() {
                this[this.tableTrades.PdfFileNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAipIdNull() {
                return this.IsNull(this.tableTrades.AipIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAipIdNull() {
                this[this.tableTrades.AipIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDocIdNull() {
                return this.IsNull(this.tableTrades.DocIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDocIdNull() {
                this[this.tableTrades.DocIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDeleteYnNull() {
                return this.IsNull(this.tableTrades.DeleteYnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDeleteYnNull() {
                this[this.tableTrades.DeleteYnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUpdateDateTimeNull() {
                return this.IsNull(this.tableTrades.UpdateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUpdateDateTimeNull() {
                this[this.tableTrades.UpdateDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOTradeIdNull() {
                return this.IsNull(this.tableTrades.OTradeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOTradeIdNull() {
                this[this.tableTrades.OTradeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsReferralIdNull() {
                return this.IsNull(this.tableTrades.ReferralIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetReferralIdNull() {
                this[this.tableTrades.ReferralIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTaxGubunNull() {
                return this.IsNull(this.tableTrades.TaxGubunColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTaxGubunNull() {
                this[this.tableTrades.TaxGubunColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsbillNoNull() {
                return this.IsNull(this.tableTrades.billNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetbillNoNull() {
                this[this.tableTrades.billNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TradesBasKetRow : global::System.Data.DataRow {
            
            private TradesBasKetDataTable tableTradesBasKet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal TradesBasKetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTradesBasKet = ((TradesBasKetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int TradeId {
                get {
                    return ((int)(this[this.tableTradesBasKet.TradeIdColumn]));
                }
                set {
                    this[this.tableTradesBasKet.TradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime RequestDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTradesBasKet.RequestDateColumn]));
                }
                set {
                    this[this.tableTradesBasKet.RequestDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime BeginDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTradesBasKet.BeginDateColumn]));
                }
                set {
                    this[this.tableTradesBasKet.BeginDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime EndDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTradesBasKet.EndDateColumn]));
                }
                set {
                    this[this.tableTradesBasKet.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Item {
                get {
                    if (this.IsItemNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.ItemColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.ItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Price {
                get {
                    return ((decimal)(this[this.tableTradesBasKet.PriceColumn]));
                }
                set {
                    this[this.tableTradesBasKet.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal VAT {
                get {
                    return ((decimal)(this[this.tableTradesBasKet.VATColumn]));
                }
                set {
                    this[this.tableTradesBasKet.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Amount {
                get {
                    return ((decimal)(this[this.tableTradesBasKet.AmountColumn]));
                }
                set {
                    this[this.tableTradesBasKet.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int PayState {
                get {
                    return ((int)(this[this.tableTradesBasKet.PayStateColumn]));
                }
                set {
                    this[this.tableTradesBasKet.PayStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime PayDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTradesBasKet.PayDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TradesBasKet\' 테이블의 \'PayDate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTradesBasKet.PayDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PayBankName {
                get {
                    if (this.IsPayBankNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.PayBankNameColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.PayBankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PayBankCode {
                get {
                    if (this.IsPayBankCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.PayBankCodeColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.PayBankCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PayAccountNo {
                get {
                    if (this.IsPayAccountNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.PayAccountNoColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.PayAccountNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PayInputName {
                get {
                    if (this.IsPayInputNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.PayInputNameColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.PayInputNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DriverId {
                get {
                    return ((int)(this[this.tableTradesBasKet.DriverIdColumn]));
                }
                set {
                    this[this.tableTradesBasKet.DriverIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ClientId {
                get {
                    if (this.IsClientIdNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tableTradesBasKet.ClientIdColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.ClientIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool UseTax {
                get {
                    return ((bool)(this[this.tableTradesBasKet.UseTaxColumn]));
                }
                set {
                    this[this.tableTradesBasKet.UseTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LGD_OID {
                get {
                    if (this.IsLGD_OIDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.LGD_OIDColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.LGD_OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LGD_Result {
                get {
                    if (this.IsLGD_ResultNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.LGD_ResultColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.LGD_ResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime LGD_Accept_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTradesBasKet.LGD_Accept_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TradesBasKet\' 테이블의 \'LGD_Accept_Date\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTradesBasKet.LGD_Accept_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime LGD_Cancel_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTradesBasKet.LGD_Cancel_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TradesBasKet\' 테이블의 \'LGD_Cancel_Date\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTradesBasKet.LGD_Cancel_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LGD_Last_Function {
                get {
                    if (this.IsLGD_Last_FunctionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.LGD_Last_FunctionColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.LGD_Last_FunctionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime LGD_Last_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTradesBasKet.LGD_Last_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TradesBasKet\' 테이블의 \'LGD_Last_Date\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTradesBasKet.LGD_Last_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool AllowAcc {
                get {
                    return ((bool)(this[this.tableTradesBasKet.AllowAccColumn]));
                }
                set {
                    this[this.tableTradesBasKet.AllowAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool HasAcc {
                get {
                    return ((bool)(this[this.tableTradesBasKet.HasAccColumn]));
                }
                set {
                    this[this.tableTradesBasKet.HasAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ClientAccId {
                get {
                    if (this.IsClientAccIdNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tableTradesBasKet.ClientAccIdColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.ClientAccIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int SUMYN {
                get {
                    if (this.IsSUMYNNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tableTradesBasKet.SUMYNColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.SUMYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SumPrice {
                get {
                    if (this.IsSumPriceNull()) {
                        return 0m;
                    }
                    else {
                        return ((decimal)(this[this.tableTradesBasKet.SumPriceColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.SumPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SumVAT {
                get {
                    if (this.IsSumVATNull()) {
                        return 0m;
                    }
                    else {
                        return ((decimal)(this[this.tableTradesBasKet.SumVATColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.SumVATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SumAmount {
                get {
                    if (this.IsSumAmountNull()) {
                        return 0m;
                    }
                    else {
                        return ((decimal)(this[this.tableTradesBasKet.SumAmountColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.SumAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SUMFROMDate {
                get {
                    if (this.IsSUMFROMDateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.SUMFROMDateColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.SUMFROMDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SUMToDate {
                get {
                    if (this.IsSUMToDateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.SUMToDateColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.SUMToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image1 {
                get {
                    if (this.IsImage1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.Image1Column]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.Image1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image2 {
                get {
                    if (this.IsImage2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.Image2Column]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.Image2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image3 {
                get {
                    if (this.IsImage3Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.Image3Column]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.Image3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image4 {
                get {
                    if (this.IsImage4Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.Image4Column]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.Image4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image5 {
                get {
                    if (this.IsImage5Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.Image5Column]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.Image5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image6 {
                get {
                    if (this.IsImage6Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.Image6Column]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.Image6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image7 {
                get {
                    if (this.IsImage7Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.Image7Column]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.Image7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image8 {
                get {
                    if (this.IsImage8Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.Image8Column]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.Image8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image9 {
                get {
                    if (this.IsImage9Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.Image9Column]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.Image9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Image10 {
                get {
                    if (this.IsImage10Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.Image10Column]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.Image10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool HasETax {
                get {
                    return ((bool)(this[this.tableTradesBasKet.HasETaxColumn]));
                }
                set {
                    this[this.tableTradesBasKet.HasETaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int SourceType {
                get {
                    return ((int)(this[this.tableTradesBasKet.SourceTypeColumn]));
                }
                set {
                    this[this.tableTradesBasKet.SourceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ClientCode {
                get {
                    if (this.IsClientCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.ClientCodeColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.ClientCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ClientName {
                get {
                    if (this.IsClientNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.ClientNameColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DriverCarNo {
                get {
                    if (this.IsDriverCarNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.DriverCarNoColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.DriverCarNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DriverBizNo {
                get {
                    if (this.IsDriverBizNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.DriverBizNoColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.DriverBizNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DriverName {
                get {
                    if (this.IsDriverNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.DriverNameColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.DriverNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DriverLoginId {
                get {
                    if (this.IsDriverLoginIdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.DriverLoginIdColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.DriverLoginIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MID {
                get {
                    if (this.IsMIDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.MIDColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.MIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ServiceState {
                get {
                    if (this.IsServiceStateNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tableTradesBasKet.ServiceStateColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.ServiceStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DriverMobileNo {
                get {
                    if (this.IsDriverMobileNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.DriverMobileNoColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.DriverMobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int AcceptCount {
                get {
                    return ((int)(this[this.tableTradesBasKet.AcceptCountColumn]));
                }
                set {
                    this[this.tableTradesBasKet.AcceptCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int SubClientId {
                get {
                    if (this.IsSubClientIdNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tableTradesBasKet.SubClientIdColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.SubClientIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ClientUserId {
                get {
                    if (this.IsClientUserIdNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tableTradesBasKet.ClientUserIdColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.ClientUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int PointMethod {
                get {
                    if (this.IsPointMethodNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tableTradesBasKet.PointMethodColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.PointMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Fee {
                get {
                    try {
                        return ((decimal)(this[this.tableTradesBasKet.FeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TradesBasKet\' 테이블의 \'Fee\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTradesBasKet.FeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BizNo {
                get {
                    if (this.IsBizNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.BizNoColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.BizNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Name {
                get {
                    if (this.IsNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.NameColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ExcelExportYN {
                get {
                    if (this.IsExcelExportYNNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.ExcelExportYNColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.ExcelExportYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string EtaxCanCelYN {
                get {
                    if (this.IsEtaxCanCelYNNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.EtaxCanCelYNColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.EtaxCanCelYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string trusteeMgtKey {
                get {
                    if (this.IstrusteeMgtKeyNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.trusteeMgtKeyColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.trusteeMgtKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime TransportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTradesBasKet.TransportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TradesBasKet\' 테이블의 \'TransportDate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTradesBasKet.TransportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string StartState {
                get {
                    if (this.IsStartStateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.StartStateColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.StartStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string StopState {
                get {
                    if (this.IsStopStateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.StopStateColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.StopStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PdfFileName {
                get {
                    if (this.IsPdfFileNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.PdfFileNameColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.PdfFileNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AipId {
                get {
                    if (this.IsAipIdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.AipIdColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.AipIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DocId {
                get {
                    if (this.IsDocIdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.DocIdColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.DocIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DeleteYn {
                get {
                    if (this.IsDeleteYnNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.DeleteYnColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.DeleteYnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UpdateDateTime {
                get {
                    if (this.IsUpdateDateTimeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableTradesBasKet.UpdateDateTimeColumn]));
                    }
                }
                set {
                    this[this.tableTradesBasKet.UpdateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsItemNull() {
                return this.IsNull(this.tableTradesBasKet.ItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetItemNull() {
                this[this.tableTradesBasKet.ItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPayDateNull() {
                return this.IsNull(this.tableTradesBasKet.PayDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPayDateNull() {
                this[this.tableTradesBasKet.PayDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPayBankNameNull() {
                return this.IsNull(this.tableTradesBasKet.PayBankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPayBankNameNull() {
                this[this.tableTradesBasKet.PayBankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPayBankCodeNull() {
                return this.IsNull(this.tableTradesBasKet.PayBankCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPayBankCodeNull() {
                this[this.tableTradesBasKet.PayBankCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPayAccountNoNull() {
                return this.IsNull(this.tableTradesBasKet.PayAccountNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPayAccountNoNull() {
                this[this.tableTradesBasKet.PayAccountNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPayInputNameNull() {
                return this.IsNull(this.tableTradesBasKet.PayInputNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPayInputNameNull() {
                this[this.tableTradesBasKet.PayInputNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClientIdNull() {
                return this.IsNull(this.tableTradesBasKet.ClientIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClientIdNull() {
                this[this.tableTradesBasKet.ClientIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLGD_OIDNull() {
                return this.IsNull(this.tableTradesBasKet.LGD_OIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLGD_OIDNull() {
                this[this.tableTradesBasKet.LGD_OIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLGD_ResultNull() {
                return this.IsNull(this.tableTradesBasKet.LGD_ResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLGD_ResultNull() {
                this[this.tableTradesBasKet.LGD_ResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLGD_Accept_DateNull() {
                return this.IsNull(this.tableTradesBasKet.LGD_Accept_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLGD_Accept_DateNull() {
                this[this.tableTradesBasKet.LGD_Accept_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLGD_Cancel_DateNull() {
                return this.IsNull(this.tableTradesBasKet.LGD_Cancel_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLGD_Cancel_DateNull() {
                this[this.tableTradesBasKet.LGD_Cancel_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLGD_Last_FunctionNull() {
                return this.IsNull(this.tableTradesBasKet.LGD_Last_FunctionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLGD_Last_FunctionNull() {
                this[this.tableTradesBasKet.LGD_Last_FunctionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLGD_Last_DateNull() {
                return this.IsNull(this.tableTradesBasKet.LGD_Last_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLGD_Last_DateNull() {
                this[this.tableTradesBasKet.LGD_Last_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClientAccIdNull() {
                return this.IsNull(this.tableTradesBasKet.ClientAccIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClientAccIdNull() {
                this[this.tableTradesBasKet.ClientAccIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSUMYNNull() {
                return this.IsNull(this.tableTradesBasKet.SUMYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSUMYNNull() {
                this[this.tableTradesBasKet.SUMYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSumPriceNull() {
                return this.IsNull(this.tableTradesBasKet.SumPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSumPriceNull() {
                this[this.tableTradesBasKet.SumPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSumVATNull() {
                return this.IsNull(this.tableTradesBasKet.SumVATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSumVATNull() {
                this[this.tableTradesBasKet.SumVATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSumAmountNull() {
                return this.IsNull(this.tableTradesBasKet.SumAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSumAmountNull() {
                this[this.tableTradesBasKet.SumAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSUMFROMDateNull() {
                return this.IsNull(this.tableTradesBasKet.SUMFROMDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSUMFROMDateNull() {
                this[this.tableTradesBasKet.SUMFROMDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSUMToDateNull() {
                return this.IsNull(this.tableTradesBasKet.SUMToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSUMToDateNull() {
                this[this.tableTradesBasKet.SUMToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage1Null() {
                return this.IsNull(this.tableTradesBasKet.Image1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage1Null() {
                this[this.tableTradesBasKet.Image1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage2Null() {
                return this.IsNull(this.tableTradesBasKet.Image2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage2Null() {
                this[this.tableTradesBasKet.Image2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage3Null() {
                return this.IsNull(this.tableTradesBasKet.Image3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage3Null() {
                this[this.tableTradesBasKet.Image3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage4Null() {
                return this.IsNull(this.tableTradesBasKet.Image4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage4Null() {
                this[this.tableTradesBasKet.Image4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage5Null() {
                return this.IsNull(this.tableTradesBasKet.Image5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage5Null() {
                this[this.tableTradesBasKet.Image5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage6Null() {
                return this.IsNull(this.tableTradesBasKet.Image6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage6Null() {
                this[this.tableTradesBasKet.Image6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage7Null() {
                return this.IsNull(this.tableTradesBasKet.Image7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage7Null() {
                this[this.tableTradesBasKet.Image7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage8Null() {
                return this.IsNull(this.tableTradesBasKet.Image8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage8Null() {
                this[this.tableTradesBasKet.Image8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage9Null() {
                return this.IsNull(this.tableTradesBasKet.Image9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage9Null() {
                this[this.tableTradesBasKet.Image9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImage10Null() {
                return this.IsNull(this.tableTradesBasKet.Image10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImage10Null() {
                this[this.tableTradesBasKet.Image10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClientCodeNull() {
                return this.IsNull(this.tableTradesBasKet.ClientCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClientCodeNull() {
                this[this.tableTradesBasKet.ClientCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClientNameNull() {
                return this.IsNull(this.tableTradesBasKet.ClientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClientNameNull() {
                this[this.tableTradesBasKet.ClientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDriverCarNoNull() {
                return this.IsNull(this.tableTradesBasKet.DriverCarNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDriverCarNoNull() {
                this[this.tableTradesBasKet.DriverCarNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDriverBizNoNull() {
                return this.IsNull(this.tableTradesBasKet.DriverBizNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDriverBizNoNull() {
                this[this.tableTradesBasKet.DriverBizNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDriverNameNull() {
                return this.IsNull(this.tableTradesBasKet.DriverNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDriverNameNull() {
                this[this.tableTradesBasKet.DriverNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDriverLoginIdNull() {
                return this.IsNull(this.tableTradesBasKet.DriverLoginIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDriverLoginIdNull() {
                this[this.tableTradesBasKet.DriverLoginIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMIDNull() {
                return this.IsNull(this.tableTradesBasKet.MIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMIDNull() {
                this[this.tableTradesBasKet.MIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsServiceStateNull() {
                return this.IsNull(this.tableTradesBasKet.ServiceStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetServiceStateNull() {
                this[this.tableTradesBasKet.ServiceStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDriverMobileNoNull() {
                return this.IsNull(this.tableTradesBasKet.DriverMobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDriverMobileNoNull() {
                this[this.tableTradesBasKet.DriverMobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSubClientIdNull() {
                return this.IsNull(this.tableTradesBasKet.SubClientIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSubClientIdNull() {
                this[this.tableTradesBasKet.SubClientIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClientUserIdNull() {
                return this.IsNull(this.tableTradesBasKet.ClientUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClientUserIdNull() {
                this[this.tableTradesBasKet.ClientUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPointMethodNull() {
                return this.IsNull(this.tableTradesBasKet.PointMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPointMethodNull() {
                this[this.tableTradesBasKet.PointMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFeeNull() {
                return this.IsNull(this.tableTradesBasKet.FeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFeeNull() {
                this[this.tableTradesBasKet.FeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBizNoNull() {
                return this.IsNull(this.tableTradesBasKet.BizNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBizNoNull() {
                this[this.tableTradesBasKet.BizNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableTradesBasKet.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNameNull() {
                this[this.tableTradesBasKet.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsExcelExportYNNull() {
                return this.IsNull(this.tableTradesBasKet.ExcelExportYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetExcelExportYNNull() {
                this[this.tableTradesBasKet.ExcelExportYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEtaxCanCelYNNull() {
                return this.IsNull(this.tableTradesBasKet.EtaxCanCelYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEtaxCanCelYNNull() {
                this[this.tableTradesBasKet.EtaxCanCelYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IstrusteeMgtKeyNull() {
                return this.IsNull(this.tableTradesBasKet.trusteeMgtKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SettrusteeMgtKeyNull() {
                this[this.tableTradesBasKet.trusteeMgtKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTransportDateNull() {
                return this.IsNull(this.tableTradesBasKet.TransportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTransportDateNull() {
                this[this.tableTradesBasKet.TransportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStartStateNull() {
                return this.IsNull(this.tableTradesBasKet.StartStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStartStateNull() {
                this[this.tableTradesBasKet.StartStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStopStateNull() {
                return this.IsNull(this.tableTradesBasKet.StopStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStopStateNull() {
                this[this.tableTradesBasKet.StopStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPdfFileNameNull() {
                return this.IsNull(this.tableTradesBasKet.PdfFileNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPdfFileNameNull() {
                this[this.tableTradesBasKet.PdfFileNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAipIdNull() {
                return this.IsNull(this.tableTradesBasKet.AipIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAipIdNull() {
                this[this.tableTradesBasKet.AipIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDocIdNull() {
                return this.IsNull(this.tableTradesBasKet.DocIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDocIdNull() {
                this[this.tableTradesBasKet.DocIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDeleteYnNull() {
                return this.IsNull(this.tableTradesBasKet.DeleteYnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDeleteYnNull() {
                this[this.tableTradesBasKet.DeleteYnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUpdateDateTimeNull() {
                return this.IsNull(this.tableTradesBasKet.UpdateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUpdateDateTimeNull() {
                this[this.tableTradesBasKet.UpdateDateTimeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TaxOutRow : global::System.Data.DataRow {
            
            private TaxOutDataTable tableTaxOut;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal TaxOutRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTaxOut = ((TaxOutDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DriverBizNo {
                get {
                    try {
                        return ((string)(this[this.tableTaxOut.DriverBizNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'DriverBizNo\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.DriverBizNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DriverCEO {
                get {
                    return ((string)(this[this.tableTaxOut.DriverCEOColumn]));
                }
                set {
                    this[this.tableTaxOut.DriverCEOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DriverName {
                get {
                    return ((string)(this[this.tableTaxOut.DriverNameColumn]));
                }
                set {
                    this[this.tableTaxOut.DriverNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DriverUptae {
                get {
                    return ((string)(this[this.tableTaxOut.DriverUptaeColumn]));
                }
                set {
                    this[this.tableTaxOut.DriverUptaeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DriverUpjong {
                get {
                    return ((string)(this[this.tableTaxOut.DriverUpjongColumn]));
                }
                set {
                    this[this.tableTaxOut.DriverUpjongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DriverAddress {
                get {
                    try {
                        return ((string)(this[this.tableTaxOut.DriverAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'DriverAddress\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.DriverAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ClientBizNo {
                get {
                    return ((string)(this[this.tableTaxOut.ClientBizNoColumn]));
                }
                set {
                    this[this.tableTaxOut.ClientBizNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ClientName {
                get {
                    return ((string)(this[this.tableTaxOut.ClientNameColumn]));
                }
                set {
                    this[this.tableTaxOut.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ClientCEO {
                get {
                    return ((string)(this[this.tableTaxOut.ClientCEOColumn]));
                }
                set {
                    this[this.tableTaxOut.ClientCEOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ClientAddress {
                get {
                    try {
                        return ((string)(this[this.tableTaxOut.ClientAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'ClientAddress\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.ClientAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ClientUptae {
                get {
                    return ((string)(this[this.tableTaxOut.ClientUptaeColumn]));
                }
                set {
                    this[this.tableTaxOut.ClientUptaeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ClientUpjong {
                get {
                    return ((string)(this[this.tableTaxOut.ClientUpjongColumn]));
                }
                set {
                    this[this.tableTaxOut.ClientUpjongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime PayDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTaxOut.PayDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'PayDate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.PayDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Price {
                get {
                    return ((decimal)(this[this.tableTaxOut.PriceColumn]));
                }
                set {
                    this[this.tableTaxOut.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal VAT {
                get {
                    return ((decimal)(this[this.tableTaxOut.VATColumn]));
                }
                set {
                    this[this.tableTaxOut.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Amount {
                get {
                    return ((decimal)(this[this.tableTaxOut.AmountColumn]));
                }
                set {
                    this[this.tableTaxOut.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Item {
                get {
                    try {
                        return ((string)(this[this.tableTaxOut.ItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'Item\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.ItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int TradeId {
                get {
                    return ((int)(this[this.tableTaxOut.TradeIdColumn]));
                }
                set {
                    this[this.tableTaxOut.TradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime RequestDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTaxOut.RequestDateColumn]));
                }
                set {
                    this[this.tableTaxOut.RequestDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int SUMYN {
                get {
                    try {
                        return ((int)(this[this.tableTaxOut.SUMYNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'SUMYN\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.SUMYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SumPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableTaxOut.SumPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'SumPrice\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.SumPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SumVAT {
                get {
                    try {
                        return ((decimal)(this[this.tableTaxOut.SumVATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'SumVAT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.SumVATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SumAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableTaxOut.SumAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'SumAmount\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.SumAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SUMFROMDate {
                get {
                    try {
                        return ((string)(this[this.tableTaxOut.SUMFROMDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'SUMFROMDate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.SUMFROMDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SUMToDate {
                get {
                    try {
                        return ((string)(this[this.tableTaxOut.SUMToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'SUMToDate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.SUMToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime BeginDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTaxOut.BeginDateColumn]));
                }
                set {
                    this[this.tableTaxOut.BeginDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime EndDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTaxOut.EndDateColumn]));
                }
                set {
                    this[this.tableTaxOut.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DivText {
                get {
                    try {
                        return ((string)(this[this.tableTaxOut.DivTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'DivText\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.DivTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Remark1 {
                get {
                    try {
                        return ((string)(this[this.tableTaxOut.Remark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'Remark1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.Remark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Remark2 {
                get {
                    try {
                        return ((string)(this[this.tableTaxOut.Remark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'Remark2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.Remark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Etax {
                get {
                    try {
                        return ((string)(this[this.tableTaxOut.EtaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'Etax\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.EtaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Remark3 {
                get {
                    return ((string)(this[this.tableTaxOut.Remark3Column]));
                }
                set {
                    this[this.tableTaxOut.Remark3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ReferralName {
                get {
                    try {
                        return ((string)(this[this.tableTaxOut.ReferralNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'ReferralName\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.ReferralNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Remark4 {
                get {
                    try {
                        return ((string)(this[this.tableTaxOut.Remark4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'Remark4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.Remark4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Remark5 {
                get {
                    try {
                        return ((string)(this[this.tableTaxOut.Remark5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TaxOut\' 테이블의 \'Remark5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTaxOut.Remark5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDriverBizNoNull() {
                return this.IsNull(this.tableTaxOut.DriverBizNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDriverBizNoNull() {
                this[this.tableTaxOut.DriverBizNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDriverAddressNull() {
                return this.IsNull(this.tableTaxOut.DriverAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDriverAddressNull() {
                this[this.tableTaxOut.DriverAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClientAddressNull() {
                return this.IsNull(this.tableTaxOut.ClientAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClientAddressNull() {
                this[this.tableTaxOut.ClientAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPayDateNull() {
                return this.IsNull(this.tableTaxOut.PayDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPayDateNull() {
                this[this.tableTaxOut.PayDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsItemNull() {
                return this.IsNull(this.tableTaxOut.ItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetItemNull() {
                this[this.tableTaxOut.ItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSUMYNNull() {
                return this.IsNull(this.tableTaxOut.SUMYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSUMYNNull() {
                this[this.tableTaxOut.SUMYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSumPriceNull() {
                return this.IsNull(this.tableTaxOut.SumPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSumPriceNull() {
                this[this.tableTaxOut.SumPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSumVATNull() {
                return this.IsNull(this.tableTaxOut.SumVATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSumVATNull() {
                this[this.tableTaxOut.SumVATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSumAmountNull() {
                return this.IsNull(this.tableTaxOut.SumAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSumAmountNull() {
                this[this.tableTaxOut.SumAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSUMFROMDateNull() {
                return this.IsNull(this.tableTaxOut.SUMFROMDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSUMFROMDateNull() {
                this[this.tableTaxOut.SUMFROMDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSUMToDateNull() {
                return this.IsNull(this.tableTaxOut.SUMToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSUMToDateNull() {
                this[this.tableTaxOut.SUMToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDivTextNull() {
                return this.IsNull(this.tableTaxOut.DivTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDivTextNull() {
                this[this.tableTaxOut.DivTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRemark1Null() {
                return this.IsNull(this.tableTaxOut.Remark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRemark1Null() {
                this[this.tableTaxOut.Remark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRemark2Null() {
                return this.IsNull(this.tableTaxOut.Remark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRemark2Null() {
                this[this.tableTaxOut.Remark2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEtaxNull() {
                return this.IsNull(this.tableTaxOut.EtaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEtaxNull() {
                this[this.tableTaxOut.EtaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsReferralNameNull() {
                return this.IsNull(this.tableTaxOut.ReferralNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetReferralNameNull() {
                this[this.tableTaxOut.ReferralNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRemark4Null() {
                return this.IsNull(this.tableTaxOut.Remark4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRemark4Null() {
                this[this.tableTaxOut.Remark4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRemark5Null() {
                return this.IsNull(this.tableTaxOut.Remark5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRemark5Null() {
                this[this.tableTaxOut.Remark5Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class TradesRowChangeEvent : global::System.EventArgs {
            
            private TradesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TradesRowChangeEvent(TradesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TradesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class TradesBasKetRowChangeEvent : global::System.EventArgs {
            
            private TradesBasKetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TradesBasKetRowChangeEvent(TradesBasKetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TradesBasKetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class TaxOutRowChangeEvent : global::System.EventArgs {
            
            private TaxOutRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TaxOutRowChangeEvent(TaxOutRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TaxOutRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace mycalltruck.Admin.DataSets.TradeDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TradesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public TradesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Trades";
            tableMapping.ColumnMappings.Add("TradeId", "TradeId");
            tableMapping.ColumnMappings.Add("RequestDate", "RequestDate");
            tableMapping.ColumnMappings.Add("BeginDate", "BeginDate");
            tableMapping.ColumnMappings.Add("EndDate", "EndDate");
            tableMapping.ColumnMappings.Add("Item", "Item");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("VAT", "VAT");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("PayState", "PayState");
            tableMapping.ColumnMappings.Add("PayDate", "PayDate");
            tableMapping.ColumnMappings.Add("PayBankName", "PayBankName");
            tableMapping.ColumnMappings.Add("PayBankCode", "PayBankCode");
            tableMapping.ColumnMappings.Add("PayAccountNo", "PayAccountNo");
            tableMapping.ColumnMappings.Add("PayInputName", "PayInputName");
            tableMapping.ColumnMappings.Add("DriverId", "DriverId");
            tableMapping.ColumnMappings.Add("ClientId", "ClientId");
            tableMapping.ColumnMappings.Add("UseTax", "UseTax");
            tableMapping.ColumnMappings.Add("LGD_OID", "LGD_OID");
            tableMapping.ColumnMappings.Add("LGD_Result", "LGD_Result");
            tableMapping.ColumnMappings.Add("LGD_Accept_Date", "LGD_Accept_Date");
            tableMapping.ColumnMappings.Add("LGD_Cancel_Date", "LGD_Cancel_Date");
            tableMapping.ColumnMappings.Add("LGD_Last_Function", "LGD_Last_Function");
            tableMapping.ColumnMappings.Add("LGD_Last_Date", "LGD_Last_Date");
            tableMapping.ColumnMappings.Add("AllowAcc", "AllowAcc");
            tableMapping.ColumnMappings.Add("HasAcc", "HasAcc");
            tableMapping.ColumnMappings.Add("ClientAccId", "ClientAccId");
            tableMapping.ColumnMappings.Add("SUMYN", "SUMYN");
            tableMapping.ColumnMappings.Add("SumPrice", "SumPrice");
            tableMapping.ColumnMappings.Add("SumVAT", "SumVAT");
            tableMapping.ColumnMappings.Add("SumAmount", "SumAmount");
            tableMapping.ColumnMappings.Add("SUMFROMDate", "SUMFROMDate");
            tableMapping.ColumnMappings.Add("SUMToDate", "SUMToDate");
            tableMapping.ColumnMappings.Add("Image1", "Image1");
            tableMapping.ColumnMappings.Add("Image2", "Image2");
            tableMapping.ColumnMappings.Add("Image3", "Image3");
            tableMapping.ColumnMappings.Add("Image4", "Image4");
            tableMapping.ColumnMappings.Add("Image5", "Image5");
            tableMapping.ColumnMappings.Add("Image6", "Image6");
            tableMapping.ColumnMappings.Add("Image7", "Image7");
            tableMapping.ColumnMappings.Add("Image8", "Image8");
            tableMapping.ColumnMappings.Add("Image9", "Image9");
            tableMapping.ColumnMappings.Add("Image10", "Image10");
            tableMapping.ColumnMappings.Add("HasETax", "HasETax");
            tableMapping.ColumnMappings.Add("SourceType", "SourceType");
            tableMapping.ColumnMappings.Add("AcceptCount", "AcceptCount");
            tableMapping.ColumnMappings.Add("SubClientId", "SubClientId");
            tableMapping.ColumnMappings.Add("ClientUserId", "ClientUserId");
            tableMapping.ColumnMappings.Add("PointMethod", "PointMethod");
            tableMapping.ColumnMappings.Add("Fee", "Fee");
            tableMapping.ColumnMappings.Add("BizNo", "BizNo");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("ExcelExportYN", "ExcelExportYN");
            tableMapping.ColumnMappings.Add("EtaxCanCelYN", "EtaxCanCelYN");
            tableMapping.ColumnMappings.Add("trusteeMgtKey", "trusteeMgtKey");
            tableMapping.ColumnMappings.Add("TransportDate", "TransportDate");
            tableMapping.ColumnMappings.Add("StartState", "StartState");
            tableMapping.ColumnMappings.Add("StopState", "StopState");
            tableMapping.ColumnMappings.Add("TaxGubun", "TaxGubun");
            tableMapping.ColumnMappings.Add("billNo", "billNo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Trades] WHERE (([TradeId] = @Original_TradeId) AND ([RequestDate] = " +
                "@Original_RequestDate) AND ([BeginDate] = @Original_BeginDate) AND ([EndDate] = " +
                "@Original_EndDate) AND ([Price] = @Original_Price) AND ([VAT] = @Original_VAT) A" +
                "ND ([Amount] = @Original_Amount) AND ([PayState] = @Original_PayState) AND ((@Is" +
                "Null_PayDate = 1 AND [PayDate] IS NULL) OR ([PayDate] = @Original_PayDate)) AND " +
                "([DriverId] = @Original_DriverId) AND ((@IsNull_ClientId = 1 AND [ClientId] IS N" +
                "ULL) OR ([ClientId] = @Original_ClientId)) AND ([UseTax] = @Original_UseTax) AND" +
                " ((@IsNull_LGD_Accept_Date = 1 AND [LGD_Accept_Date] IS NULL) OR ([LGD_Accept_Da" +
                "te] = @Original_LGD_Accept_Date)) AND ((@IsNull_LGD_Cancel_Date = 1 AND [LGD_Can" +
                "cel_Date] IS NULL) OR ([LGD_Cancel_Date] = @Original_LGD_Cancel_Date)) AND ((@Is" +
                "Null_LGD_Last_Date = 1 AND [LGD_Last_Date] IS NULL) OR ([LGD_Last_Date] = @Origi" +
                "nal_LGD_Last_Date)) AND ([AllowAcc] = @Original_AllowAcc) AND ([HasAcc] = @Origi" +
                "nal_HasAcc) AND ((@IsNull_ClientAccId = 1 AND [ClientAccId] IS NULL) OR ([Client" +
                "AccId] = @Original_ClientAccId)) AND ((@IsNull_SUMYN = 1 AND [SUMYN] IS NULL) OR" +
                " ([SUMYN] = @Original_SUMYN)) AND ((@IsNull_SumPrice = 1 AND [SumPrice] IS NULL)" +
                " OR ([SumPrice] = @Original_SumPrice)) AND ((@IsNull_SumVAT = 1 AND [SumVAT] IS " +
                "NULL) OR ([SumVAT] = @Original_SumVAT)) AND ((@IsNull_SumAmount = 1 AND [SumAmou" +
                "nt] IS NULL) OR ([SumAmount] = @Original_SumAmount)) AND ([HasETax] = @Original_" +
                "HasETax) AND ([SourceType] = @Original_SourceType) AND ([AcceptCount] = @Origina" +
                "l_AcceptCount) AND ((@IsNull_SubClientId = 1 AND [SubClientId] IS NULL) OR ([Sub" +
                "ClientId] = @Original_SubClientId)) AND ((@IsNull_ClientUserId = 1 AND [ClientUs" +
                "erId] IS NULL) OR ([ClientUserId] = @Original_ClientUserId)) AND ((@IsNull_Point" +
                "Method = 1 AND [PointMethod] IS NULL) OR ([PointMethod] = @Original_PointMethod)" +
                ") AND ((@IsNull_Fee = 1 AND [Fee] IS NULL) OR ([Fee] = @Original_Fee)) AND ((@Is" +
                "Null_TransportDate = 1 AND [TransportDate] IS NULL) OR ([TransportDate] = @Origi" +
                "nal_TransportDate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TradeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RequestDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BeginDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeginDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PayState", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayState", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PayDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PayDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DriverId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseTax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LGD_Accept_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Accept_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LGD_Accept_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Accept_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LGD_Cancel_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Cancel_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LGD_Cancel_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Cancel_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LGD_Last_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Last_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LGD_Last_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Last_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowAcc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowAcc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HasAcc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasAcc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientAccId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientAccId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientAccId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientAccId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SUMYN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMYN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SUMYN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMYN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SumPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SumPrice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SumPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SumVAT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SumVAT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SumVAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumVAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SumAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SumAmount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SumAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HasETax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasETax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcceptCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcceptCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubClientId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubClientId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientUserId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientUserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PointMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PointMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Fee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransportDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransportDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Trades] ([RequestDate], [BeginDate], [EndDate], [Item], [Price], [VA" +
                "T], [Amount], [PayState], [PayDate], [PayBankName], [PayBankCode], [PayAccountNo" +
                "], [PayInputName], [DriverId], [ClientId], [UseTax], [LGD_OID], [LGD_Result], [L" +
                "GD_Accept_Date], [LGD_Cancel_Date], [LGD_Last_Function], [LGD_Last_Date], [Allow" +
                "Acc], [HasAcc], [ClientAccId], [SUMYN], [SumPrice], [SumVAT], [SumAmount], [SUMF" +
                "ROMDate], [SUMToDate], [Image1], [Image2], [Image3], [Image4], [Image5], [Image6" +
                "], [Image7], [Image8], [Image9], [Image10], [HasETax], [SourceType], [AcceptCoun" +
                "t], [SubClientId], [ClientUserId], [PointMethod], [Fee], [BizNo], [Name], [Excel" +
                "ExportYN], [EtaxCanCelYN], [trusteeMgtKey], [TransportDate], [StartState], [Stop" +
                "State], [billNo]) VALUES (@RequestDate, @BeginDate, @EndDate, @Item, @Price, @VA" +
                "T, @Amount, @PayState, @PayDate, @PayBankName, @PayBankCode, @PayAccountNo, @Pay" +
                "InputName, @DriverId, @ClientId, @UseTax, @LGD_OID, @LGD_Result, @LGD_Accept_Dat" +
                "e, @LGD_Cancel_Date, @LGD_Last_Function, @LGD_Last_Date, @AllowAcc, @HasAcc, @Cl" +
                "ientAccId, @SUMYN, @SumPrice, @SumVAT, @SumAmount, @SUMFROMDate, @SUMToDate, @Im" +
                "age1, @Image2, @Image3, @Image4, @Image5, @Image6, @Image7, @Image8, @Image9, @I" +
                "mage10, @HasETax, @SourceType, @AcceptCount, @SubClientId, @ClientUserId, @Point" +
                "Method, @Fee, @BizNo, @Name, @ExcelExportYN, @EtaxCanCelYN, @trusteeMgtKey, @Tra" +
                "nsportDate, @StartState, @StopState, @billNo);\r\nSELECT TradeId, RequestDate, Beg" +
                "inDate, EndDate, Item, Price, VAT, Amount, PayState, PayDate, PayBankName, PayBa" +
                "nkCode, PayAccountNo, PayInputName, DriverId, ClientId, UseTax, LGD_OID, LGD_Res" +
                "ult, LGD_Accept_Date, LGD_Cancel_Date, LGD_Last_Function, LGD_Last_Date, AllowAc" +
                "c, HasAcc, ClientAccId, SUMYN, SumPrice, SumVAT, SumAmount, SUMFROMDate, SUMToDa" +
                "te, Image1, Image2, Image3, Image4, Image5, Image6, Image7, Image8, Image9, Imag" +
                "e10, HasETax, SourceType, AcceptCount, SubClientId, ClientUserId, PointMethod, F" +
                "ee, BizNo, Name, ExcelExportYN, EtaxCanCelYN, trusteeMgtKey, TransportDate, Star" +
                "tState, StopState, ISNULL(TaxGubun, \'\') AS TaxGubun, BillNo FROM Trades WHERE (T" +
                "radeId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequestDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BeginDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeginDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayState", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayBankName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayBankName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayBankCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayBankCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayAccountNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayAccountNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayInputName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayInputName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriverId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseTax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Result", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Accept_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Accept_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Cancel_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Cancel_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Last_Function", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Last_Function", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Last_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Last_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowAcc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowAcc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasAcc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasAcc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientAccId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientAccId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUMYN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMYN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SumPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SumVAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumVAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SumAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUMFROMDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMFROMDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUMToDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMToDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image7", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image8", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image9", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image10", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasETax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasETax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcceptCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcceptCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubClientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PointMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Fee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BizNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BizNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcelExportYN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcelExportYN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EtaxCanCelYN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EtaxCanCelYN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trusteeMgtKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trusteeMgtKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransportDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StopState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StopState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "billNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Trades] SET [RequestDate] = @RequestDate, [BeginDate] = @BeginDate, [EndD" +
                "ate] = @EndDate, [Item] = @Item, [Price] = @Price, [VAT] = @VAT, [Amount] = @Amo" +
                "unt, [PayState] = @PayState, [PayDate] = @PayDate, [PayBankName] = @PayBankName," +
                " [PayBankCode] = @PayBankCode, [PayAccountNo] = @PayAccountNo, [PayInputName] = " +
                "@PayInputName, [DriverId] = @DriverId, [ClientId] = @ClientId, [UseTax] = @UseTa" +
                "x, [LGD_OID] = @LGD_OID, [LGD_Result] = @LGD_Result, [LGD_Accept_Date] = @LGD_Ac" +
                "cept_Date, [LGD_Cancel_Date] = @LGD_Cancel_Date, [LGD_Last_Function] = @LGD_Last" +
                "_Function, [LGD_Last_Date] = @LGD_Last_Date, [AllowAcc] = @AllowAcc, [HasAcc] = " +
                "@HasAcc, [ClientAccId] = @ClientAccId, [SUMYN] = @SUMYN, [SumPrice] = @SumPrice," +
                " [SumVAT] = @SumVAT, [SumAmount] = @SumAmount, [SUMFROMDate] = @SUMFROMDate, [SU" +
                "MToDate] = @SUMToDate, [Image1] = @Image1, [Image2] = @Image2, [Image3] = @Image" +
                "3, [Image4] = @Image4, [Image5] = @Image5, [Image6] = @Image6, [Image7] = @Image" +
                "7, [Image8] = @Image8, [Image9] = @Image9, [Image10] = @Image10, [HasETax] = @Ha" +
                "sETax, [SourceType] = @SourceType, [AcceptCount] = @AcceptCount, [SubClientId] =" +
                " @SubClientId, [ClientUserId] = @ClientUserId, [PointMethod] = @PointMethod, [Fe" +
                "e] = @Fee, [BizNo] = @BizNo, [Name] = @Name, [ExcelExportYN] = @ExcelExportYN, [" +
                "EtaxCanCelYN] = @EtaxCanCelYN, [trusteeMgtKey] = @trusteeMgtKey, [TransportDate]" +
                " = @TransportDate, [StartState] = @StartState, [StopState] = @StopState, [billNo" +
                "] = @billNo WHERE (([TradeId] = @Original_TradeId) AND ([RequestDate] = @Origina" +
                "l_RequestDate) AND ([BeginDate] = @Original_BeginDate) AND ([EndDate] = @Origina" +
                "l_EndDate) AND ([Price] = @Original_Price) AND ([VAT] = @Original_VAT) AND ([Amo" +
                "unt] = @Original_Amount) AND ([PayState] = @Original_PayState) AND ((@IsNull_Pay" +
                "Date = 1 AND [PayDate] IS NULL) OR ([PayDate] = @Original_PayDate)) AND ([Driver" +
                "Id] = @Original_DriverId) AND ((@IsNull_ClientId = 1 AND [ClientId] IS NULL) OR " +
                "([ClientId] = @Original_ClientId)) AND ([UseTax] = @Original_UseTax) AND ((@IsNu" +
                "ll_LGD_Accept_Date = 1 AND [LGD_Accept_Date] IS NULL) OR ([LGD_Accept_Date] = @O" +
                "riginal_LGD_Accept_Date)) AND ((@IsNull_LGD_Cancel_Date = 1 AND [LGD_Cancel_Date" +
                "] IS NULL) OR ([LGD_Cancel_Date] = @Original_LGD_Cancel_Date)) AND ((@IsNull_LGD" +
                "_Last_Date = 1 AND [LGD_Last_Date] IS NULL) OR ([LGD_Last_Date] = @Original_LGD_" +
                "Last_Date)) AND ([AllowAcc] = @Original_AllowAcc) AND ([HasAcc] = @Original_HasA" +
                "cc) AND ((@IsNull_ClientAccId = 1 AND [ClientAccId] IS NULL) OR ([ClientAccId] =" +
                " @Original_ClientAccId)) AND ((@IsNull_SUMYN = 1 AND [SUMYN] IS NULL) OR ([SUMYN" +
                "] = @Original_SUMYN)) AND ((@IsNull_SumPrice = 1 AND [SumPrice] IS NULL) OR ([Su" +
                "mPrice] = @Original_SumPrice)) AND ((@IsNull_SumVAT = 1 AND [SumVAT] IS NULL) OR" +
                " ([SumVAT] = @Original_SumVAT)) AND ((@IsNull_SumAmount = 1 AND [SumAmount] IS N" +
                "ULL) OR ([SumAmount] = @Original_SumAmount)) AND ([HasETax] = @Original_HasETax)" +
                " AND ([SourceType] = @Original_SourceType) AND ([AcceptCount] = @Original_Accept" +
                "Count) AND ((@IsNull_SubClientId = 1 AND [SubClientId] IS NULL) OR ([SubClientId" +
                "] = @Original_SubClientId)) AND ((@IsNull_ClientUserId = 1 AND [ClientUserId] IS" +
                " NULL) OR ([ClientUserId] = @Original_ClientUserId)) AND ((@IsNull_PointMethod =" +
                " 1 AND [PointMethod] IS NULL) OR ([PointMethod] = @Original_PointMethod)) AND ((" +
                "@IsNull_Fee = 1 AND [Fee] IS NULL) OR ([Fee] = @Original_Fee)) AND ((@IsNull_Tra" +
                "nsportDate = 1 AND [TransportDate] IS NULL) OR ([TransportDate] = @Original_Tran" +
                "sportDate)));\r\nSELECT TradeId, RequestDate, BeginDate, EndDate, Item, Price, VAT" +
                ", Amount, PayState, PayDate, PayBankName, PayBankCode, PayAccountNo, PayInputNam" +
                "e, DriverId, ClientId, UseTax, LGD_OID, LGD_Result, LGD_Accept_Date, LGD_Cancel_" +
                "Date, LGD_Last_Function, LGD_Last_Date, AllowAcc, HasAcc, ClientAccId, SUMYN, Su" +
                "mPrice, SumVAT, SumAmount, SUMFROMDate, SUMToDate, Image1, Image2, Image3, Image" +
                "4, Image5, Image6, Image7, Image8, Image9, Image10, HasETax, SourceType, AcceptC" +
                "ount, SubClientId, ClientUserId, PointMethod, Fee, BizNo, Name, ExcelExportYN, E" +
                "taxCanCelYN, trusteeMgtKey, TransportDate, StartState, StopState, ISNULL(TaxGubu" +
                "n, \'\') AS TaxGubun, BillNo FROM Trades WHERE (TradeId = @TradeId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequestDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BeginDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeginDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayState", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayBankName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayBankName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayBankCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayBankCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayAccountNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayAccountNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayInputName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayInputName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriverId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseTax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Result", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Accept_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Accept_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Cancel_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Cancel_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Last_Function", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Last_Function", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Last_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Last_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowAcc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowAcc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasAcc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasAcc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientAccId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientAccId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUMYN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMYN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SumPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SumVAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumVAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SumAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUMFROMDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMFROMDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUMToDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMToDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image7", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image8", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image9", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image10", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasETax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasETax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcceptCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcceptCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubClientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PointMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Fee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BizNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BizNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcelExportYN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcelExportYN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EtaxCanCelYN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EtaxCanCelYN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trusteeMgtKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trusteeMgtKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransportDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StopState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StopState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "billNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TradeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RequestDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BeginDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeginDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PayState", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayState", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PayDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PayDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DriverId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseTax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LGD_Accept_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Accept_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LGD_Accept_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Accept_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LGD_Cancel_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Cancel_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LGD_Cancel_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Cancel_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LGD_Last_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Last_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LGD_Last_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Last_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowAcc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowAcc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HasAcc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasAcc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientAccId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientAccId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientAccId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientAccId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SUMYN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMYN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SUMYN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMYN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SumPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SumPrice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SumPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SumVAT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SumVAT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SumVAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumVAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SumAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SumAmount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SumAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HasETax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasETax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcceptCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcceptCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubClientId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubClientId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientUserId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientUserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PointMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PointMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Fee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransportDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransportDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TradeId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TradeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::mycalltruck.Admin.Properties.Settings.Default.TruckConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT TradeId, RequestDate, BeginDate, EndDate, Item, Price, VAT, Amount, PayState, PayDate, PayBankName, PayBankCode, PayAccountNo, PayInputName, DriverId, ClientId, UseTax, LGD_OID, LGD_Result, LGD_Accept_Date, LGD_Cancel_Date, LGD_Last_Function, LGD_Last_Date, AllowAcc, HasAcc, ClientAccId, SUMYN, SumPrice, SumVAT, SumAmount, SUMFROMDate, SUMToDate, Image1, Image2, Image3, Image4, Image5, Image6, Image7, Image8, Image9, Image10, HasETax, SourceType, AcceptCount, SubClientId, ClientUserId, PointMethod, Fee, BizNo, Name, ExcelExportYN, EtaxCanCelYN, trusteeMgtKey, TransportDate, StartState, StopState ,ISNULL(Trades.TaxGubun,'') as TaxGubun,billNo FROM Trades";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TradeDataSet.TradesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TradeDataSet.TradesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TradeDataSet.TradesDataTable dataTable = new TradeDataSet.TradesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TradeDataSet.TradesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TradeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Trades");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_TradeId, 
                    System.DateTime Original_RequestDate, 
                    System.DateTime Original_BeginDate, 
                    System.DateTime Original_EndDate, 
                    decimal Original_Price, 
                    decimal Original_VAT, 
                    decimal Original_Amount, 
                    int Original_PayState, 
                    global::System.Nullable<global::System.DateTime> Original_PayDate, 
                    int Original_DriverId, 
                    global::System.Nullable<int> Original_ClientId, 
                    bool Original_UseTax, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Accept_Date, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Cancel_Date, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Last_Date, 
                    bool Original_AllowAcc, 
                    bool Original_HasAcc, 
                    global::System.Nullable<int> Original_ClientAccId, 
                    global::System.Nullable<int> Original_SUMYN, 
                    global::System.Nullable<decimal> Original_SumPrice, 
                    global::System.Nullable<decimal> Original_SumVAT, 
                    global::System.Nullable<decimal> Original_SumAmount, 
                    bool Original_HasETax, 
                    int Original_SourceType, 
                    int Original_AcceptCount, 
                    global::System.Nullable<int> Original_SubClientId, 
                    global::System.Nullable<int> Original_ClientUserId, 
                    global::System.Nullable<int> Original_PointMethod, 
                    global::System.Nullable<decimal> Original_Fee, 
                    global::System.Nullable<global::System.DateTime> Original_TransportDate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_TradeId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_RequestDate));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_BeginDate));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_EndDate));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_Price));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_VAT));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Amount));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_PayState));
            if ((Original_PayDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_PayDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_DriverId));
            if ((Original_ClientId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_ClientId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((bool)(Original_UseTax));
            if ((Original_LGD_Accept_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_LGD_Accept_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_LGD_Cancel_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_LGD_Cancel_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_LGD_Last_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_LGD_Last_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_AllowAcc));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((bool)(Original_HasAcc));
            if ((Original_ClientAccId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_ClientAccId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_SUMYN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((int)(Original_SUMYN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_SumPrice.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_SumPrice.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_SumVAT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_SumVAT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_SumAmount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((decimal)(Original_SumAmount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[32].Value = ((bool)(Original_HasETax));
            this.Adapter.DeleteCommand.Parameters[33].Value = ((int)(Original_SourceType));
            this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_AcceptCount));
            if ((Original_SubClientId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_SubClientId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_ClientUserId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_ClientUserId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_PointMethod.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_PointMethod.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_Fee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((decimal)(Original_Fee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_TransportDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((System.DateTime)(Original_TransportDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.DateTime RequestDate, 
                    System.DateTime BeginDate, 
                    System.DateTime EndDate, 
                    string Item, 
                    decimal Price, 
                    decimal VAT, 
                    decimal Amount, 
                    int PayState, 
                    global::System.Nullable<global::System.DateTime> PayDate, 
                    string PayBankName, 
                    string PayBankCode, 
                    string PayAccountNo, 
                    string PayInputName, 
                    int DriverId, 
                    global::System.Nullable<int> ClientId, 
                    bool UseTax, 
                    string LGD_OID, 
                    string LGD_Result, 
                    global::System.Nullable<global::System.DateTime> LGD_Accept_Date, 
                    global::System.Nullable<global::System.DateTime> LGD_Cancel_Date, 
                    string LGD_Last_Function, 
                    global::System.Nullable<global::System.DateTime> LGD_Last_Date, 
                    bool AllowAcc, 
                    bool HasAcc, 
                    global::System.Nullable<int> ClientAccId, 
                    global::System.Nullable<int> SUMYN, 
                    global::System.Nullable<decimal> SumPrice, 
                    global::System.Nullable<decimal> SumVAT, 
                    global::System.Nullable<decimal> SumAmount, 
                    string SUMFROMDate, 
                    string SUMToDate, 
                    string Image1, 
                    string Image2, 
                    string Image3, 
                    string Image4, 
                    string Image5, 
                    string Image6, 
                    string Image7, 
                    string Image8, 
                    string Image9, 
                    string Image10, 
                    bool HasETax, 
                    int SourceType, 
                    int AcceptCount, 
                    global::System.Nullable<int> SubClientId, 
                    global::System.Nullable<int> ClientUserId, 
                    global::System.Nullable<int> PointMethod, 
                    global::System.Nullable<decimal> Fee, 
                    string BizNo, 
                    string Name, 
                    string ExcelExportYN, 
                    string EtaxCanCelYN, 
                    string trusteeMgtKey, 
                    global::System.Nullable<global::System.DateTime> TransportDate, 
                    string StartState, 
                    string StopState, 
                    string billNo) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(RequestDate));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(BeginDate));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(EndDate));
            if ((Item == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Item));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(Price));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(VAT));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(Amount));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(PayState));
            if ((PayDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(PayDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((PayBankName == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(PayBankName));
            }
            if ((PayBankCode == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(PayBankCode));
            }
            if ((PayAccountNo == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(PayAccountNo));
            }
            if ((PayInputName == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(PayInputName));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(DriverId));
            if ((ClientId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(ClientId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(UseTax));
            if ((LGD_OID == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(LGD_OID));
            }
            if ((LGD_Result == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(LGD_Result));
            }
            if ((LGD_Accept_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(LGD_Accept_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((LGD_Cancel_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(LGD_Cancel_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((LGD_Last_Function == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(LGD_Last_Function));
            }
            if ((LGD_Last_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(LGD_Last_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(AllowAcc));
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(HasAcc));
            if ((ClientAccId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(ClientAccId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((SUMYN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(SUMYN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((SumPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(SumPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((SumVAT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(SumVAT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((SumAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(SumAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((SUMFROMDate == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(SUMFROMDate));
            }
            if ((SUMToDate == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(SUMToDate));
            }
            if ((Image1 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(Image1));
            }
            if ((Image2 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(Image2));
            }
            if ((Image3 == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(Image3));
            }
            if ((Image4 == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(Image4));
            }
            if ((Image5 == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(Image5));
            }
            if ((Image6 == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(Image6));
            }
            if ((Image7 == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(Image7));
            }
            if ((Image8 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(Image8));
            }
            if ((Image9 == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(Image9));
            }
            if ((Image10 == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(Image10));
            }
            this.Adapter.InsertCommand.Parameters[41].Value = ((bool)(HasETax));
            this.Adapter.InsertCommand.Parameters[42].Value = ((int)(SourceType));
            this.Adapter.InsertCommand.Parameters[43].Value = ((int)(AcceptCount));
            if ((SubClientId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((int)(SubClientId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((ClientUserId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((int)(ClientUserId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((PointMethod.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((int)(PointMethod.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Fee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((decimal)(Fee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((BizNo == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(BizNo));
            }
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(Name));
            }
            if ((ExcelExportYN == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(ExcelExportYN));
            }
            if ((EtaxCanCelYN == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(EtaxCanCelYN));
            }
            if ((trusteeMgtKey == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(trusteeMgtKey));
            }
            if ((TransportDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((System.DateTime)(TransportDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((StartState == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(StartState));
            }
            if ((StopState == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(StopState));
            }
            if ((billNo == null)) {
                throw new global::System.ArgumentNullException("billNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(billNo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime RequestDate, 
                    System.DateTime BeginDate, 
                    System.DateTime EndDate, 
                    string Item, 
                    decimal Price, 
                    decimal VAT, 
                    decimal Amount, 
                    int PayState, 
                    global::System.Nullable<global::System.DateTime> PayDate, 
                    string PayBankName, 
                    string PayBankCode, 
                    string PayAccountNo, 
                    string PayInputName, 
                    int DriverId, 
                    global::System.Nullable<int> ClientId, 
                    bool UseTax, 
                    string LGD_OID, 
                    string LGD_Result, 
                    global::System.Nullable<global::System.DateTime> LGD_Accept_Date, 
                    global::System.Nullable<global::System.DateTime> LGD_Cancel_Date, 
                    string LGD_Last_Function, 
                    global::System.Nullable<global::System.DateTime> LGD_Last_Date, 
                    bool AllowAcc, 
                    bool HasAcc, 
                    global::System.Nullable<int> ClientAccId, 
                    global::System.Nullable<int> SUMYN, 
                    global::System.Nullable<decimal> SumPrice, 
                    global::System.Nullable<decimal> SumVAT, 
                    global::System.Nullable<decimal> SumAmount, 
                    string SUMFROMDate, 
                    string SUMToDate, 
                    string Image1, 
                    string Image2, 
                    string Image3, 
                    string Image4, 
                    string Image5, 
                    string Image6, 
                    string Image7, 
                    string Image8, 
                    string Image9, 
                    string Image10, 
                    bool HasETax, 
                    int SourceType, 
                    int AcceptCount, 
                    global::System.Nullable<int> SubClientId, 
                    global::System.Nullable<int> ClientUserId, 
                    global::System.Nullable<int> PointMethod, 
                    global::System.Nullable<decimal> Fee, 
                    string BizNo, 
                    string Name, 
                    string ExcelExportYN, 
                    string EtaxCanCelYN, 
                    string trusteeMgtKey, 
                    global::System.Nullable<global::System.DateTime> TransportDate, 
                    string StartState, 
                    string StopState, 
                    string billNo, 
                    int Original_TradeId, 
                    System.DateTime Original_RequestDate, 
                    System.DateTime Original_BeginDate, 
                    System.DateTime Original_EndDate, 
                    decimal Original_Price, 
                    decimal Original_VAT, 
                    decimal Original_Amount, 
                    int Original_PayState, 
                    global::System.Nullable<global::System.DateTime> Original_PayDate, 
                    int Original_DriverId, 
                    global::System.Nullable<int> Original_ClientId, 
                    bool Original_UseTax, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Accept_Date, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Cancel_Date, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Last_Date, 
                    bool Original_AllowAcc, 
                    bool Original_HasAcc, 
                    global::System.Nullable<int> Original_ClientAccId, 
                    global::System.Nullable<int> Original_SUMYN, 
                    global::System.Nullable<decimal> Original_SumPrice, 
                    global::System.Nullable<decimal> Original_SumVAT, 
                    global::System.Nullable<decimal> Original_SumAmount, 
                    bool Original_HasETax, 
                    int Original_SourceType, 
                    int Original_AcceptCount, 
                    global::System.Nullable<int> Original_SubClientId, 
                    global::System.Nullable<int> Original_ClientUserId, 
                    global::System.Nullable<int> Original_PointMethod, 
                    global::System.Nullable<decimal> Original_Fee, 
                    global::System.Nullable<global::System.DateTime> Original_TransportDate, 
                    int TradeId) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(RequestDate));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(BeginDate));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(EndDate));
            if ((Item == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Item));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Price));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(VAT));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Amount));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(PayState));
            if ((PayDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(PayDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((PayBankName == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(PayBankName));
            }
            if ((PayBankCode == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(PayBankCode));
            }
            if ((PayAccountNo == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(PayAccountNo));
            }
            if ((PayInputName == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(PayInputName));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(DriverId));
            if ((ClientId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(ClientId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(UseTax));
            if ((LGD_OID == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(LGD_OID));
            }
            if ((LGD_Result == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(LGD_Result));
            }
            if ((LGD_Accept_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(LGD_Accept_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((LGD_Cancel_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(LGD_Cancel_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((LGD_Last_Function == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(LGD_Last_Function));
            }
            if ((LGD_Last_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(LGD_Last_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(AllowAcc));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(HasAcc));
            if ((ClientAccId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(ClientAccId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((SUMYN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(SUMYN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((SumPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(SumPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((SumVAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(SumVAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((SumAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(SumAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((SUMFROMDate == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(SUMFROMDate));
            }
            if ((SUMToDate == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(SUMToDate));
            }
            if ((Image1 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Image1));
            }
            if ((Image2 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Image2));
            }
            if ((Image3 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Image3));
            }
            if ((Image4 == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Image4));
            }
            if ((Image5 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Image5));
            }
            if ((Image6 == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Image6));
            }
            if ((Image7 == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Image7));
            }
            if ((Image8 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Image8));
            }
            if ((Image9 == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Image9));
            }
            if ((Image10 == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Image10));
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((bool)(HasETax));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(SourceType));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(AcceptCount));
            if ((SubClientId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(SubClientId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((ClientUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(ClientUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((PointMethod.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(PointMethod.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Fee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(Fee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((BizNo == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(BizNo));
            }
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Name));
            }
            if ((ExcelExportYN == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(ExcelExportYN));
            }
            if ((EtaxCanCelYN == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(EtaxCanCelYN));
            }
            if ((trusteeMgtKey == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(trusteeMgtKey));
            }
            if ((TransportDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(TransportDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((StartState == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(StartState));
            }
            if ((StopState == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(StopState));
            }
            if ((billNo == null)) {
                throw new global::System.ArgumentNullException("billNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(billNo));
            }
            this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_TradeId));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((System.DateTime)(Original_RequestDate));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((System.DateTime)(Original_BeginDate));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((System.DateTime)(Original_EndDate));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((decimal)(Original_Price));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((decimal)(Original_VAT));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((decimal)(Original_Amount));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(Original_PayState));
            if ((Original_PayDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((System.DateTime)(Original_PayDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(Original_DriverId));
            if ((Original_ClientId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(Original_ClientId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[70].Value = ((bool)(Original_UseTax));
            if ((Original_LGD_Accept_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((System.DateTime)(Original_LGD_Accept_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_LGD_Cancel_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((System.DateTime)(Original_LGD_Cancel_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_LGD_Last_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((System.DateTime)(Original_LGD_Last_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[77].Value = ((bool)(Original_AllowAcc));
            this.Adapter.UpdateCommand.Parameters[78].Value = ((bool)(Original_HasAcc));
            if ((Original_ClientAccId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((int)(Original_ClientAccId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_SUMYN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((int)(Original_SUMYN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_SumPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((decimal)(Original_SumPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_SumVAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((decimal)(Original_SumVAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_SumAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((decimal)(Original_SumAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[89].Value = ((bool)(Original_HasETax));
            this.Adapter.UpdateCommand.Parameters[90].Value = ((int)(Original_SourceType));
            this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(Original_AcceptCount));
            if ((Original_SubClientId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((int)(Original_SubClientId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_ClientUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((int)(Original_ClientUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_PointMethod.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((int)(Original_PointMethod.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_Fee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((decimal)(Original_Fee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_TransportDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((System.DateTime)(Original_TransportDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[102].Value = ((int)(TradeId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime RequestDate, 
                    System.DateTime BeginDate, 
                    System.DateTime EndDate, 
                    string Item, 
                    decimal Price, 
                    decimal VAT, 
                    decimal Amount, 
                    int PayState, 
                    global::System.Nullable<global::System.DateTime> PayDate, 
                    string PayBankName, 
                    string PayBankCode, 
                    string PayAccountNo, 
                    string PayInputName, 
                    int DriverId, 
                    global::System.Nullable<int> ClientId, 
                    bool UseTax, 
                    string LGD_OID, 
                    string LGD_Result, 
                    global::System.Nullable<global::System.DateTime> LGD_Accept_Date, 
                    global::System.Nullable<global::System.DateTime> LGD_Cancel_Date, 
                    string LGD_Last_Function, 
                    global::System.Nullable<global::System.DateTime> LGD_Last_Date, 
                    bool AllowAcc, 
                    bool HasAcc, 
                    global::System.Nullable<int> ClientAccId, 
                    global::System.Nullable<int> SUMYN, 
                    global::System.Nullable<decimal> SumPrice, 
                    global::System.Nullable<decimal> SumVAT, 
                    global::System.Nullable<decimal> SumAmount, 
                    string SUMFROMDate, 
                    string SUMToDate, 
                    string Image1, 
                    string Image2, 
                    string Image3, 
                    string Image4, 
                    string Image5, 
                    string Image6, 
                    string Image7, 
                    string Image8, 
                    string Image9, 
                    string Image10, 
                    bool HasETax, 
                    int SourceType, 
                    int AcceptCount, 
                    global::System.Nullable<int> SubClientId, 
                    global::System.Nullable<int> ClientUserId, 
                    global::System.Nullable<int> PointMethod, 
                    global::System.Nullable<decimal> Fee, 
                    string BizNo, 
                    string Name, 
                    string ExcelExportYN, 
                    string EtaxCanCelYN, 
                    string trusteeMgtKey, 
                    global::System.Nullable<global::System.DateTime> TransportDate, 
                    string StartState, 
                    string StopState, 
                    string billNo, 
                    int Original_TradeId, 
                    System.DateTime Original_RequestDate, 
                    System.DateTime Original_BeginDate, 
                    System.DateTime Original_EndDate, 
                    decimal Original_Price, 
                    decimal Original_VAT, 
                    decimal Original_Amount, 
                    int Original_PayState, 
                    global::System.Nullable<global::System.DateTime> Original_PayDate, 
                    int Original_DriverId, 
                    global::System.Nullable<int> Original_ClientId, 
                    bool Original_UseTax, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Accept_Date, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Cancel_Date, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Last_Date, 
                    bool Original_AllowAcc, 
                    bool Original_HasAcc, 
                    global::System.Nullable<int> Original_ClientAccId, 
                    global::System.Nullable<int> Original_SUMYN, 
                    global::System.Nullable<decimal> Original_SumPrice, 
                    global::System.Nullable<decimal> Original_SumVAT, 
                    global::System.Nullable<decimal> Original_SumAmount, 
                    bool Original_HasETax, 
                    int Original_SourceType, 
                    int Original_AcceptCount, 
                    global::System.Nullable<int> Original_SubClientId, 
                    global::System.Nullable<int> Original_ClientUserId, 
                    global::System.Nullable<int> Original_PointMethod, 
                    global::System.Nullable<decimal> Original_Fee, 
                    global::System.Nullable<global::System.DateTime> Original_TransportDate) {
            return this.Update(RequestDate, BeginDate, EndDate, Item, Price, VAT, Amount, PayState, PayDate, PayBankName, PayBankCode, PayAccountNo, PayInputName, DriverId, ClientId, UseTax, LGD_OID, LGD_Result, LGD_Accept_Date, LGD_Cancel_Date, LGD_Last_Function, LGD_Last_Date, AllowAcc, HasAcc, ClientAccId, SUMYN, SumPrice, SumVAT, SumAmount, SUMFROMDate, SUMToDate, Image1, Image2, Image3, Image4, Image5, Image6, Image7, Image8, Image9, Image10, HasETax, SourceType, AcceptCount, SubClientId, ClientUserId, PointMethod, Fee, BizNo, Name, ExcelExportYN, EtaxCanCelYN, trusteeMgtKey, TransportDate, StartState, StopState, billNo, Original_TradeId, Original_RequestDate, Original_BeginDate, Original_EndDate, Original_Price, Original_VAT, Original_Amount, Original_PayState, Original_PayDate, Original_DriverId, Original_ClientId, Original_UseTax, Original_LGD_Accept_Date, Original_LGD_Cancel_Date, Original_LGD_Last_Date, Original_AllowAcc, Original_HasAcc, Original_ClientAccId, Original_SUMYN, Original_SumPrice, Original_SumVAT, Original_SumAmount, Original_HasETax, Original_SourceType, Original_AcceptCount, Original_SubClientId, Original_ClientUserId, Original_PointMethod, Original_Fee, Original_TransportDate, Original_TradeId);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TradesBasKetTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public TradesBasKetTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TradesBasKet";
            tableMapping.ColumnMappings.Add("TradeId", "TradeId");
            tableMapping.ColumnMappings.Add("RequestDate", "RequestDate");
            tableMapping.ColumnMappings.Add("BeginDate", "BeginDate");
            tableMapping.ColumnMappings.Add("EndDate", "EndDate");
            tableMapping.ColumnMappings.Add("Item", "Item");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("VAT", "VAT");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("PayState", "PayState");
            tableMapping.ColumnMappings.Add("PayDate", "PayDate");
            tableMapping.ColumnMappings.Add("PayBankName", "PayBankName");
            tableMapping.ColumnMappings.Add("PayBankCode", "PayBankCode");
            tableMapping.ColumnMappings.Add("PayAccountNo", "PayAccountNo");
            tableMapping.ColumnMappings.Add("PayInputName", "PayInputName");
            tableMapping.ColumnMappings.Add("DriverId", "DriverId");
            tableMapping.ColumnMappings.Add("ClientId", "ClientId");
            tableMapping.ColumnMappings.Add("UseTax", "UseTax");
            tableMapping.ColumnMappings.Add("LGD_OID", "LGD_OID");
            tableMapping.ColumnMappings.Add("LGD_Result", "LGD_Result");
            tableMapping.ColumnMappings.Add("LGD_Accept_Date", "LGD_Accept_Date");
            tableMapping.ColumnMappings.Add("LGD_Cancel_Date", "LGD_Cancel_Date");
            tableMapping.ColumnMappings.Add("LGD_Last_Function", "LGD_Last_Function");
            tableMapping.ColumnMappings.Add("LGD_Last_Date", "LGD_Last_Date");
            tableMapping.ColumnMappings.Add("AllowAcc", "AllowAcc");
            tableMapping.ColumnMappings.Add("HasAcc", "HasAcc");
            tableMapping.ColumnMappings.Add("ClientAccId", "ClientAccId");
            tableMapping.ColumnMappings.Add("SUMYN", "SUMYN");
            tableMapping.ColumnMappings.Add("SumPrice", "SumPrice");
            tableMapping.ColumnMappings.Add("SumVAT", "SumVAT");
            tableMapping.ColumnMappings.Add("SumAmount", "SumAmount");
            tableMapping.ColumnMappings.Add("SUMFROMDate", "SUMFROMDate");
            tableMapping.ColumnMappings.Add("SUMToDate", "SUMToDate");
            tableMapping.ColumnMappings.Add("Image1", "Image1");
            tableMapping.ColumnMappings.Add("Image2", "Image2");
            tableMapping.ColumnMappings.Add("Image3", "Image3");
            tableMapping.ColumnMappings.Add("Image4", "Image4");
            tableMapping.ColumnMappings.Add("Image5", "Image5");
            tableMapping.ColumnMappings.Add("Image6", "Image6");
            tableMapping.ColumnMappings.Add("Image7", "Image7");
            tableMapping.ColumnMappings.Add("Image8", "Image8");
            tableMapping.ColumnMappings.Add("Image9", "Image9");
            tableMapping.ColumnMappings.Add("Image10", "Image10");
            tableMapping.ColumnMappings.Add("HasETax", "HasETax");
            tableMapping.ColumnMappings.Add("SourceType", "SourceType");
            tableMapping.ColumnMappings.Add("AcceptCount", "AcceptCount");
            tableMapping.ColumnMappings.Add("SubClientId", "SubClientId");
            tableMapping.ColumnMappings.Add("ClientUserId", "ClientUserId");
            tableMapping.ColumnMappings.Add("PointMethod", "PointMethod");
            tableMapping.ColumnMappings.Add("Fee", "Fee");
            tableMapping.ColumnMappings.Add("BizNo", "BizNo");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("ExcelExportYN", "ExcelExportYN");
            tableMapping.ColumnMappings.Add("EtaxCanCelYN", "EtaxCanCelYN");
            tableMapping.ColumnMappings.Add("trusteeMgtKey", "trusteeMgtKey");
            tableMapping.ColumnMappings.Add("TransportDate", "TransportDate");
            tableMapping.ColumnMappings.Add("StartState", "StartState");
            tableMapping.ColumnMappings.Add("StopState", "StopState");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [TradesBasKet] WHERE (([TradeId] = @Original_TradeId) AND ([RequestDa" +
                "te] = @Original_RequestDate) AND ([BeginDate] = @Original_BeginDate) AND ([EndDa" +
                "te] = @Original_EndDate) AND ([Price] = @Original_Price) AND ([VAT] = @Original_" +
                "VAT) AND ([Amount] = @Original_Amount) AND ([PayState] = @Original_PayState) AND" +
                " ((@IsNull_PayDate = 1 AND [PayDate] IS NULL) OR ([PayDate] = @Original_PayDate)" +
                ") AND ([DriverId] = @Original_DriverId) AND ((@IsNull_ClientId = 1 AND [ClientId" +
                "] IS NULL) OR ([ClientId] = @Original_ClientId)) AND ([UseTax] = @Original_UseTa" +
                "x) AND ((@IsNull_LGD_Accept_Date = 1 AND [LGD_Accept_Date] IS NULL) OR ([LGD_Acc" +
                "ept_Date] = @Original_LGD_Accept_Date)) AND ((@IsNull_LGD_Cancel_Date = 1 AND [L" +
                "GD_Cancel_Date] IS NULL) OR ([LGD_Cancel_Date] = @Original_LGD_Cancel_Date)) AND" +
                " ((@IsNull_LGD_Last_Date = 1 AND [LGD_Last_Date] IS NULL) OR ([LGD_Last_Date] = " +
                "@Original_LGD_Last_Date)) AND ([AllowAcc] = @Original_AllowAcc) AND ([HasAcc] = " +
                "@Original_HasAcc) AND ((@IsNull_ClientAccId = 1 AND [ClientAccId] IS NULL) OR ([" +
                "ClientAccId] = @Original_ClientAccId)) AND ((@IsNull_SUMYN = 1 AND [SUMYN] IS NU" +
                "LL) OR ([SUMYN] = @Original_SUMYN)) AND ((@IsNull_SumPrice = 1 AND [SumPrice] IS" +
                " NULL) OR ([SumPrice] = @Original_SumPrice)) AND ((@IsNull_SumVAT = 1 AND [SumVA" +
                "T] IS NULL) OR ([SumVAT] = @Original_SumVAT)) AND ((@IsNull_SumAmount = 1 AND [S" +
                "umAmount] IS NULL) OR ([SumAmount] = @Original_SumAmount)) AND ([HasETax] = @Ori" +
                "ginal_HasETax) AND ([SourceType] = @Original_SourceType) AND ([AcceptCount] = @O" +
                "riginal_AcceptCount) AND ((@IsNull_SubClientId = 1 AND [SubClientId] IS NULL) OR" +
                " ([SubClientId] = @Original_SubClientId)) AND ((@IsNull_ClientUserId = 1 AND [Cl" +
                "ientUserId] IS NULL) OR ([ClientUserId] = @Original_ClientUserId)) AND ((@IsNull" +
                "_PointMethod = 1 AND [PointMethod] IS NULL) OR ([PointMethod] = @Original_PointM" +
                "ethod)) AND ((@IsNull_Fee = 1 AND [Fee] IS NULL) OR ([Fee] = @Original_Fee)) AND" +
                " ((@IsNull_TransportDate = 1 AND [TransportDate] IS NULL) OR ([TransportDate] = " +
                "@Original_TransportDate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TradeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RequestDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BeginDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeginDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PayState", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayState", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PayDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PayDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DriverId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseTax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LGD_Accept_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Accept_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LGD_Accept_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Accept_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LGD_Cancel_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Cancel_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LGD_Cancel_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Cancel_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LGD_Last_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Last_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LGD_Last_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Last_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowAcc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowAcc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HasAcc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasAcc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientAccId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientAccId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientAccId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientAccId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SUMYN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMYN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SUMYN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMYN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SumPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SumPrice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SumPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SumVAT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SumVAT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SumVAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumVAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SumAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SumAmount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SumAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HasETax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasETax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcceptCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcceptCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubClientId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubClientId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientUserId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientUserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PointMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PointMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Fee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransportDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransportDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [TradesBasKet] ([RequestDate], [BeginDate], [EndDate], [Item], [Price" +
                "], [VAT], [Amount], [PayState], [PayDate], [PayBankName], [PayBankCode], [PayAcc" +
                "ountNo], [PayInputName], [DriverId], [ClientId], [UseTax], [LGD_OID], [LGD_Resul" +
                "t], [LGD_Accept_Date], [LGD_Cancel_Date], [LGD_Last_Function], [LGD_Last_Date], " +
                "[AllowAcc], [HasAcc], [ClientAccId], [SUMYN], [SumPrice], [SumVAT], [SumAmount]," +
                " [SUMFROMDate], [SUMToDate], [Image1], [Image2], [Image3], [Image4], [Image5], [" +
                "Image6], [Image7], [Image8], [Image9], [Image10], [HasETax], [SourceType], [Acce" +
                "ptCount], [SubClientId], [ClientUserId], [PointMethod], [Fee], [BizNo], [Name], " +
                "[ExcelExportYN], [EtaxCanCelYN], [trusteeMgtKey], [TransportDate], [StartState]," +
                " [StopState]) VALUES (@RequestDate, @BeginDate, @EndDate, @Item, @Price, @VAT, @" +
                "Amount, @PayState, @PayDate, @PayBankName, @PayBankCode, @PayAccountNo, @PayInpu" +
                "tName, @DriverId, @ClientId, @UseTax, @LGD_OID, @LGD_Result, @LGD_Accept_Date, @" +
                "LGD_Cancel_Date, @LGD_Last_Function, @LGD_Last_Date, @AllowAcc, @HasAcc, @Client" +
                "AccId, @SUMYN, @SumPrice, @SumVAT, @SumAmount, @SUMFROMDate, @SUMToDate, @Image1" +
                ", @Image2, @Image3, @Image4, @Image5, @Image6, @Image7, @Image8, @Image9, @Image" +
                "10, @HasETax, @SourceType, @AcceptCount, @SubClientId, @ClientUserId, @PointMeth" +
                "od, @Fee, @BizNo, @Name, @ExcelExportYN, @EtaxCanCelYN, @trusteeMgtKey, @Transpo" +
                "rtDate, @StartState, @StopState);\r\nSELECT TradeId, RequestDate, BeginDate, EndDa" +
                "te, Item, Price, VAT, Amount, PayState, PayDate, PayBankName, PayBankCode, PayAc" +
                "countNo, PayInputName, DriverId, ClientId, UseTax, LGD_OID, LGD_Result, LGD_Acce" +
                "pt_Date, LGD_Cancel_Date, LGD_Last_Function, LGD_Last_Date, AllowAcc, HasAcc, Cl" +
                "ientAccId, SUMYN, SumPrice, SumVAT, SumAmount, SUMFROMDate, SUMToDate, Image1, I" +
                "mage2, Image3, Image4, Image5, Image6, Image7, Image8, Image9, Image10, HasETax," +
                " SourceType, AcceptCount, SubClientId, ClientUserId, PointMethod, Fee, BizNo, Na" +
                "me, ExcelExportYN, EtaxCanCelYN, trusteeMgtKey, TransportDate, StartState, StopS" +
                "tate FROM TradesBasKet WHERE (TradeId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequestDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BeginDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeginDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayState", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayBankName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayBankName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayBankCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayBankCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayAccountNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayAccountNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayInputName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayInputName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriverId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseTax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Result", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Accept_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Accept_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Cancel_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Cancel_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Last_Function", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Last_Function", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Last_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Last_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowAcc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowAcc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasAcc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasAcc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientAccId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientAccId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUMYN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMYN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SumPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SumVAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumVAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SumAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUMFROMDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMFROMDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUMToDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMToDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image7", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image8", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image9", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image10", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasETax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasETax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcceptCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcceptCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubClientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PointMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Fee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BizNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BizNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcelExportYN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcelExportYN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EtaxCanCelYN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EtaxCanCelYN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trusteeMgtKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trusteeMgtKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransportDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StopState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StopState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [TradesBasKet] SET [RequestDate] = @RequestDate, [BeginDate] = @BeginDate," +
                " [EndDate] = @EndDate, [Item] = @Item, [Price] = @Price, [VAT] = @VAT, [Amount] " +
                "= @Amount, [PayState] = @PayState, [PayDate] = @PayDate, [PayBankName] = @PayBan" +
                "kName, [PayBankCode] = @PayBankCode, [PayAccountNo] = @PayAccountNo, [PayInputNa" +
                "me] = @PayInputName, [DriverId] = @DriverId, [ClientId] = @ClientId, [UseTax] = " +
                "@UseTax, [LGD_OID] = @LGD_OID, [LGD_Result] = @LGD_Result, [LGD_Accept_Date] = @" +
                "LGD_Accept_Date, [LGD_Cancel_Date] = @LGD_Cancel_Date, [LGD_Last_Function] = @LG" +
                "D_Last_Function, [LGD_Last_Date] = @LGD_Last_Date, [AllowAcc] = @AllowAcc, [HasA" +
                "cc] = @HasAcc, [ClientAccId] = @ClientAccId, [SUMYN] = @SUMYN, [SumPrice] = @Sum" +
                "Price, [SumVAT] = @SumVAT, [SumAmount] = @SumAmount, [SUMFROMDate] = @SUMFROMDat" +
                "e, [SUMToDate] = @SUMToDate, [Image1] = @Image1, [Image2] = @Image2, [Image3] = " +
                "@Image3, [Image4] = @Image4, [Image5] = @Image5, [Image6] = @Image6, [Image7] = " +
                "@Image7, [Image8] = @Image8, [Image9] = @Image9, [Image10] = @Image10, [HasETax]" +
                " = @HasETax, [SourceType] = @SourceType, [AcceptCount] = @AcceptCount, [SubClien" +
                "tId] = @SubClientId, [ClientUserId] = @ClientUserId, [PointMethod] = @PointMetho" +
                "d, [Fee] = @Fee, [BizNo] = @BizNo, [Name] = @Name, [ExcelExportYN] = @ExcelExpor" +
                "tYN, [EtaxCanCelYN] = @EtaxCanCelYN, [trusteeMgtKey] = @trusteeMgtKey, [Transpor" +
                "tDate] = @TransportDate, [StartState] = @StartState, [StopState] = @StopState WH" +
                "ERE (([TradeId] = @Original_TradeId) AND ([RequestDate] = @Original_RequestDate)" +
                " AND ([BeginDate] = @Original_BeginDate) AND ([EndDate] = @Original_EndDate) AND" +
                " ([Price] = @Original_Price) AND ([VAT] = @Original_VAT) AND ([Amount] = @Origin" +
                "al_Amount) AND ([PayState] = @Original_PayState) AND ((@IsNull_PayDate = 1 AND [" +
                "PayDate] IS NULL) OR ([PayDate] = @Original_PayDate)) AND ([DriverId] = @Origina" +
                "l_DriverId) AND ((@IsNull_ClientId = 1 AND [ClientId] IS NULL) OR ([ClientId] = " +
                "@Original_ClientId)) AND ([UseTax] = @Original_UseTax) AND ((@IsNull_LGD_Accept_" +
                "Date = 1 AND [LGD_Accept_Date] IS NULL) OR ([LGD_Accept_Date] = @Original_LGD_Ac" +
                "cept_Date)) AND ((@IsNull_LGD_Cancel_Date = 1 AND [LGD_Cancel_Date] IS NULL) OR " +
                "([LGD_Cancel_Date] = @Original_LGD_Cancel_Date)) AND ((@IsNull_LGD_Last_Date = 1" +
                " AND [LGD_Last_Date] IS NULL) OR ([LGD_Last_Date] = @Original_LGD_Last_Date)) AN" +
                "D ([AllowAcc] = @Original_AllowAcc) AND ([HasAcc] = @Original_HasAcc) AND ((@IsN" +
                "ull_ClientAccId = 1 AND [ClientAccId] IS NULL) OR ([ClientAccId] = @Original_Cli" +
                "entAccId)) AND ((@IsNull_SUMYN = 1 AND [SUMYN] IS NULL) OR ([SUMYN] = @Original_" +
                "SUMYN)) AND ((@IsNull_SumPrice = 1 AND [SumPrice] IS NULL) OR ([SumPrice] = @Ori" +
                "ginal_SumPrice)) AND ((@IsNull_SumVAT = 1 AND [SumVAT] IS NULL) OR ([SumVAT] = @" +
                "Original_SumVAT)) AND ((@IsNull_SumAmount = 1 AND [SumAmount] IS NULL) OR ([SumA" +
                "mount] = @Original_SumAmount)) AND ([HasETax] = @Original_HasETax) AND ([SourceT" +
                "ype] = @Original_SourceType) AND ([AcceptCount] = @Original_AcceptCount) AND ((@" +
                "IsNull_SubClientId = 1 AND [SubClientId] IS NULL) OR ([SubClientId] = @Original_" +
                "SubClientId)) AND ((@IsNull_ClientUserId = 1 AND [ClientUserId] IS NULL) OR ([Cl" +
                "ientUserId] = @Original_ClientUserId)) AND ((@IsNull_PointMethod = 1 AND [PointM" +
                "ethod] IS NULL) OR ([PointMethod] = @Original_PointMethod)) AND ((@IsNull_Fee = " +
                "1 AND [Fee] IS NULL) OR ([Fee] = @Original_Fee)) AND ((@IsNull_TransportDate = 1" +
                " AND [TransportDate] IS NULL) OR ([TransportDate] = @Original_TransportDate)));\r" +
                "\nSELECT TradeId, RequestDate, BeginDate, EndDate, Item, Price, VAT, Amount, PayS" +
                "tate, PayDate, PayBankName, PayBankCode, PayAccountNo, PayInputName, DriverId, C" +
                "lientId, UseTax, LGD_OID, LGD_Result, LGD_Accept_Date, LGD_Cancel_Date, LGD_Last" +
                "_Function, LGD_Last_Date, AllowAcc, HasAcc, ClientAccId, SUMYN, SumPrice, SumVAT" +
                ", SumAmount, SUMFROMDate, SUMToDate, Image1, Image2, Image3, Image4, Image5, Ima" +
                "ge6, Image7, Image8, Image9, Image10, HasETax, SourceType, AcceptCount, SubClien" +
                "tId, ClientUserId, PointMethod, Fee, BizNo, Name, ExcelExportYN, EtaxCanCelYN, t" +
                "rusteeMgtKey, TransportDate, StartState, StopState FROM TradesBasKet WHERE (Trad" +
                "eId = @TradeId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequestDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BeginDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeginDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayState", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayBankName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayBankName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayBankCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayBankCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayAccountNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayAccountNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayInputName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayInputName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriverId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseTax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Result", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Accept_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Accept_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Cancel_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Cancel_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Last_Function", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Last_Function", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGD_Last_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Last_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowAcc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowAcc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasAcc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasAcc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientAccId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientAccId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUMYN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMYN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SumPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SumVAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumVAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SumAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUMFROMDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMFROMDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUMToDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMToDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image7", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image8", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image9", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image10", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Image10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasETax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasETax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcceptCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcceptCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubClientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PointMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Fee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BizNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BizNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcelExportYN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcelExportYN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EtaxCanCelYN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EtaxCanCelYN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trusteeMgtKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trusteeMgtKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransportDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StopState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StopState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TradeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RequestDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequestDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BeginDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeginDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PayState", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayState", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PayDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PayDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DriverId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseTax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LGD_Accept_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Accept_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LGD_Accept_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Accept_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LGD_Cancel_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Cancel_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LGD_Cancel_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Cancel_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LGD_Last_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Last_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LGD_Last_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGD_Last_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowAcc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowAcc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HasAcc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasAcc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientAccId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientAccId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientAccId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientAccId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SUMYN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMYN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SUMYN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUMYN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SumPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SumPrice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SumPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SumVAT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SumVAT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SumVAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumVAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SumAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SumAmount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SumAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SumAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HasETax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasETax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcceptCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcceptCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubClientId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubClientId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientUserId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientUserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PointMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PointMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Fee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransportDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransportDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TradeId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TradeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::mycalltruck.Admin.Properties.Settings.Default.TruckConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT TradeId, RequestDate, BeginDate, EndDate, Item, Price, VAT, Amount, PayState, PayDate, PayBankName, PayBankCode, PayAccountNo, PayInputName, DriverId, ClientId, UseTax, LGD_OID, LGD_Result, LGD_Accept_Date, LGD_Cancel_Date, LGD_Last_Function, LGD_Last_Date, AllowAcc, HasAcc, ClientAccId, SUMYN, SumPrice, SumVAT, SumAmount, SUMFROMDate, SUMToDate, Image1, Image2, Image3, Image4, Image5, Image6, Image7, Image8, Image9, Image10, HasETax, SourceType, AcceptCount, SubClientId, ClientUserId, PointMethod, Fee, BizNo, Name, ExcelExportYN, EtaxCanCelYN, trusteeMgtKey, TransportDate, StartState, StopState FROM TradesBasKet";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TradeDataSet.TradesBasKetDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TradeDataSet.TradesBasKetDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TradeDataSet.TradesBasKetDataTable dataTable = new TradeDataSet.TradesBasKetDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TradeDataSet.TradesBasKetDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TradeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TradesBasKet");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_TradeId, 
                    System.DateTime Original_RequestDate, 
                    System.DateTime Original_BeginDate, 
                    System.DateTime Original_EndDate, 
                    decimal Original_Price, 
                    decimal Original_VAT, 
                    decimal Original_Amount, 
                    int Original_PayState, 
                    global::System.Nullable<global::System.DateTime> Original_PayDate, 
                    int Original_DriverId, 
                    global::System.Nullable<int> Original_ClientId, 
                    bool Original_UseTax, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Accept_Date, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Cancel_Date, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Last_Date, 
                    bool Original_AllowAcc, 
                    bool Original_HasAcc, 
                    global::System.Nullable<int> Original_ClientAccId, 
                    global::System.Nullable<int> Original_SUMYN, 
                    global::System.Nullable<decimal> Original_SumPrice, 
                    global::System.Nullable<decimal> Original_SumVAT, 
                    global::System.Nullable<decimal> Original_SumAmount, 
                    bool Original_HasETax, 
                    int Original_SourceType, 
                    int Original_AcceptCount, 
                    global::System.Nullable<int> Original_SubClientId, 
                    global::System.Nullable<int> Original_ClientUserId, 
                    global::System.Nullable<int> Original_PointMethod, 
                    global::System.Nullable<decimal> Original_Fee, 
                    global::System.Nullable<global::System.DateTime> Original_TransportDate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_TradeId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_RequestDate));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_BeginDate));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_EndDate));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_Price));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_VAT));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Amount));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_PayState));
            if ((Original_PayDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_PayDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_DriverId));
            if ((Original_ClientId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_ClientId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((bool)(Original_UseTax));
            if ((Original_LGD_Accept_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_LGD_Accept_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_LGD_Cancel_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_LGD_Cancel_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_LGD_Last_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_LGD_Last_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_AllowAcc));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((bool)(Original_HasAcc));
            if ((Original_ClientAccId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_ClientAccId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_SUMYN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((int)(Original_SUMYN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_SumPrice.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_SumPrice.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_SumVAT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_SumVAT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_SumAmount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((decimal)(Original_SumAmount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[32].Value = ((bool)(Original_HasETax));
            this.Adapter.DeleteCommand.Parameters[33].Value = ((int)(Original_SourceType));
            this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_AcceptCount));
            if ((Original_SubClientId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_SubClientId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_ClientUserId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_ClientUserId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_PointMethod.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_PointMethod.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_Fee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((decimal)(Original_Fee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_TransportDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((System.DateTime)(Original_TransportDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.DateTime RequestDate, 
                    System.DateTime BeginDate, 
                    System.DateTime EndDate, 
                    string Item, 
                    decimal Price, 
                    decimal VAT, 
                    decimal Amount, 
                    int PayState, 
                    global::System.Nullable<global::System.DateTime> PayDate, 
                    string PayBankName, 
                    string PayBankCode, 
                    string PayAccountNo, 
                    string PayInputName, 
                    int DriverId, 
                    global::System.Nullable<int> ClientId, 
                    bool UseTax, 
                    string LGD_OID, 
                    string LGD_Result, 
                    global::System.Nullable<global::System.DateTime> LGD_Accept_Date, 
                    global::System.Nullable<global::System.DateTime> LGD_Cancel_Date, 
                    string LGD_Last_Function, 
                    global::System.Nullable<global::System.DateTime> LGD_Last_Date, 
                    bool AllowAcc, 
                    bool HasAcc, 
                    global::System.Nullable<int> ClientAccId, 
                    global::System.Nullable<int> SUMYN, 
                    global::System.Nullable<decimal> SumPrice, 
                    global::System.Nullable<decimal> SumVAT, 
                    global::System.Nullable<decimal> SumAmount, 
                    string SUMFROMDate, 
                    string SUMToDate, 
                    string Image1, 
                    string Image2, 
                    string Image3, 
                    string Image4, 
                    string Image5, 
                    string Image6, 
                    string Image7, 
                    string Image8, 
                    string Image9, 
                    string Image10, 
                    bool HasETax, 
                    int SourceType, 
                    int AcceptCount, 
                    global::System.Nullable<int> SubClientId, 
                    global::System.Nullable<int> ClientUserId, 
                    global::System.Nullable<int> PointMethod, 
                    global::System.Nullable<decimal> Fee, 
                    string BizNo, 
                    string Name, 
                    string ExcelExportYN, 
                    string EtaxCanCelYN, 
                    string trusteeMgtKey, 
                    global::System.Nullable<global::System.DateTime> TransportDate, 
                    string StartState, 
                    string StopState) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(RequestDate));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(BeginDate));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(EndDate));
            if ((Item == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Item));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(Price));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(VAT));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(Amount));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(PayState));
            if ((PayDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(PayDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((PayBankName == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(PayBankName));
            }
            if ((PayBankCode == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(PayBankCode));
            }
            if ((PayAccountNo == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(PayAccountNo));
            }
            if ((PayInputName == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(PayInputName));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(DriverId));
            if ((ClientId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(ClientId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(UseTax));
            if ((LGD_OID == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(LGD_OID));
            }
            if ((LGD_Result == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(LGD_Result));
            }
            if ((LGD_Accept_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(LGD_Accept_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((LGD_Cancel_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(LGD_Cancel_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((LGD_Last_Function == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(LGD_Last_Function));
            }
            if ((LGD_Last_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(LGD_Last_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(AllowAcc));
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(HasAcc));
            if ((ClientAccId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(ClientAccId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((SUMYN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(SUMYN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((SumPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(SumPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((SumVAT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(SumVAT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((SumAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(SumAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((SUMFROMDate == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(SUMFROMDate));
            }
            if ((SUMToDate == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(SUMToDate));
            }
            if ((Image1 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(Image1));
            }
            if ((Image2 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(Image2));
            }
            if ((Image3 == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(Image3));
            }
            if ((Image4 == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(Image4));
            }
            if ((Image5 == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(Image5));
            }
            if ((Image6 == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(Image6));
            }
            if ((Image7 == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(Image7));
            }
            if ((Image8 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(Image8));
            }
            if ((Image9 == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(Image9));
            }
            if ((Image10 == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(Image10));
            }
            this.Adapter.InsertCommand.Parameters[41].Value = ((bool)(HasETax));
            this.Adapter.InsertCommand.Parameters[42].Value = ((int)(SourceType));
            this.Adapter.InsertCommand.Parameters[43].Value = ((int)(AcceptCount));
            if ((SubClientId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((int)(SubClientId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((ClientUserId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((int)(ClientUserId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((PointMethod.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((int)(PointMethod.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Fee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((decimal)(Fee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((BizNo == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(BizNo));
            }
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(Name));
            }
            if ((ExcelExportYN == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(ExcelExportYN));
            }
            if ((EtaxCanCelYN == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(EtaxCanCelYN));
            }
            if ((trusteeMgtKey == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(trusteeMgtKey));
            }
            if ((TransportDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((System.DateTime)(TransportDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((StartState == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(StartState));
            }
            if ((StopState == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(StopState));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime RequestDate, 
                    System.DateTime BeginDate, 
                    System.DateTime EndDate, 
                    string Item, 
                    decimal Price, 
                    decimal VAT, 
                    decimal Amount, 
                    int PayState, 
                    global::System.Nullable<global::System.DateTime> PayDate, 
                    string PayBankName, 
                    string PayBankCode, 
                    string PayAccountNo, 
                    string PayInputName, 
                    int DriverId, 
                    global::System.Nullable<int> ClientId, 
                    bool UseTax, 
                    string LGD_OID, 
                    string LGD_Result, 
                    global::System.Nullable<global::System.DateTime> LGD_Accept_Date, 
                    global::System.Nullable<global::System.DateTime> LGD_Cancel_Date, 
                    string LGD_Last_Function, 
                    global::System.Nullable<global::System.DateTime> LGD_Last_Date, 
                    bool AllowAcc, 
                    bool HasAcc, 
                    global::System.Nullable<int> ClientAccId, 
                    global::System.Nullable<int> SUMYN, 
                    global::System.Nullable<decimal> SumPrice, 
                    global::System.Nullable<decimal> SumVAT, 
                    global::System.Nullable<decimal> SumAmount, 
                    string SUMFROMDate, 
                    string SUMToDate, 
                    string Image1, 
                    string Image2, 
                    string Image3, 
                    string Image4, 
                    string Image5, 
                    string Image6, 
                    string Image7, 
                    string Image8, 
                    string Image9, 
                    string Image10, 
                    bool HasETax, 
                    int SourceType, 
                    int AcceptCount, 
                    global::System.Nullable<int> SubClientId, 
                    global::System.Nullable<int> ClientUserId, 
                    global::System.Nullable<int> PointMethod, 
                    global::System.Nullable<decimal> Fee, 
                    string BizNo, 
                    string Name, 
                    string ExcelExportYN, 
                    string EtaxCanCelYN, 
                    string trusteeMgtKey, 
                    global::System.Nullable<global::System.DateTime> TransportDate, 
                    string StartState, 
                    string StopState, 
                    int Original_TradeId, 
                    System.DateTime Original_RequestDate, 
                    System.DateTime Original_BeginDate, 
                    System.DateTime Original_EndDate, 
                    decimal Original_Price, 
                    decimal Original_VAT, 
                    decimal Original_Amount, 
                    int Original_PayState, 
                    global::System.Nullable<global::System.DateTime> Original_PayDate, 
                    int Original_DriverId, 
                    global::System.Nullable<int> Original_ClientId, 
                    bool Original_UseTax, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Accept_Date, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Cancel_Date, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Last_Date, 
                    bool Original_AllowAcc, 
                    bool Original_HasAcc, 
                    global::System.Nullable<int> Original_ClientAccId, 
                    global::System.Nullable<int> Original_SUMYN, 
                    global::System.Nullable<decimal> Original_SumPrice, 
                    global::System.Nullable<decimal> Original_SumVAT, 
                    global::System.Nullable<decimal> Original_SumAmount, 
                    bool Original_HasETax, 
                    int Original_SourceType, 
                    int Original_AcceptCount, 
                    global::System.Nullable<int> Original_SubClientId, 
                    global::System.Nullable<int> Original_ClientUserId, 
                    global::System.Nullable<int> Original_PointMethod, 
                    global::System.Nullable<decimal> Original_Fee, 
                    global::System.Nullable<global::System.DateTime> Original_TransportDate, 
                    int TradeId) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(RequestDate));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(BeginDate));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(EndDate));
            if ((Item == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Item));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Price));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(VAT));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Amount));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(PayState));
            if ((PayDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(PayDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((PayBankName == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(PayBankName));
            }
            if ((PayBankCode == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(PayBankCode));
            }
            if ((PayAccountNo == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(PayAccountNo));
            }
            if ((PayInputName == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(PayInputName));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(DriverId));
            if ((ClientId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(ClientId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(UseTax));
            if ((LGD_OID == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(LGD_OID));
            }
            if ((LGD_Result == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(LGD_Result));
            }
            if ((LGD_Accept_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(LGD_Accept_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((LGD_Cancel_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(LGD_Cancel_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((LGD_Last_Function == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(LGD_Last_Function));
            }
            if ((LGD_Last_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(LGD_Last_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(AllowAcc));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(HasAcc));
            if ((ClientAccId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(ClientAccId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((SUMYN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(SUMYN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((SumPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(SumPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((SumVAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(SumVAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((SumAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(SumAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((SUMFROMDate == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(SUMFROMDate));
            }
            if ((SUMToDate == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(SUMToDate));
            }
            if ((Image1 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Image1));
            }
            if ((Image2 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Image2));
            }
            if ((Image3 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Image3));
            }
            if ((Image4 == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Image4));
            }
            if ((Image5 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Image5));
            }
            if ((Image6 == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Image6));
            }
            if ((Image7 == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Image7));
            }
            if ((Image8 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Image8));
            }
            if ((Image9 == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Image9));
            }
            if ((Image10 == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Image10));
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((bool)(HasETax));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(SourceType));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(AcceptCount));
            if ((SubClientId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(SubClientId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((ClientUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(ClientUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((PointMethod.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(PointMethod.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Fee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(Fee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((BizNo == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(BizNo));
            }
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Name));
            }
            if ((ExcelExportYN == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(ExcelExportYN));
            }
            if ((EtaxCanCelYN == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(EtaxCanCelYN));
            }
            if ((trusteeMgtKey == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(trusteeMgtKey));
            }
            if ((TransportDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(TransportDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((StartState == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(StartState));
            }
            if ((StopState == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(StopState));
            }
            this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(Original_TradeId));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(Original_RequestDate));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((System.DateTime)(Original_BeginDate));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((System.DateTime)(Original_EndDate));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((decimal)(Original_Price));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((decimal)(Original_VAT));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((decimal)(Original_Amount));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(Original_PayState));
            if ((Original_PayDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((System.DateTime)(Original_PayDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(Original_DriverId));
            if ((Original_ClientId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Original_ClientId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[69].Value = ((bool)(Original_UseTax));
            if ((Original_LGD_Accept_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((System.DateTime)(Original_LGD_Accept_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_LGD_Cancel_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((System.DateTime)(Original_LGD_Cancel_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_LGD_Last_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((System.DateTime)(Original_LGD_Last_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[76].Value = ((bool)(Original_AllowAcc));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((bool)(Original_HasAcc));
            if ((Original_ClientAccId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(Original_ClientAccId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_SUMYN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(Original_SUMYN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_SumPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((decimal)(Original_SumPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_SumVAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((decimal)(Original_SumVAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_SumAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((decimal)(Original_SumAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[88].Value = ((bool)(Original_HasETax));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((int)(Original_SourceType));
            this.Adapter.UpdateCommand.Parameters[90].Value = ((int)(Original_AcceptCount));
            if ((Original_SubClientId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((int)(Original_SubClientId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_ClientUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((int)(Original_ClientUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_PointMethod.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((int)(Original_PointMethod.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Original_Fee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((decimal)(Original_Fee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_TransportDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((System.DateTime)(Original_TransportDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[101].Value = ((int)(TradeId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime RequestDate, 
                    System.DateTime BeginDate, 
                    System.DateTime EndDate, 
                    string Item, 
                    decimal Price, 
                    decimal VAT, 
                    decimal Amount, 
                    int PayState, 
                    global::System.Nullable<global::System.DateTime> PayDate, 
                    string PayBankName, 
                    string PayBankCode, 
                    string PayAccountNo, 
                    string PayInputName, 
                    int DriverId, 
                    global::System.Nullable<int> ClientId, 
                    bool UseTax, 
                    string LGD_OID, 
                    string LGD_Result, 
                    global::System.Nullable<global::System.DateTime> LGD_Accept_Date, 
                    global::System.Nullable<global::System.DateTime> LGD_Cancel_Date, 
                    string LGD_Last_Function, 
                    global::System.Nullable<global::System.DateTime> LGD_Last_Date, 
                    bool AllowAcc, 
                    bool HasAcc, 
                    global::System.Nullable<int> ClientAccId, 
                    global::System.Nullable<int> SUMYN, 
                    global::System.Nullable<decimal> SumPrice, 
                    global::System.Nullable<decimal> SumVAT, 
                    global::System.Nullable<decimal> SumAmount, 
                    string SUMFROMDate, 
                    string SUMToDate, 
                    string Image1, 
                    string Image2, 
                    string Image3, 
                    string Image4, 
                    string Image5, 
                    string Image6, 
                    string Image7, 
                    string Image8, 
                    string Image9, 
                    string Image10, 
                    bool HasETax, 
                    int SourceType, 
                    int AcceptCount, 
                    global::System.Nullable<int> SubClientId, 
                    global::System.Nullable<int> ClientUserId, 
                    global::System.Nullable<int> PointMethod, 
                    global::System.Nullable<decimal> Fee, 
                    string BizNo, 
                    string Name, 
                    string ExcelExportYN, 
                    string EtaxCanCelYN, 
                    string trusteeMgtKey, 
                    global::System.Nullable<global::System.DateTime> TransportDate, 
                    string StartState, 
                    string StopState, 
                    int Original_TradeId, 
                    System.DateTime Original_RequestDate, 
                    System.DateTime Original_BeginDate, 
                    System.DateTime Original_EndDate, 
                    decimal Original_Price, 
                    decimal Original_VAT, 
                    decimal Original_Amount, 
                    int Original_PayState, 
                    global::System.Nullable<global::System.DateTime> Original_PayDate, 
                    int Original_DriverId, 
                    global::System.Nullable<int> Original_ClientId, 
                    bool Original_UseTax, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Accept_Date, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Cancel_Date, 
                    global::System.Nullable<global::System.DateTime> Original_LGD_Last_Date, 
                    bool Original_AllowAcc, 
                    bool Original_HasAcc, 
                    global::System.Nullable<int> Original_ClientAccId, 
                    global::System.Nullable<int> Original_SUMYN, 
                    global::System.Nullable<decimal> Original_SumPrice, 
                    global::System.Nullable<decimal> Original_SumVAT, 
                    global::System.Nullable<decimal> Original_SumAmount, 
                    bool Original_HasETax, 
                    int Original_SourceType, 
                    int Original_AcceptCount, 
                    global::System.Nullable<int> Original_SubClientId, 
                    global::System.Nullable<int> Original_ClientUserId, 
                    global::System.Nullable<int> Original_PointMethod, 
                    global::System.Nullable<decimal> Original_Fee, 
                    global::System.Nullable<global::System.DateTime> Original_TransportDate) {
            return this.Update(RequestDate, BeginDate, EndDate, Item, Price, VAT, Amount, PayState, PayDate, PayBankName, PayBankCode, PayAccountNo, PayInputName, DriverId, ClientId, UseTax, LGD_OID, LGD_Result, LGD_Accept_Date, LGD_Cancel_Date, LGD_Last_Function, LGD_Last_Date, AllowAcc, HasAcc, ClientAccId, SUMYN, SumPrice, SumVAT, SumAmount, SUMFROMDate, SUMToDate, Image1, Image2, Image3, Image4, Image5, Image6, Image7, Image8, Image9, Image10, HasETax, SourceType, AcceptCount, SubClientId, ClientUserId, PointMethod, Fee, BizNo, Name, ExcelExportYN, EtaxCanCelYN, trusteeMgtKey, TransportDate, StartState, StopState, Original_TradeId, Original_RequestDate, Original_BeginDate, Original_EndDate, Original_Price, Original_VAT, Original_Amount, Original_PayState, Original_PayDate, Original_DriverId, Original_ClientId, Original_UseTax, Original_LGD_Accept_Date, Original_LGD_Cancel_Date, Original_LGD_Last_Date, Original_AllowAcc, Original_HasAcc, Original_ClientAccId, Original_SUMYN, Original_SumPrice, Original_SumVAT, Original_SumAmount, Original_HasETax, Original_SourceType, Original_AcceptCount, Original_SubClientId, Original_ClientUserId, Original_PointMethod, Original_Fee, Original_TransportDate, Original_TradeId);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TaxOutTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public TaxOutTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TaxOut";
            tableMapping.ColumnMappings.Add("DriverBizNo", "DriverBizNo");
            tableMapping.ColumnMappings.Add("DriverCEO", "DriverCEO");
            tableMapping.ColumnMappings.Add("DriverName", "DriverName");
            tableMapping.ColumnMappings.Add("DriverUptae", "DriverUptae");
            tableMapping.ColumnMappings.Add("DriverUpjong", "DriverUpjong");
            tableMapping.ColumnMappings.Add("DriverAddress", "DriverAddress");
            tableMapping.ColumnMappings.Add("ClientBizNo", "ClientBizNo");
            tableMapping.ColumnMappings.Add("ClientName", "ClientName");
            tableMapping.ColumnMappings.Add("ClientCEO", "ClientCEO");
            tableMapping.ColumnMappings.Add("ClientAddress", "ClientAddress");
            tableMapping.ColumnMappings.Add("ClientUptae", "ClientUptae");
            tableMapping.ColumnMappings.Add("ClientUpjong", "ClientUpjong");
            tableMapping.ColumnMappings.Add("PayDate", "PayDate");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("VAT", "VAT");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("Item", "Item");
            tableMapping.ColumnMappings.Add("TradeId", "TradeId");
            tableMapping.ColumnMappings.Add("RequestDate", "RequestDate");
            tableMapping.ColumnMappings.Add("SUMYN", "SUMYN");
            tableMapping.ColumnMappings.Add("SumPrice", "SumPrice");
            tableMapping.ColumnMappings.Add("SumVAT", "SumVAT");
            tableMapping.ColumnMappings.Add("SumAmount", "SumAmount");
            tableMapping.ColumnMappings.Add("SUMFROMDate", "SUMFROMDate");
            tableMapping.ColumnMappings.Add("SUMToDate", "SUMToDate");
            tableMapping.ColumnMappings.Add("BeginDate", "BeginDate");
            tableMapping.ColumnMappings.Add("EndDate", "EndDate");
            tableMapping.ColumnMappings.Add("DivText", "DivText");
            tableMapping.ColumnMappings.Add("Remark1", "Remark1");
            tableMapping.ColumnMappings.Add("Remark2", "Remark2");
            tableMapping.ColumnMappings.Add("Etax", "Etax");
            tableMapping.ColumnMappings.Add("Remark3", "Remark3");
            tableMapping.ColumnMappings.Add("ReferralName", "ReferralName");
            tableMapping.ColumnMappings.Add("Remark4", "Remark4");
            tableMapping.ColumnMappings.Add("Remark5", "Remark5");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::mycalltruck.Admin.Properties.Settings.Default.TruckConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT distinct trades.TradeId, Drivers.BizNo AS DriverBizNo, Drivers.CEO AS Driv" +
                "erCEO, Drivers.Name AS DriverName, Drivers.Uptae AS DriverUptae, Drivers.Upjong " +
                "AS DriverUpjong, \r\n               Drivers.AddressState + N\' \' + Drivers.AddressC" +
                "ity + N\' \' + Drivers.AddressDetail AS DriverAddress, Clients.BizNo AS ClientBizN" +
                "o, Clients.Name AS ClientName, Clients.CEO AS ClientCEO, \r\n               ISNULL" +
                "(Clients.AddressState, \' \') + N\' \' + ISNULL(Clients.AddressCity, \' \') + N\' \' + I" +
                "SNULL(Clients.AddressStreet, \' \') + N\' \' + Clients.AddressDetail AS ClientAddres" +
                "s, \r\n               Clients.Uptae AS ClientUptae, Clients.Upjong AS ClientUpjong" +
                ", Trades.PayDate, Trades.Price, Trades.VAT, Trades.Amount, Trades.Item, Trades.R" +
                "equestDate, Trades.SUMYN, \r\n               Trades.SumPrice, Trades.SumVAT, Trade" +
                "s.SumAmount, Trades.SUMFROMDate, Trades.SUMToDate, Trades.BeginDate, Trades.EndD" +
                "ate, \r\n               CASE WHEN trades.HasETax = 1 THEN N\'전자\' ELSE N\'종이\' END + N" +
                "\'(\' + CASE WHEN trades.HasAcc = 1 THEN N\'카드\' ELSE N\'현금\' END + N\')\' AS DivText, C" +
                "ASE WHEN ISNULL(Trades.StartState, \'\') = \'\' AND ISNULL(Trades.StopState, \'\') \r\n " +
                "              = \'\' THEN \'( ☎ \' + Drivers.MobileNo + \' ) \' ELSE Trades.StartState" +
                " + \' → \' + Trades.StopState + \' ( ☎ \' + Drivers.MobileNo + \' ) \'END AS Remark1\r\n" +
                "  , Trades.PayBankName+\' / \'+ Trades.PayAccountNo +\' / \'+Trades.PayInputName  as" +
                " Remark2\r\n   \r\n\t\t\t   ,case HasETax when 1 then  \'전자세금계산서\' else \'세금계산서\' end as Et" +
                "ax \r\n\t\t\t   ,Drivers.CarNo  Remark3\r\n\t\t\t   ,CASE WHEN ISNULL(Orders.ReferralId,0)" +
                " = 0 THEN \' \' ELSE customers.SangHo end as ReferralName\r\n\t\t\t   , CONVERT(varchar" +
                ", Trades.TransportDate, 111) as Remark4\r\n\t\t\t   , Convert(varchar, trades.Request" +
                "Date, 111 ) as Remark5\r\nFROM     Trades INNER JOIN\r\n               Drivers ON Tr" +
                "ades.DriverId = Drivers.DriverId INNER JOIN\r\n               Clients ON Trades.Cl" +
                "ientId = Clients.ClientId\r\n\t\t\t   left JOIN Orders ON trades.TradeId = orders.Tra" +
                "deId\r\n\t\t\t   left JOIN customers ON orders.ReferralId = customers.customerid and " +
                "customers.ClientId = clients.ClientId\r\n\t\t\t   WHERE  (Trades.TradeId = @TradeId)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TradeId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TradeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TradeDataSet.TaxOutDataTable dataTable, int TradeId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(TradeId));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TradeDataSet.TaxOutDataTable GetData(int TradeId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(TradeId));
            TradeDataSet.TaxOutDataTable dataTable = new TradeDataSet.TaxOutDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TradesTableAdapter _tradesTableAdapter;
        
        private TradesBasKetTableAdapter _tradesBasKetTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TradesTableAdapter TradesTableAdapter {
            get {
                return this._tradesTableAdapter;
            }
            set {
                this._tradesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TradesBasKetTableAdapter TradesBasKetTableAdapter {
            get {
                return this._tradesBasKetTableAdapter;
            }
            set {
                this._tradesBasKetTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tradesTableAdapter != null) 
                            && (this._tradesTableAdapter.Connection != null))) {
                    return this._tradesTableAdapter.Connection;
                }
                if (((this._tradesBasKetTableAdapter != null) 
                            && (this._tradesBasKetTableAdapter.Connection != null))) {
                    return this._tradesBasKetTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tradesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tradesBasKetTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(TradeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tradesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Trades.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tradesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tradesBasKetTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TradesBasKet.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tradesBasKetTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(TradeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tradesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Trades.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tradesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tradesBasKetTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TradesBasKet.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tradesBasKetTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(TradeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tradesBasKetTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TradesBasKet.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tradesBasKetTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tradesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Trades.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tradesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(TradeDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tradesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tradesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._tradesBasKetTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tradesBasKetTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager에 연결 정보가 없습니다. 각 TableAdapterManager TableAdapter 속성을 올바른 Tabl" +
                        "eAdapter 인스턴스로 설정하십시오.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("트랜잭션을 시작할 수 없습니다. 현재 데이터 연결에서 트랜잭션이 지원되지 않거나 현재 상태에서 트랜잭션을 시작할 수 없습니다.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tradesTableAdapter != null)) {
                    revertConnections.Add(this._tradesTableAdapter, this._tradesTableAdapter.Connection);
                    this._tradesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tradesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tradesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tradesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tradesTableAdapter.Adapter);
                    }
                }
                if ((this._tradesBasKetTableAdapter != null)) {
                    revertConnections.Add(this._tradesBasKetTableAdapter, this._tradesBasKetTableAdapter.Connection);
                    this._tradesBasKetTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tradesBasKetTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tradesBasKetTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tradesBasKetTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tradesBasKetTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tradesTableAdapter != null)) {
                    this._tradesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tradesTableAdapter]));
                    this._tradesTableAdapter.Transaction = null;
                }
                if ((this._tradesBasKetTableAdapter != null)) {
                    this._tradesBasKetTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tradesBasKetTableAdapter]));
                    this._tradesBasKetTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591